{
  "interfaces": {
    "Slf4JLogService": {
      "file_path": "/Users/shashivelur/Projects/openmrs-core/api/src/main/java/liquibase/ext/logging/slf4j/Slf4JLogService.java",
      "class_name": "Slf4JLogService",
      "type": "interface",
      "metrics": {
        "halstead": {
          "vocabulary": 105,
          "length": 248,
          "volume": 1665.1328883811984,
          "difficulty": 18.371951219512198,
          "effort": 30591.740199344826,
          "time": 1699.5411221858237,
          "bugs": 0.5550442961270662
        },
        "cyclomatic_complexity": 3,
        "lcom": 0,
        "cbo": 1,
        "fan_in": 0,
        "fan_out": 1,
        "lines_of_code": 37,
        "effective_lines": 16,
        "comment_ratio": 0.3783783783783784,
        "method_count": 2,
        "field_count": 1,
        "import_count": 4
      },
      "elements": {
        "imports": [
          "java.util.HashMap",
          "java.util.Map",
          "liquibase.logging.Logger",
          "liquibase.logging.core.AbstractLogService"
        ],
        "class_name": "Slf4JLogService",
        "methods": [
          "getPriority",
          "getLog"
        ],
        "fields": [
          "loggers"
        ],
        "method_calls": [
          [
            "loggers",
            "computeIfAbsent"
          ]
        ],
        "annotations": [
          "link",
          "since",
          "Override",
          "Override"
        ],
        "extends": "AbstractLogService",
        "implements": [],
        "lines_of_code": 37,
        "comment_lines": 14,
        "blank_lines": 7
      }
    },
    "AlertService": {
      "file_path": "/Users/shashivelur/Projects/openmrs-core/api/src/main/java/org/openmrs/notification/AlertService.java",
      "class_name": "",
      "type": "interface",
      "metrics": {
        "halstead": {
          "vocabulary": 217,
          "length": 898,
          "volume": 6969.873006735143,
          "difficulty": 29.276923076923076,
          "effort": 204056.43587410732,
          "time": 11336.46865967263,
          "bugs": 2.3232910022450475
        },
        "cyclomatic_complexity": 14,
        "lcom": 0,
        "cbo": 6,
        "fan_in": 0,
        "fan_out": 2,
        "lines_of_code": 140,
        "effective_lines": 29,
        "comment_ratio": 0.6928571428571428,
        "method_count": 0,
        "field_count": 8,
        "import_count": 7
      },
      "elements": {
        "imports": [
          "java.util.List",
          "org.openmrs.User",
          "org.openmrs.annotation.Authorized",
          "org.openmrs.api.APIException",
          "org.openmrs.api.OpenmrsService",
          "org.openmrs.notification.db.AlertDAO",
          "org.openmrs.util.PrivilegeConstants"
        ],
        "class_name": "",
        "methods": [],
        "fields": [
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException"
        ],
        "method_calls": [
          [
            "alert",
            "set___"
          ],
          [
            "Context",
            "getAlertService"
          ]
        ],
        "annotations": [
          "param",
          "param",
          "return",
          "throws",
          "Authorized",
          "param",
          "return",
          "throws",
          "Authorized",
          "param",
          "throws",
          "Authorized",
          "param",
          "return",
          "see",
          "throws",
          "Authorized",
          "param",
          "return",
          "throws",
          "Authorized",
          "param",
          "param",
          "param",
          "return",
          "throws",
          "Authorized",
          "return",
          "throws",
          "Authorized",
          "param",
          "return",
          "throws",
          "Authorized",
          "param",
          "param",
          "param",
          "Authorized"
        ],
        "extends": "",
        "implements": [],
        "lines_of_code": 140,
        "comment_lines": 97,
        "blank_lines": 14
      }
    },
    "MessageService": {
      "file_path": "/Users/shashivelur/Projects/openmrs-core/api/src/main/java/org/openmrs/notification/MessageService.java",
      "class_name": "",
      "type": "interface",
      "metrics": {
        "halstead": {
          "vocabulary": 147,
          "length": 570,
          "volume": 4103.813236556728,
          "difficulty": 24.56640625,
          "effort": 100815.94314337993,
          "time": 5600.885730187774,
          "bugs": 1.3679377455189095
        },
        "cyclomatic_complexity": 4,
        "lcom": 0,
        "cbo": 2,
        "fan_in": 0,
        "fan_out": 0,
        "lines_of_code": 91,
        "effective_lines": 29,
        "comment_ratio": 0.4065934065934066,
        "method_count": 0,
        "field_count": 15,
        "import_count": 5
      },
      "elements": {
        "imports": [
          "java.util.Collection",
          "java.util.List",
          "java.util.Map",
          "org.openmrs.Role",
          "org.openmrs.User"
        ],
        "class_name": "",
        "methods": [],
        "fields": [
          "MessageException",
          "MessageException",
          "MessageException",
          "MessageException",
          "MessageException",
          "MessageException",
          "MessageException",
          "MessageException",
          "MessageException",
          "MessageException",
          "MessageException",
          "MessageException",
          "MessageException",
          "MessageException",
          "MessageException"
        ],
        "method_calls": [],
        "annotations": [
          "param",
          "throws",
          "param",
          "param",
          "param",
          "param",
          "return",
          "throws"
        ],
        "extends": "",
        "implements": [],
        "lines_of_code": 91,
        "comment_lines": 37,
        "blank_lines": 25
      }
    },
    "LogicService": {
      "file_path": "/Users/shashivelur/Projects/openmrs-core/api/src/main/java/org/openmrs/logic/LogicService.java",
      "class_name": "",
      "type": "interface",
      "metrics": {
        "halstead": {
          "vocabulary": 360,
          "length": 2883,
          "volume": 24482.01247671845,
          "difficulty": 65.31137724550898,
          "effort": 1598953.9525962162,
          "time": 88830.77514423424,
          "bugs": 8.160670825572817
        },
        "cyclomatic_complexity": 44,
        "lcom": 0,
        "cbo": 5,
        "fan_in": 0,
        "fan_out": 6,
        "lines_of_code": 367,
        "effective_lines": 42,
        "comment_ratio": 0.7929155313351499,
        "method_count": 2,
        "field_count": 13,
        "import_count": 8
      },
      "elements": {
        "imports": [
          "java.util.List",
          "java.util.Map",
          "java.util.Set",
          "org.openmrs.Cohort",
          "org.openmrs.logic.datasource.LogicDataSource",
          "org.openmrs.logic.result.Result",
          "org.openmrs.logic.result.Result.Datatype",
          "org.openmrs.logic.rule.RuleParameterInfo"
        ],
        "class_name": "",
        "methods": [
          "addRule",
          "eval"
        ],
        "fields": [
          "LogicException",
          "LogicException",
          "LogicException",
          "LogicException",
          "LogicException",
          "LogicException",
          "LogicException",
          "LogicException",
          "LogicException",
          "LogicException",
          "LogicException",
          "LogicException",
          "LogicException"
        ],
        "method_calls": [
          [
            "Context",
            "getPatientService"
          ],
          [
            "Context",
            "getLogicService"
          ],
          [
            "logicService",
            "eval"
          ],
          [
            "result",
            "toBoolean"
          ],
          [
            "logicService",
            "eval"
          ],
          [
            "Duration",
            "months"
          ],
          [
            "Calendar",
            "getInstance"
          ],
          [
            "calendar",
            "set"
          ],
          [
            "calendar",
            "getTime"
          ],
          [
            "logicService",
            "eval"
          ],
          [
            "Duration",
            "months"
          ],
          [
            "logicService",
            "parseString"
          ]
        ],
        "annotations": [
          "foo",
          "person",
          "see",
          "see",
          "see",
          "return",
          "param",
          "return",
          "param",
          "param",
          "throws",
          "see",
          "param",
          "param",
          "param",
          "throws",
          "param",
          "return",
          "throws",
          "param",
          "param",
          "throws",
          "param",
          "throws",
          "param",
          "param",
          "return",
          "throws",
          "see",
          "since",
          "param",
          "param",
          "param",
          "return",
          "throws",
          "see",
          "since",
          "param",
          "param",
          "return",
          "throws",
          "since",
          "param",
          "param",
          "param",
          "return",
          "throws",
          "since",
          "link",
          "param",
          "param",
          "param",
          "return",
          "throws",
          "see",
          "since",
          "link",
          "link",
          "param",
          "param",
          "param",
          "return",
          "throws",
          "since",
          "param",
          "param",
          "return",
          "throws",
          "see",
          "param",
          "param",
          "param",
          "return",
          "throws",
          "see",
          "param",
          "param",
          "return",
          "throws",
          "param",
          "param",
          "param",
          "return",
          "throws",
          "param",
          "param",
          "return",
          "throws",
          "param",
          "param",
          "param",
          "param",
          "param",
          "return",
          "param",
          "return",
          "param",
          "return",
          "param",
          "return",
          "return",
          "return",
          "param",
          "return",
          "param",
          "return"
        ],
        "extends": "",
        "implements": [],
        "lines_of_code": 367,
        "comment_lines": 291,
        "blank_lines": 34
      }
    },
    "MessageSourceService": {
      "file_path": "/Users/shashivelur/Projects/openmrs-core/api/src/main/java/org/openmrs/messagesource/MessageSourceService.java",
      "class_name": "",
      "type": "interface",
      "metrics": {
        "halstead": {
          "vocabulary": 120,
          "length": 321,
          "volume": 2217.1118811903343,
          "difficulty": 17.400990099009903,
          "effort": 38579.941892990224,
          "time": 2143.3301051661238,
          "bugs": 0.7390372937301114
        },
        "cyclomatic_complexity": 2,
        "lcom": 0,
        "cbo": 0,
        "fan_in": 0,
        "fan_out": 0,
        "lines_of_code": 53,
        "effective_lines": 9,
        "comment_ratio": 0.660377358490566,
        "method_count": 0,
        "field_count": 0,
        "import_count": 1
      },
      "elements": {
        "imports": [
          "java.util.Set"
        ],
        "class_name": "",
        "methods": [],
        "fields": [],
        "method_calls": [],
        "annotations": [
          "see",
          "param",
          "return",
          "return",
          "param",
          "return",
          "param"
        ],
        "extends": "",
        "implements": [],
        "lines_of_code": 53,
        "comment_lines": 35,
        "blank_lines": 9
      }
    },
    "SchedulerService": {
      "file_path": "/Users/shashivelur/Projects/openmrs-core/api/src/main/java/org/openmrs/scheduler/SchedulerService.java",
      "class_name": "",
      "type": "interface",
      "metrics": {
        "halstead": {
          "vocabulary": 207,
          "length": 922,
          "volume": 7093.394974814378,
          "difficulty": 28.056451612903224,
          "effort": 199015.49288209048,
          "time": 11056.416271227248,
          "bugs": 2.3644649916047924
        },
        "cyclomatic_complexity": 5,
        "lcom": 0,
        "cbo": 4,
        "fan_in": 0,
        "fan_out": 0,
        "lines_of_code": 171,
        "effective_lines": 44,
        "comment_ratio": 0.6081871345029239,
        "method_count": 4,
        "field_count": 4,
        "import_count": 6
      },
      "elements": {
        "imports": [
          "java.util.Collection",
          "java.util.SortedMap",
          "org.openmrs.annotation.Authorized",
          "org.openmrs.annotation.Logging",
          "org.openmrs.api.OpenmrsService",
          "org.openmrs.util.OpenmrsMemento"
        ],
        "class_name": "",
        "methods": [
          "shutdownTask",
          "scheduleTask",
          "rescheduleTask",
          "rescheduleAllTasks"
        ],
        "fields": [
          "SchedulerException",
          "SchedulerException",
          "SchedulerException",
          "SchedulerException"
        ],
        "method_calls": [],
        "annotations": [
          "param",
          "return",
          "Authorized",
          "Override",
          "Authorized",
          "Override",
          "Authorized",
          "param",
          "Authorized",
          "param",
          "return",
          "Authorized",
          "param",
          "Authorized",
          "Authorized",
          "return",
          "Authorized",
          "return",
          "Authorized",
          "param",
          "Authorized",
          "since",
          "param",
          "Authorized",
          "param",
          "Authorized",
          "param",
          "Authorized",
          "param",
          "Authorized",
          "Logging",
          "return",
          "return",
          "param",
          "param",
          "since"
        ],
        "extends": "",
        "implements": [],
        "lines_of_code": 171,
        "comment_lines": 104,
        "blank_lines": 23
      }
    },
    "VisitService": {
      "file_path": "/Users/shashivelur/Projects/openmrs-core/api/src/main/java/org/openmrs/api/VisitService.java",
      "class_name": "",
      "type": "interface",
      "metrics": {
        "halstead": {
          "vocabulary": 342,
          "length": 2892,
          "volume": 24344.429473050015,
          "difficulty": 60.96081504702194,
          "effort": 1484056.2625318717,
          "time": 82447.57014065953,
          "bugs": 8.114809824350004
        },
        "cyclomatic_complexity": 28,
        "lcom": 0,
        "cbo": 11,
        "fan_in": 0,
        "fan_out": 0,
        "lines_of_code": 397,
        "effective_lines": 84,
        "comment_ratio": 0.7002518891687658,
        "method_count": 3,
        "field_count": 11,
        "import_count": 15
      },
      "elements": {
        "imports": [
          "java.util.Collection",
          "java.util.Date",
          "java.util.List",
          "java.util.Map",
          "org.openmrs.Concept",
          "org.openmrs.Location",
          "org.openmrs.Patient",
          "org.openmrs.Visit",
          "org.openmrs.VisitAttribute",
          "org.openmrs.VisitAttributeType",
          "org.openmrs.VisitType",
          "org.openmrs.annotation.Authorized",
          "org.openmrs.parameter.VisitSearchCriteria",
          "org.openmrs.util.OpenmrsConstants",
          "org.openmrs.util.PrivilegeConstants"
        ],
        "class_name": "",
        "methods": [
          "getAllVisits",
          "saveVisit",
          "endVisit"
        ],
        "fields": [
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException"
        ],
        "method_calls": [],
        "annotations": [
          "since",
          "return",
          "Authorized",
          "param",
          "return",
          "since",
          "Authorized",
          "param",
          "return",
          "Authorized",
          "param",
          "return",
          "Authorized",
          "param",
          "return",
          "Authorized",
          "param",
          "return",
          "Authorized",
          "param",
          "param",
          "return",
          "Authorized",
          "param",
          "return",
          "Authorized",
          "param",
          "Authorized",
          "return",
          "throws",
          "Authorized",
          "param",
          "return",
          "throws",
          "Authorized",
          "param",
          "return",
          "throws",
          "Authorized",
          "param",
          "return",
          "throws",
          "Authorized",
          "param",
          "param",
          "return",
          "Authorized",
          "param",
          "param",
          "return",
          "throws",
          "Authorized",
          "param",
          "return",
          "throws",
          "Authorized",
          "param",
          "throws",
          "Authorized",
          "param",
          "param",
          "param",
          "param",
          "param",
          "param",
          "param",
          "param",
          "param",
          "return",
          "see",
          "throws",
          "Authorized",
          "param",
          "return",
          "throws",
          "since",
          "since",
          "Authorized",
          "param",
          "return",
          "throws",
          "Authorized",
          "param",
          "return",
          "throws",
          "Authorized",
          "param",
          "param",
          "param",
          "return",
          "throws",
          "Authorized",
          "return",
          "link",
          "Authorized",
          "param",
          "return",
          "link",
          "Authorized",
          "param",
          "return",
          "link",
          "Authorized",
          "param",
          "return",
          "Authorized",
          "param",
          "return",
          "Authorized",
          "param",
          "return",
          "Authorized",
          "param",
          "Authorized",
          "param",
          "return",
          "link",
          "Authorized",
          "link",
          "param",
          "Authorized"
        ],
        "extends": "",
        "implements": [],
        "lines_of_code": 397,
        "comment_lines": 278,
        "blank_lines": 35
      }
    },
    "DiagnosisService": {
      "file_path": "/Users/shashivelur/Projects/openmrs-core/api/src/main/java/org/openmrs/api/DiagnosisService.java",
      "class_name": "",
      "type": "interface",
      "metrics": {
        "halstead": {
          "vocabulary": 252,
          "length": 1599,
          "volume": 12755.670597676366,
          "difficulty": 43.90909090909091,
          "effort": 560089.8998797894,
          "time": 31116.105548877193,
          "bugs": 4.251890199225455
        },
        "cyclomatic_complexity": 15,
        "lcom": 0,
        "cbo": 8,
        "fan_in": 0,
        "fan_out": 0,
        "lines_of_code": 246,
        "effective_lines": 50,
        "comment_ratio": 0.6869918699186992,
        "method_count": 0,
        "field_count": 0,
        "import_count": 10
      },
      "elements": {
        "imports": [
          "org.openmrs.DiagnosisAttribute",
          "org.openmrs.DiagnosisAttributeType",
          "org.openmrs.Encounter",
          "org.openmrs.Patient",
          "org.openmrs.Diagnosis",
          "org.openmrs.Visit",
          "org.openmrs.annotation.Authorized",
          "org.openmrs.util.PrivilegeConstants",
          "java.util.Date",
          "java.util.List"
        ],
        "class_name": "",
        "methods": [],
        "fields": [],
        "method_calls": [],
        "annotations": [
          "since",
          "param",
          "return",
          "Authorized",
          "param",
          "param",
          "return",
          "Authorized",
          "param",
          "return",
          "Authorized",
          "param",
          "param",
          "return",
          "Authorized",
          "param",
          "param",
          "param",
          "return",
          "since",
          "Authorized",
          "param",
          "param",
          "param",
          "return",
          "since",
          "Authorized",
          "deprecated",
          "link",
          "param",
          "return",
          "Deprecated",
          "param",
          "param",
          "return",
          "param",
          "return",
          "Authorized",
          "param",
          "throws",
          "return",
          "Authorized",
          "param",
          "throws",
          "see",
          "Authorized",
          "return",
          "link",
          "since",
          "Authorized",
          "param",
          "return",
          "link",
          "since",
          "Authorized",
          "param",
          "return",
          "link",
          "since",
          "Authorized",
          "param",
          "return",
          "since",
          "Authorized",
          "param",
          "param",
          "return",
          "since",
          "Authorized",
          "param",
          "return",
          "since",
          "Authorized",
          "param",
          "since",
          "Authorized",
          "param",
          "return",
          "link",
          "since",
          "Authorized"
        ],
        "extends": "",
        "implements": [],
        "lines_of_code": 246,
        "comment_lines": 169,
        "blank_lines": 27
      }
    },
    "FormService": {
      "file_path": "/Users/shashivelur/Projects/openmrs-core/api/src/main/java/org/openmrs/api/FormService.java",
      "class_name": "",
      "type": "interface",
      "metrics": {
        "halstead": {
          "vocabulary": 486,
          "length": 4762,
          "volume": 42499.95714217073,
          "difficulty": 83.38235294117648,
          "effort": 3543746.426413354,
          "time": 196874.80146740854,
          "bugs": 14.166652380723576
        },
        "cyclomatic_complexity": 41,
        "lcom": 0,
        "cbo": 10,
        "fan_in": 0,
        "fan_out": 0,
        "lines_of_code": 645,
        "effective_lines": 113,
        "comment_ratio": 0.7395348837209302,
        "method_count": 2,
        "field_count": 46,
        "import_count": 12
      },
      "elements": {
        "imports": [
          "java.util.Collection",
          "java.util.List",
          "org.openmrs.Concept",
          "org.openmrs.EncounterType",
          "org.openmrs.Field",
          "org.openmrs.FieldAnswer",
          "org.openmrs.FieldType",
          "org.openmrs.Form",
          "org.openmrs.FormField",
          "org.openmrs.FormResource",
          "org.openmrs.annotation.Authorized",
          "org.openmrs.util.PrivilegeConstants"
        ],
        "class_name": "",
        "methods": [
          "saveForm",
          "getForm"
        ],
        "fields": [
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "FormsLockedException"
        ],
        "method_calls": [],
        "annotations": [
          "param",
          "return",
          "throws",
          "Authorized",
          "param",
          "return",
          "throws",
          "Authorized",
          "param",
          "return",
          "throws",
          "Authorized",
          "param",
          "return",
          "Authorized",
          "link",
          "param",
          "param",
          "return",
          "throws",
          "Authorized",
          "return",
          "throws",
          "Authorized",
          "param",
          "return",
          "throws",
          "Authorized",
          "param",
          "param",
          "return",
          "Authorized",
          "param",
          "param",
          "param",
          "param",
          "param",
          "param",
          "param",
          "return",
          "Authorized",
          "link",
          "see",
          "Authorized",
          "return",
          "throws",
          "Authorized",
          "throws",
          "Authorized",
          "param",
          "return",
          "throws",
          "Authorized",
          "param",
          "param",
          "throws",
          "Authorized",
          "param",
          "throws",
          "Authorized",
          "param",
          "throws",
          "Authorized",
          "param",
          "param",
          "throws",
          "Authorized",
          "return",
          "throws",
          "Authorized",
          "param",
          "return",
          "throws",
          "Authorized",
          "param",
          "return",
          "throws",
          "Authorized",
          "param",
          "return",
          "since",
          "param",
          "return",
          "param",
          "return",
          "throws",
          "Authorized",
          "return",
          "throws",
          "Authorized",
          "param",
          "return",
          "throws",
          "Authorized",
          "param",
          "return",
          "throws",
          "Authorized",
          "return",
          "throws",
          "Authorized",
          "param",
          "return",
          "throws",
          "Authorized",
          "param",
          "param",
          "param",
          "param",
          "param",
          "param",
          "param",
          "param",
          "param",
          "return",
          "throws",
          "Authorized",
          "param",
          "return",
          "throws",
          "Authorized",
          "param",
          "return",
          "param",
          "return",
          "param",
          "return",
          "throws",
          "Authorized",
          "param",
          "throws",
          "Authorized",
          "param",
          "param",
          "throws",
          "Authorized",
          "param",
          "return",
          "throws",
          "Authorized",
          "param",
          "return",
          "param",
          "param",
          "param",
          "param",
          "return",
          "throws",
          "Authorized",
          "param",
          "return",
          "throws",
          "Authorized",
          "param",
          "throws",
          "Authorized",
          "param",
          "return",
          "throws",
          "Authorized",
          "param",
          "return",
          "throws",
          "Authorized",
          "param",
          "return",
          "throws",
          "Authorized",
          "param",
          "throws",
          "Authorized",
          "param",
          "since",
          "param",
          "since",
          "param",
          "param",
          "since",
          "param",
          "return",
          "throws",
          "since",
          "param",
          "since",
          "param",
          "since",
          "throws"
        ],
        "extends": "",
        "implements": [],
        "lines_of_code": 645,
        "comment_lines": 477,
        "blank_lines": 55
      }
    },
    "SerializationService": {
      "file_path": "/Users/shashivelur/Projects/openmrs-core/api/src/main/java/org/openmrs/api/SerializationService.java",
      "class_name": "",
      "type": "interface",
      "metrics": {
        "halstead": {
          "vocabulary": 197,
          "length": 712,
          "volume": 5426.90089545294,
          "difficulty": 28.197674418604652,
          "effort": 153025.98455201605,
          "time": 8501.443586223113,
          "bugs": 1.8089669651509799
        },
        "cyclomatic_complexity": 11,
        "lcom": 0,
        "cbo": 4,
        "fan_in": 0,
        "fan_out": 0,
        "lines_of_code": 93,
        "effective_lines": 16,
        "comment_ratio": 0.7311827956989247,
        "method_count": 1,
        "field_count": 1,
        "import_count": 5
      },
      "elements": {
        "imports": [
          "java.util.List",
          "org.openmrs.annotation.Authorized",
          "org.openmrs.annotation.Logging",
          "org.openmrs.serialization.OpenmrsSerializer",
          "org.openmrs.serialization.SerializationException"
        ],
        "class_name": "",
        "methods": [
          "serialize"
        ],
        "fields": [
          "SerializationException"
        ],
        "method_calls": [],
        "annotations": [
          "since",
          "return",
          "link",
          "param",
          "return",
          "link",
          "link",
          "param",
          "param",
          "link",
          "return",
          "link",
          "param",
          "param",
          "param",
          "link",
          "return",
          "Logging",
          "Authorized",
          "return"
        ],
        "extends": "",
        "implements": [],
        "lines_of_code": 93,
        "comment_lines": 68,
        "blank_lines": 9
      }
    },
    "AdministrationService": {
      "file_path": "/Users/shashivelur/Projects/openmrs-core/api/src/main/java/org/openmrs/api/AdministrationService.java",
      "class_name": "",
      "type": "interface",
      "metrics": {
        "halstead": {
          "vocabulary": 499,
          "length": 3438,
          "volume": 30814.4364663495,
          "difficulty": 63.74200426439232,
          "effort": 1964173.940642896,
          "time": 109120.7744801609,
          "bugs": 10.2714788221165
        },
        "cyclomatic_complexity": 56,
        "lcom": 0,
        "cbo": 10,
        "fan_in": 0,
        "fan_out": 1,
        "lines_of_code": 424,
        "effective_lines": 72,
        "comment_ratio": 0.7382075471698113,
        "method_count": 0,
        "field_count": 2,
        "import_count": 16
      },
      "elements": {
        "imports": [
          "java.util.List",
          "java.util.Locale",
          "java.util.Map",
          "java.util.Set",
          "java.util.SortedMap",
          "org.openmrs.GlobalProperty",
          "org.openmrs.ImplementationId",
          "org.openmrs.OpenmrsObject",
          "org.openmrs.User",
          "org.openmrs.annotation.Authorized",
          "org.openmrs.api.db.AdministrationDAO",
          "org.openmrs.util.HttpClient",
          "org.openmrs.util.OpenmrsConstants",
          "org.openmrs.util.PrivilegeConstants",
          "org.openmrs.validator.ValidateUtil",
          "org.springframework.validation.Errors"
        ],
        "class_name": "",
        "methods": [],
        "fields": [
          "GP_SUFFIX_SERIALIZER_WHITELIST_TYPES",
          "GP_SERIALIZER_WHITELIST_HIERARCHY_TYPES_PREFIX"
        ],
        "method_calls": [
          [
            "Context",
            "getAdministrationService"
          ]
        ],
        "annotations": [
          "see",
          "param",
          "return",
          "Authorized",
          "return",
          "Authorized",
          "return",
          "Authorized",
          "param",
          "return",
          "see",
          "Authorized",
          "param",
          "param",
          "return",
          "Authorized",
          "param",
          "return",
          "Authorized",
          "param",
          "return",
          "since",
          "Authorized",
          "param",
          "return",
          "since",
          "Authorized",
          "return",
          "Authorized",
          "param",
          "return",
          "Authorized",
          "param",
          "throws",
          "Authorized",
          "param",
          "throws",
          "Authorized",
          "param",
          "param",
          "Authorized",
          "since",
          "param",
          "param",
          "throws",
          "Authorized",
          "param",
          "return",
          "throws",
          "Authorized",
          "see",
          "param",
          "link",
          "param",
          "param",
          "param",
          "return",
          "throws",
          "Authorized",
          "return",
          "Authorized",
          "param",
          "throws",
          "Authorized",
          "link",
          "return",
          "return",
          "param",
          "param",
          "return",
          "since",
          "Authorized",
          "param",
          "param",
          "return",
          "link",
          "since",
          "param",
          "param",
          "param",
          "param",
          "return",
          "throws",
          "return",
          "throws",
          "since",
          "param",
          "return",
          "since",
          "since",
          "since",
          "return"
        ],
        "extends": "",
        "implements": [],
        "lines_of_code": 424,
        "comment_lines": 313,
        "blank_lines": 39
      }
    },
    "UserService": {
      "file_path": "/Users/shashivelur/Projects/openmrs-core/api/src/main/java/org/openmrs/api/UserService.java",
      "class_name": "",
      "type": "interface",
      "metrics": {
        "halstead": {
          "vocabulary": 494,
          "length": 4538,
          "volume": 40607.69049693127,
          "difficulty": 76.14346895074947,
          "effort": 3092010.4205147303,
          "time": 171778.3566952628,
          "bugs": 13.535896832310423
        },
        "cyclomatic_complexity": 59,
        "lcom": 0,
        "cbo": 9,
        "fan_in": 0,
        "fan_out": 1,
        "lines_of_code": 609,
        "effective_lines": 114,
        "comment_ratio": 0.7274220032840722,
        "method_count": 25,
        "field_count": 37,
        "import_count": 12
      },
      "elements": {
        "imports": [
          "java.util.List",
          "java.util.Locale",
          "java.util.Map",
          "org.openmrs.Person",
          "org.openmrs.Privilege",
          "org.openmrs.Role",
          "org.openmrs.User",
          "org.openmrs.annotation.Authorized",
          "org.openmrs.annotation.Logging",
          "org.openmrs.util.PersonByNameComparator",
          "org.openmrs.util.PrivilegeConstants",
          "org.openmrs.notification.MessageException"
        ],
        "class_name": "",
        "methods": [
          "createUser",
          "changePassword",
          "getUser",
          "getUserByUuid",
          "hasDuplicateUsername",
          "getUsersByRole",
          "saveUser",
          "retireUser",
          "unretireUser",
          "purgeUser",
          "purgeUser",
          "saveRole",
          "purgeRole",
          "savePrivilege",
          "purgePrivilege",
          "getAllUsers",
          "changePassword",
          "changePassword",
          "changeHashedPassword",
          "changeQuestionAnswer",
          "isSecretAnswer",
          "getUsers",
          "getUsersByName",
          "getUsersByPerson",
          "getUsers"
        ],
        "fields": [
          "ADMIN_PASSWORD_LOCKED_PROPERTY",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "MessageException"
        ],
        "method_calls": [
          [
            "Context",
            "getUserService"
          ]
        ],
        "annotations": [
          "see",
          "param",
          "param",
          "return",
          "throws",
          "Authorized",
          "Logging",
          "param",
          "param",
          "param",
          "throws",
          "since",
          "Authorized",
          "Logging",
          "param",
          "return",
          "throws",
          "Authorized",
          "param",
          "return",
          "throws",
          "Authorized",
          "param",
          "return",
          "Authorized",
          "param",
          "return",
          "Authorized",
          "param",
          "return",
          "Authorized",
          "param",
          "return",
          "throws",
          "Authorized",
          "param",
          "return",
          "throws",
          "Authorized",
          "param",
          "return",
          "throws",
          "Authorized",
          "param",
          "param",
          "throws",
          "Authorized",
          "param",
          "throws",
          "Authorized",
          "param",
          "Authorized",
          "param",
          "Authorized",
          "return",
          "throws",
          "Authorized",
          "return",
          "throws",
          "Authorized",
          "param",
          "return",
          "throws",
          "Authorized",
          "param",
          "throws",
          "Authorized",
          "param",
          "return",
          "throws",
          "Authorized",
          "param",
          "throws",
          "Authorized",
          "return",
          "throws",
          "Authorized",
          "param",
          "return",
          "Authorized",
          "return",
          "throws",
          "Authorized",
          "param",
          "return",
          "Authorized",
          "return",
          "throws",
          "Authorized",
          "param",
          "param",
          "throws",
          "Authorized",
          "Logging",
          "link",
          "param",
          "param",
          "throws",
          "Authorized",
          "param",
          "param",
          "param",
          "throws",
          "since",
          "Authorized",
          "param",
          "param",
          "param",
          "throws",
          "since",
          "Authorized",
          "Logging",
          "param",
          "param",
          "param",
          "throws",
          "Authorized",
          "Logging",
          "param",
          "return",
          "throws",
          "since",
          "param",
          "param",
          "throws",
          "Logging",
          "link",
          "param",
          "param",
          "param",
          "return",
          "Authorized",
          "param",
          "param",
          "param",
          "return",
          "Authorized",
          "param",
          "param",
          "return",
          "throws",
          "Authorized",
          "param",
          "param",
          "param",
          "return",
          "Authorized",
          "param",
          "param",
          "return",
          "Authorized",
          "return",
          "Authorized",
          "link",
          "param",
          "param",
          "param",
          "param",
          "param",
          "return",
          "since",
          "Authorized",
          "param",
          "param",
          "param",
          "return",
          "since",
          "Authorized",
          "param",
          "param",
          "since",
          "Authorized",
          "param",
          "since",
          "Authorized",
          "param",
          "param",
          "Authorized",
          "param",
          "Authorized",
          "param",
          "param",
          "param",
          "return",
          "since",
          "Authorized",
          "param",
          "return",
          "since",
          "should",
          "should",
          "should",
          "Authorized"
        ],
        "extends": "",
        "implements": [],
        "lines_of_code": 609,
        "comment_lines": 443,
        "blank_lines": 52
      }
    },
    "PatientService": {
      "file_path": "/Users/shashivelur/Projects/openmrs-core/api/src/main/java/org/openmrs/api/PatientService.java",
      "class_name": "",
      "type": "interface",
      "metrics": {
        "halstead": {
          "vocabulary": 657,
          "length": 7780,
          "volume": 72818.85157930772,
          "difficulty": 112.05741626794259,
          "effort": 8159892.363576014,
          "time": 453327.35353200074,
          "bugs": 24.27295052643591
        },
        "cyclomatic_complexity": 78,
        "lcom": 0,
        "cbo": 15,
        "fan_in": 0,
        "fan_out": 1,
        "lines_of_code": 858,
        "effective_lines": 128,
        "comment_ratio": 0.7832167832167832,
        "method_count": 40,
        "field_count": 35,
        "import_count": 18
      },
      "elements": {
        "imports": [
          "java.util.Collection",
          "java.util.Date",
          "java.util.List",
          "org.openmrs.Allergies",
          "org.openmrs.Allergy",
          "org.openmrs.Concept",
          "org.openmrs.Location",
          "org.openmrs.Patient",
          "org.openmrs.PatientIdentifier",
          "org.openmrs.PatientIdentifierType",
          "org.openmrs.PatientProgram",
          "org.openmrs.annotation.Authorized",
          "org.openmrs.api.db.PatientDAO",
          "org.openmrs.comparator.PatientIdentifierTypeDefaultComparator",
          "org.openmrs.patient.IdentifierValidator",
          "org.openmrs.person.PersonMergeLogData",
          "org.openmrs.serialization.SerializationException",
          "org.openmrs.util.PrivilegeConstants"
        ],
        "class_name": "",
        "methods": [
          "savePatient",
          "getPatient",
          "getPatientByUuid",
          "getPatientIdentifierByUuid",
          "getAllPatients",
          "getAllPatients",
          "getPatients",
          "voidPatient",
          "unvoidPatient",
          "purgePatient",
          "getPatientIdentifiers",
          "savePatientIdentifierType",
          "getAllPatientIdentifierTypes",
          "getAllPatientIdentifierTypes",
          "getPatientIdentifierTypes",
          "getPatientIdentifierType",
          "getPatientIdentifierTypeByUuid",
          "getPatientIdentifierTypeByName",
          "retirePatientIdentifierType",
          "unretirePatientIdentifierType",
          "purgePatientIdentifierType",
          "checkPatientIdentifiers",
          "getPatients",
          "getPatients",
          "getPatients",
          "getPatientByExample",
          "getDuplicatePatientsByAttributes",
          "mergePatients",
          "processDeath",
          "saveCauseOfDeathObs",
          "getPatientIdentifier",
          "voidPatientIdentifier",
          "savePatientIdentifier",
          "purgePatientIdentifier",
          "getAllergy",
          "getAllergyByUuid",
          "saveAllergy",
          "removeAllergy",
          "voidAllergy",
          "getPatients"
        ],
        "fields": [
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "PatientIdentifierException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "SerializationException",
          "SerializationException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "PatientIdentifierTypeLockedException"
        ],
        "method_calls": [
          [
            "Context",
            "getPatientService"
          ]
        ],
        "annotations": [
          "see",
          "see",
          "param",
          "param",
          "return",
          "throws",
          "Authorized",
          "param",
          "return",
          "throws",
          "Authorized",
          "param",
          "return",
          "throws",
          "Authorized",
          "param",
          "return",
          "throws",
          "Authorized",
          "param",
          "return",
          "throws",
          "Authorized",
          "return",
          "see",
          "throws",
          "Authorized",
          "param",
          "return",
          "throws",
          "Authorized",
          "param",
          "param",
          "param",
          "param",
          "return",
          "throws",
          "Authorized",
          "param",
          "param",
          "return",
          "Authorized",
          "param",
          "return",
          "Authorized",
          "param",
          "throws",
          "see",
          "Authorized",
          "param",
          "param",
          "param",
          "param",
          "param",
          "return",
          "throws",
          "Authorized",
          "param",
          "return",
          "throws",
          "Authorized",
          "link",
          "return",
          "throws",
          "Authorized",
          "link",
          "param",
          "return",
          "throws",
          "Authorized",
          "link",
          "param",
          "param",
          "param",
          "param",
          "return",
          "throws",
          "Authorized",
          "param",
          "return",
          "throws",
          "Authorized",
          "param",
          "return",
          "throws",
          "Authorized",
          "param",
          "return",
          "throws",
          "Authorized",
          "param",
          "param",
          "return",
          "throws",
          "Authorized",
          "param",
          "return",
          "throws",
          "Authorized",
          "param",
          "throws",
          "Authorized",
          "param",
          "see",
          "throws",
          "Authorized",
          "param",
          "return",
          "Authorized",
          "param",
          "param",
          "param",
          "return",
          "throws",
          "since",
          "Authorized",
          "param",
          "param",
          "param",
          "param",
          "return",
          "throws",
          "since",
          "Authorized",
          "param",
          "return",
          "Authorized",
          "param",
          "return",
          "throws",
          "Authorized",
          "param",
          "param",
          "throws",
          "throws",
          "see",
          "Authorized",
          "param",
          "param",
          "throws",
          "throws",
          "param",
          "param",
          "param",
          "param",
          "throws",
          "Authorized",
          "param",
          "param",
          "param",
          "param",
          "throws",
          "Authorized",
          "param",
          "return",
          "return",
          "param",
          "return",
          "Authorized",
          "param",
          "return",
          "throws",
          "Authorized",
          "param",
          "param",
          "return",
          "throws",
          "Authorized",
          "param",
          "return",
          "throws",
          "Authorized",
          "param",
          "throws",
          "Authorized",
          "param",
          "return",
          "param",
          "param",
          "return",
          "param",
          "return",
          "throws",
          "Authorized",
          "since",
          "param",
          "return",
          "throws",
          "Authorized",
          "param",
          "throws",
          "Authorized",
          "param",
          "param",
          "throws",
          "Authorized",
          "param",
          "param",
          "throws",
          "Authorized",
          "param",
          "return",
          "since",
          "Authorized",
          "param",
          "param",
          "return",
          "Authorized",
          "param",
          "param",
          "param",
          "param",
          "param",
          "param",
          "return",
          "throws",
          "since",
          "Authorized",
          "throws",
          "param",
          "return",
          "since",
          "Authorized"
        ],
        "extends": "",
        "implements": [],
        "lines_of_code": 858,
        "comment_lines": 672,
        "blank_lines": 58
      }
    },
    "ProviderService": {
      "file_path": "/Users/shashivelur/Projects/openmrs-core/api/src/main/java/org/openmrs/api/ProviderService.java",
      "class_name": "",
      "type": "interface",
      "metrics": {
        "halstead": {
          "vocabulary": 275,
          "length": 2594,
          "volume": 21019.928575020786,
          "difficulty": 71.23505976095618,
          "effort": 1497355.868212636,
          "time": 83186.43712292422,
          "bugs": 7.006642858340262
        },
        "cyclomatic_complexity": 38,
        "lcom": 0,
        "cbo": 8,
        "fan_in": 0,
        "fan_out": 0,
        "lines_of_code": 364,
        "effective_lines": 69,
        "comment_ratio": 0.7115384615384616,
        "method_count": 1,
        "field_count": 1,
        "import_count": 11
      },
      "elements": {
        "imports": [
          "java.util.Collection",
          "java.util.List",
          "java.util.Map",
          "org.openmrs.Person",
          "org.openmrs.Provider",
          "org.openmrs.ProviderAttribute",
          "org.openmrs.ProviderAttributeType",
          "org.openmrs.ProviderRole",
          "org.openmrs.annotation.Authorized",
          "org.openmrs.annotation.Handler",
          "org.openmrs.util.PrivilegeConstants"
        ],
        "class_name": "",
        "methods": [
          "isProviderIdentifierUnique"
        ],
        "fields": [
          "APIException"
        ],
        "method_calls": [],
        "annotations": [
          "since",
          "Handler",
          "return",
          "Authorized",
          "param",
          "Authorized",
          "param",
          "param",
          "Authorized",
          "param",
          "Authorized",
          "param",
          "Authorized",
          "param",
          "return",
          "Authorized",
          "param",
          "return",
          "Authorized",
          "param",
          "return",
          "Authorized",
          "param",
          "return",
          "Authorized",
          "param",
          "param",
          "return",
          "since",
          "Authorized",
          "param",
          "param",
          "param",
          "param",
          "param",
          "return",
          "Authorized",
          "param",
          "param",
          "param",
          "param",
          "return",
          "Authorized",
          "param",
          "return",
          "Authorized",
          "param",
          "param",
          "return",
          "since",
          "Authorized",
          "return",
          "param",
          "return",
          "param",
          "return",
          "param",
          "return",
          "param",
          "return",
          "since",
          "Authorized",
          "param",
          "return",
          "param",
          "return",
          "param",
          "return",
          "param",
          "param",
          "return",
          "param",
          "return",
          "param",
          "param",
          "return",
          "throws",
          "Authorized",
          "param",
          "return",
          "link",
          "Authorized",
          "link",
          "return",
          "link",
          "since",
          "Authorized",
          "link",
          "param",
          "return",
          "link",
          "since",
          "Authorized",
          "link",
          "param",
          "return",
          "link",
          "since",
          "Authorized",
          "param",
          "link",
          "return",
          "link",
          "since",
          "Authorized"
        ],
        "extends": "",
        "implements": [],
        "lines_of_code": 364,
        "comment_lines": 259,
        "blank_lines": 36
      }
    },
    "CohortService": {
      "file_path": "/Users/shashivelur/Projects/openmrs-core/api/src/main/java/org/openmrs/api/CohortService.java",
      "class_name": "",
      "type": "interface",
      "metrics": {
        "halstead": {
          "vocabulary": 342,
          "length": 2122,
          "volume": 17862.683036587874,
          "difficulty": 45.206896551724135,
          "effort": 807516.4641712656,
          "time": 44862.025787292536,
          "bugs": 5.954227678862624
        },
        "cyclomatic_complexity": 20,
        "lcom": 0,
        "cbo": 7,
        "fan_in": 0,
        "fan_out": 0,
        "lines_of_code": 294,
        "effective_lines": 56,
        "comment_ratio": 0.7210884353741497,
        "method_count": 11,
        "field_count": 13,
        "import_count": 9
      },
      "elements": {
        "imports": [
          "java.util.Date",
          "java.util.List",
          "org.openmrs.Cohort",
          "org.openmrs.CohortMembership",
          "org.openmrs.Patient",
          "org.openmrs.User",
          "org.openmrs.annotation.Authorized",
          "org.openmrs.api.db.CohortDAO",
          "org.openmrs.util.PrivilegeConstants"
        ],
        "class_name": "",
        "methods": [
          "saveCohort",
          "voidCohort",
          "getCohort",
          "getCohortByName",
          "getCohort",
          "getAllCohorts",
          "getAllCohorts",
          "getCohortsContainingPatient",
          "getCohortsContainingPatientId",
          "addPatientToCohort",
          "removePatientFromCohort"
        ],
        "fields": [
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException"
        ],
        "method_calls": [],
        "annotations": [
          "see",
          "param",
          "param",
          "return",
          "throws",
          "Authorized",
          "param",
          "param",
          "return",
          "throws",
          "Authorized",
          "param",
          "throws",
          "param",
          "return",
          "throws",
          "Authorized",
          "param",
          "return",
          "throws",
          "since",
          "Authorized",
          "deprecated",
          "link",
          "Deprecated",
          "Authorized",
          "return",
          "throws",
          "Authorized",
          "param",
          "return",
          "throws",
          "Authorized",
          "param",
          "return",
          "throws",
          "deprecated",
          "link",
          "param",
          "return",
          "throws",
          "Deprecated",
          "Authorized",
          "param",
          "return",
          "throws",
          "Authorized",
          "param",
          "param",
          "return",
          "throws",
          "Authorized",
          "deprecated",
          "link",
          "link",
          "param",
          "param",
          "return",
          "throws",
          "Deprecated",
          "Authorized",
          "param",
          "return",
          "Authorized",
          "param",
          "return",
          "since",
          "Authorized",
          "since",
          "param",
          "Authorized",
          "param",
          "param",
          "return",
          "since",
          "Authorized",
          "param",
          "param",
          "return",
          "since",
          "Authorized",
          "since",
          "param",
          "Authorized",
          "since",
          "param",
          "param",
          "param",
          "Authorized",
          "since",
          "param",
          "param",
          "param",
          "return",
          "Authorized"
        ],
        "extends": "",
        "implements": [],
        "lines_of_code": 294,
        "comment_lines": 212,
        "blank_lines": 26
      }
    },
    "OrderSetService": {
      "file_path": "/Users/shashivelur/Projects/openmrs-core/api/src/main/java/org/openmrs/api/OrderSetService.java",
      "class_name": "",
      "type": "interface",
      "metrics": {
        "halstead": {
          "vocabulary": 231,
          "length": 1272,
          "volume": 9987.424780681225,
          "difficulty": 39.45,
          "effort": 394003.90759787435,
          "time": 21889.105977659685,
          "bugs": 3.3291415935604083
        },
        "cyclomatic_complexity": 8,
        "lcom": 0,
        "cbo": 7,
        "fan_in": 0,
        "fan_out": 0,
        "lines_of_code": 216,
        "effective_lines": 44,
        "comment_ratio": 0.6898148148148148,
        "method_count": 0,
        "field_count": 0,
        "import_count": 8
      },
      "elements": {
        "imports": [
          "java.util.List",
          "org.openmrs.OrderSet",
          "org.openmrs.OrderSetAttribute",
          "org.openmrs.OrderSetAttributeType",
          "org.openmrs.OrderSetMember",
          "org.openmrs.annotation.Authorized",
          "org.openmrs.api.db.OrderSetDAO",
          "org.openmrs.util.PrivilegeConstants"
        ],
        "class_name": "",
        "methods": [],
        "fields": [],
        "method_calls": [],
        "annotations": [
          "since",
          "param",
          "param",
          "return",
          "throws",
          "Authorized",
          "param",
          "return",
          "throws",
          "Authorized",
          "param",
          "return",
          "throws",
          "Authorized",
          "param",
          "return",
          "throws",
          "Authorized",
          "param",
          "param",
          "return",
          "throws",
          "Authorized",
          "param",
          "return",
          "throws",
          "Authorized",
          "param",
          "return",
          "Authorized",
          "param",
          "return",
          "link",
          "since",
          "should",
          "should",
          "Authorized",
          "return",
          "link",
          "since",
          "should",
          "Authorized",
          "param",
          "return",
          "link",
          "since",
          "should",
          "should",
          "Authorized",
          "param",
          "return",
          "link",
          "since",
          "should",
          "should",
          "Authorized",
          "param",
          "return",
          "since",
          "should",
          "should",
          "Authorized",
          "param",
          "return",
          "since",
          "should",
          "Authorized",
          "param",
          "return",
          "since",
          "should",
          "Authorized",
          "param",
          "since",
          "should",
          "Authorized",
          "param",
          "return",
          "link",
          "since",
          "should",
          "should",
          "Authorized"
        ],
        "extends": "",
        "implements": [],
        "lines_of_code": 216,
        "comment_lines": 149,
        "blank_lines": 23
      }
    },
    "ObsService": {
      "file_path": "/Users/shashivelur/Projects/openmrs-core/api/src/main/java/org/openmrs/api/ObsService.java",
      "class_name": "",
      "type": "interface",
      "metrics": {
        "halstead": {
          "vocabulary": 491,
          "length": 5603,
          "volume": 50088.46233780522,
          "difficulty": 92.6494623655914,
          "effort": 4640669.106316827,
          "time": 257814.95035093484,
          "bugs": 16.69615411260174
        },
        "cyclomatic_complexity": 44,
        "lcom": 0,
        "cbo": 13,
        "fan_in": 0,
        "fan_out": 5,
        "lines_of_code": 541,
        "effective_lines": 82,
        "comment_ratio": 0.7911275415896488,
        "method_count": 3,
        "field_count": 17,
        "import_count": 16
      },
      "elements": {
        "imports": [
          "java.util.Date",
          "java.util.List",
          "java.util.Map",
          "org.openmrs.Concept",
          "org.openmrs.ConceptName",
          "org.openmrs.Encounter",
          "org.openmrs.Location",
          "org.openmrs.Obs",
          "org.openmrs.ObsReferenceRange",
          "org.openmrs.Person",
          "org.openmrs.Visit",
          "org.openmrs.annotation.Authorized",
          "org.openmrs.api.db.ObsDAO",
          "org.openmrs.obs.ComplexObsHandler",
          "org.openmrs.util.OpenmrsConstants.PERSON_TYPE",
          "org.openmrs.util.PrivilegeConstants"
        ],
        "class_name": "",
        "methods": [
          "getObs",
          "saveObs",
          "getComplexObs"
        ],
        "fields": [
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException"
        ],
        "method_calls": [
          [
            "Context",
            "getObsService"
          ],
          [
            "obsService",
            "getObservationsByPerson"
          ],
          [
            "OpenmrsUtil",
            "lastSecondOfDate"
          ],
          [
            "Obs",
            "getObsGroupId"
          ],
          [
            "Obs",
            "getObsGroupId"
          ],
          [
            "OpenmrsUtil",
            "lastSecondOfDate"
          ],
          [
            "Obs",
            "getObsGroupId"
          ],
          [
            "Obs",
            "getObsGroupId"
          ],
          [
            "obs",
            "isComplex"
          ],
          [
            "Obs",
            "isComplexObs"
          ]
        ],
        "annotations": [
          "see",
          "see",
          "param",
          "param",
          "return",
          "throws",
          "Authorized",
          "param",
          "return",
          "Authorized",
          "param",
          "return",
          "since",
          "Authorized",
          "param",
          "param",
          "return",
          "throws",
          "Authorized",
          "param",
          "param",
          "throws",
          "Authorized",
          "param",
          "throws",
          "Authorized",
          "param",
          "throws",
          "see",
          "Authorized",
          "param",
          "param",
          "throws",
          "see",
          "Authorized",
          "param",
          "return",
          "see",
          "Authorized",
          "param",
          "param",
          "param",
          "param",
          "param",
          "param",
          "param",
          "param",
          "param",
          "param",
          "param",
          "param",
          "return",
          "throws",
          "Authorized",
          "see",
          "param",
          "param",
          "param",
          "param",
          "param",
          "param",
          "param",
          "param",
          "param",
          "param",
          "param",
          "param",
          "param",
          "return",
          "since",
          "throws",
          "Authorized",
          "param",
          "param",
          "param",
          "param",
          "param",
          "param",
          "param",
          "param",
          "param",
          "param",
          "return",
          "throws",
          "Authorized",
          "see",
          "param",
          "param",
          "param",
          "param",
          "param",
          "param",
          "param",
          "param",
          "param",
          "param",
          "param",
          "return",
          "since",
          "throws",
          "Authorized",
          "param",
          "return",
          "throws",
          "Authorized",
          "param",
          "param",
          "return",
          "throws",
          "see",
          "Authorized",
          "param",
          "return",
          "since",
          "deprecated",
          "link",
          "Deprecated",
          "Authorized",
          "param",
          "return",
          "since",
          "param",
          "return",
          "since",
          "param",
          "throws",
          "since",
          "return",
          "since",
          "throws",
          "param",
          "param",
          "throws",
          "since",
          "link",
          "param",
          "param",
          "throws",
          "since",
          "param",
          "since",
          "param",
          "param",
          "return",
          "since",
          "Authorized",
          "see",
          "param",
          "since",
          "Authorized",
          "see",
          "param",
          "since",
          "Authorized"
        ],
        "extends": "",
        "implements": [],
        "lines_of_code": 541,
        "comment_lines": 428,
        "blank_lines": 31
      }
    },
    "PersonService": {
      "file_path": "/Users/shashivelur/Projects/openmrs-core/api/src/main/java/org/openmrs/api/PersonService.java",
      "class_name": "",
      "type": "interface",
      "metrics": {
        "halstead": {
          "vocabulary": 589,
          "length": 6438,
          "volume": 59243.273177820505,
          "difficulty": 94.20677361853834,
          "effort": 5581117.624684161,
          "time": 310062.09026023117,
          "bugs": 19.74775772594017
        },
        "cyclomatic_complexity": 55,
        "lcom": 0,
        "cbo": 14,
        "fan_in": 0,
        "fan_out": 1,
        "lines_of_code": 845,
        "effective_lines": 151,
        "comment_ratio": 0.7349112426035503,
        "method_count": 50,
        "field_count": 51,
        "import_count": 18
      },
      "elements": {
        "imports": [
          "java.util.Date",
          "java.util.List",
          "java.util.Map",
          "java.util.Set",
          "org.openmrs.Person",
          "org.openmrs.PersonAddress",
          "org.openmrs.PersonAttribute",
          "org.openmrs.PersonAttributeType",
          "org.openmrs.PersonName",
          "org.openmrs.Relationship",
          "org.openmrs.RelationshipType",
          "org.openmrs.annotation.Authorized",
          "org.openmrs.api.db.PersonDAO",
          "org.openmrs.person.PersonMergeLog",
          "org.openmrs.serialization.SerializationException",
          "org.openmrs.util.OpenmrsConstants",
          "org.openmrs.util.OpenmrsConstants.PERSON_TYPE",
          "org.openmrs.util.PrivilegeConstants"
        ],
        "class_name": "",
        "methods": [
          "getSimilarPeople",
          "getPeople",
          "getPeople",
          "savePersonAttributeType",
          "retirePersonAttributeType",
          "retireRelationshipType",
          "purgePersonAttributeType",
          "unretirePersonAttributeType",
          "voidPerson",
          "unvoidPerson",
          "getAllPersonAttributeTypes",
          "getAllPersonAttributeTypes",
          "getPersonAttributeTypes",
          "getPersonAttributeType",
          "getPersonAttribute",
          "getPersonAttributeTypeByName",
          "getRelationship",
          "getRelationshipByUuid",
          "getAllRelationships",
          "getAllRelationships",
          "getRelationshipsByPerson",
          "getRelationshipsByPerson",
          "getRelationships",
          "getRelationships",
          "getRelationships",
          "getAllRelationshipTypes",
          "getAllRelationshipTypes",
          "getRelationshipType",
          "getRelationshipTypeByUuid",
          "getRelationshipTypeByName",
          "getRelationshipTypes",
          "getRelationshipTypes",
          "saveRelationship",
          "purgeRelationship",
          "voidRelationship",
          "unvoidRelationship",
          "savePerson",
          "purgePerson",
          "getPersonByUuid",
          "getPersonAddressByUuid",
          "getPersonAttributeByUuid",
          "getPersonNameByUuid",
          "getPerson",
          "saveRelationshipType",
          "purgeRelationshipType",
          "unvoidPersonName",
          "parsePersonName",
          "getRelationshipMap",
          "savePersonMergeLog",
          "unvoidPersonAddress"
        ],
        "fields": [
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "SerializationException",
          "SerializationException",
          "SerializationException",
          "APIException",
          "PersonAttributeTypeLockedException"
        ],
        "method_calls": [
          [
            "Context",
            "getPersonService"
          ]
        ],
        "annotations": [
          "see",
          "see",
          "param",
          "param",
          "param",
          "param",
          "return",
          "throws",
          "Authorized",
          "param",
          "param",
          "return",
          "Authorized",
          "Authorized",
          "link",
          "param",
          "return",
          "throws",
          "Authorized",
          "param",
          "param",
          "Authorized",
          "param",
          "param",
          "Authorized",
          "param",
          "since",
          "Authorized",
          "param",
          "throws",
          "Authorized",
          "param",
          "throws",
          "Authorized",
          "param",
          "param",
          "return",
          "Authorized",
          "param",
          "return",
          "Authorized",
          "see",
          "return",
          "Authorized",
          "param",
          "return",
          "Authorized",
          "param",
          "param",
          "param",
          "param",
          "return",
          "throws",
          "Authorized",
          "param",
          "return",
          "Authorized",
          "param",
          "return",
          "Authorized",
          "param",
          "return",
          "throws",
          "Authorized",
          "param",
          "return",
          "Authorized",
          "param",
          "return",
          "throws",
          "Authorized",
          "param",
          "return",
          "Authorized",
          "return",
          "throws",
          "return",
          "Authorized",
          "param",
          "return",
          "throws",
          "Authorized",
          "param",
          "return",
          "throws",
          "Authorized",
          "param",
          "param",
          "return",
          "throws",
          "Authorized",
          "param",
          "param",
          "param",
          "return",
          "throws",
          "Authorized",
          "param",
          "param",
          "param",
          "param",
          "return",
          "throws",
          "Authorized",
          "param",
          "param",
          "param",
          "param",
          "param",
          "return",
          "throws",
          "Authorized",
          "return",
          "throws",
          "Authorized",
          "param",
          "return",
          "throws",
          "Authorized",
          "param",
          "return",
          "throws",
          "Authorized",
          "param",
          "return",
          "throws",
          "Authorized",
          "param",
          "return",
          "throws",
          "Authorized",
          "param",
          "param",
          "return",
          "throws",
          "Authorized",
          "param",
          "return",
          "throws",
          "Authorized",
          "param",
          "return",
          "throws",
          "Authorized",
          "param",
          "throws",
          "Authorized",
          "param",
          "param",
          "return",
          "throws",
          "Authorized",
          "param",
          "return",
          "throws",
          "Authorized",
          "param",
          "return",
          "throws",
          "Authorized",
          "param",
          "throws",
          "Authorized",
          "param",
          "return",
          "Authorized",
          "param",
          "return",
          "Authorized",
          "param",
          "return",
          "Authorized",
          "param",
          "return",
          "Authorized",
          "param",
          "return",
          "Authorized",
          "param",
          "return",
          "throws",
          "Authorized",
          "param",
          "return",
          "throws",
          "Authorized",
          "param",
          "throws",
          "Authorized",
          "param",
          "param",
          "return",
          "param",
          "param",
          "return",
          "throws",
          "Authorized",
          "param",
          "return",
          "throws",
          "Authorized",
          "param",
          "return",
          "throws",
          "Authorized",
          "param",
          "return",
          "param",
          "return",
          "throws",
          "Authorized",
          "link",
          "param",
          "return",
          "see",
          "see",
          "param",
          "param",
          "return",
          "throws",
          "throws",
          "return",
          "throws",
          "param",
          "return",
          "throws",
          "param",
          "return",
          "throws",
          "param",
          "param",
          "return",
          "throws",
          "Authorized",
          "param",
          "return",
          "throws",
          "Authorized",
          "param",
          "return",
          "since",
          "Authorized",
          "throws"
        ],
        "extends": "",
        "implements": [],
        "lines_of_code": 845,
        "comment_lines": 621,
        "blank_lines": 73
      }
    },
    "OpenmrsService": {
      "file_path": "/Users/shashivelur/Projects/openmrs-core/api/src/main/java/org/openmrs/api/OpenmrsService.java",
      "class_name": "",
      "type": "interface",
      "metrics": {
        "halstead": {
          "vocabulary": 108,
          "length": 257,
          "volume": 1736.0060880560113,
          "difficulty": 12.903225806451614,
          "effort": 22400.07855556144,
          "time": 1244.448808642302,
          "bugs": 0.5786686960186704
        },
        "cyclomatic_complexity": 1,
        "lcom": 0,
        "cbo": 2,
        "fan_in": 0,
        "fan_out": 0,
        "lines_of_code": 36,
        "effective_lines": 7,
        "comment_ratio": 0.6388888888888888,
        "method_count": 0,
        "field_count": 0,
        "import_count": 2
      },
      "elements": {
        "imports": [
          "org.openmrs.api.context.ServiceContext",
          "org.openmrs.api.impl.BaseOpenmrsService"
        ],
        "class_name": "",
        "methods": [],
        "fields": [],
        "method_calls": [],
        "annotations": [
          "link",
          "link",
          "see"
        ],
        "extends": "",
        "implements": [],
        "lines_of_code": 36,
        "comment_lines": 23,
        "blank_lines": 6
      }
    },
    "OrderService": {
      "file_path": "/Users/shashivelur/Projects/openmrs-core/api/src/main/java/org/openmrs/api/OrderService.java",
      "class_name": "",
      "type": "interface",
      "metrics": {
        "halstead": {
          "vocabulary": 638,
          "length": 8770,
          "volume": 81713.70862271791,
          "difficulty": 144.52805280528054,
          "effort": 11809923.194739481,
          "time": 656106.8441521934,
          "bugs": 27.237902874239303
        },
        "cyclomatic_complexity": 175,
        "lcom": 0,
        "cbo": 20,
        "fan_in": 0,
        "fan_out": 0,
        "lines_of_code": 1101,
        "effective_lines": 187,
        "comment_ratio": 0.7538601271571299,
        "method_count": 8,
        "field_count": 19,
        "import_count": 23
      },
      "elements": {
        "imports": [
          "org.openmrs.OrderAttribute",
          "org.openmrs.OrderAttributeType",
          "org.openmrs.Provider",
          "org.openmrs.Visit",
          "org.openmrs.OrderGroup",
          "org.openmrs.OrderGroupAttribute",
          "org.openmrs.OrderGroupAttributeType",
          "org.openmrs.Order",
          "org.openmrs.Patient",
          "org.openmrs.CareSetting",
          "org.openmrs.OrderType",
          "org.openmrs.Concept",
          "org.openmrs.ConceptClass",
          "org.openmrs.Encounter",
          "org.openmrs.OrderFrequency",
          "org.openmrs.annotation.Authorized",
          "org.openmrs.api.db.OrderDAO",
          "org.openmrs.parameter.OrderSearchCriteria",
          "org.openmrs.util.OpenmrsConstants",
          "org.openmrs.util.PrivilegeConstants",
          "java.util.Date",
          "java.util.List",
          "java.util.Locale"
        ],
        "class_name": "",
        "methods": [
          "saveOrder",
          "purgeOrder",
          "purgeOrder",
          "unvoidOrder",
          "saveOrderFrequency",
          "getOrderGroupByUuid",
          "saveOrderGroup",
          "saveOrderGroup"
        ],
        "fields": [
          "PARALLEL_ORDERS",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException"
        ],
        "method_calls": [],
        "annotations": [
          "param",
          "param",
          "param",
          "return",
          "throws",
          "Authorized",
          "param",
          "param",
          "return",
          "throws",
          "see",
          "Authorized",
          "link",
          "param",
          "throws",
          "Authorized",
          "link",
          "param",
          "param",
          "throws",
          "since",
          "Authorized",
          "param",
          "param",
          "return",
          "throws",
          "Authorized",
          "param",
          "return",
          "throws",
          "Authorized",
          "param",
          "return",
          "Authorized",
          "param",
          "return",
          "throws",
          "since",
          "Authorized",
          "param",
          "return",
          "throws",
          "since",
          "Authorized",
          "param",
          "param",
          "param",
          "param",
          "return",
          "since",
          "Authorized",
          "param",
          "return",
          "link",
          "since",
          "Authorized",
          "param",
          "return",
          "since",
          "Authorized",
          "link",
          "param",
          "return",
          "Authorized",
          "param",
          "param",
          "param",
          "return",
          "Authorized",
          "param",
          "param",
          "param",
          "param",
          "return",
          "Authorized",
          "param",
          "return",
          "Authorized",
          "param",
          "param",
          "return",
          "Authorized",
          "return",
          "Authorized",
          "param",
          "return",
          "Authorized",
          "param",
          "param",
          "param",
          "param",
          "return",
          "since",
          "Authorized",
          "param",
          "return",
          "since",
          "Authorized",
          "param",
          "return",
          "Authorized",
          "param",
          "return",
          "Authorized",
          "param",
          "return",
          "Authorized",
          "param",
          "return",
          "since",
          "Authorized",
          "param",
          "return",
          "since",
          "Authorized",
          "param",
          "return",
          "since",
          "Authorized",
          "param",
          "return",
          "since",
          "Authorized",
          "return",
          "since",
          "param",
          "Authorized",
          "param",
          "param",
          "param",
          "param",
          "return",
          "since",
          "Authorized",
          "param",
          "param",
          "param",
          "param",
          "param",
          "return",
          "throws",
          "since",
          "Authorized",
          "param",
          "param",
          "param",
          "param",
          "param",
          "return",
          "throws",
          "since",
          "Authorized",
          "param",
          "return",
          "since",
          "Authorized",
          "param",
          "param",
          "return",
          "since",
          "Authorized",
          "param",
          "return",
          "since",
          "Authorized",
          "param",
          "since",
          "Authorized",
          "param",
          "since",
          "return",
          "Authorized",
          "param",
          "since",
          "return",
          "Authorized",
          "param",
          "return",
          "since",
          "Authorized",
          "param",
          "return",
          "since",
          "Authorized",
          "param",
          "since",
          "Authorized",
          "param",
          "param",
          "return",
          "since",
          "Authorized",
          "param",
          "return",
          "since",
          "Authorized",
          "param",
          "param",
          "return",
          "Authorized",
          "param",
          "return",
          "since",
          "Authorized",
          "param",
          "return",
          "since",
          "Authorized",
          "link",
          "return",
          "since",
          "Authorized",
          "link",
          "return",
          "since",
          "Authorized",
          "link",
          "return",
          "since",
          "Authorized",
          "link",
          "return",
          "since",
          "Authorized",
          "link",
          "return",
          "since",
          "Authorized",
          "link",
          "return",
          "since",
          "Authorized",
          "param",
          "return",
          "since",
          "throws",
          "Authorized",
          "param",
          "return",
          "since",
          "throws",
          "Authorized",
          "param",
          "since",
          "throws",
          "Authorized",
          "param",
          "param",
          "return",
          "since",
          "throws",
          "Authorized",
          "param",
          "return",
          "since",
          "throws",
          "Authorized",
          "param",
          "return",
          "since",
          "throws",
          "Authorized",
          "return",
          "link",
          "should",
          "Authorized",
          "param",
          "return",
          "link",
          "should",
          "should",
          "Authorized",
          "param",
          "return",
          "link",
          "should",
          "should",
          "param",
          "return",
          "should",
          "should",
          "Authorized",
          "param",
          "param",
          "return",
          "should",
          "Authorized",
          "param",
          "return",
          "should",
          "Authorized",
          "param",
          "should",
          "Authorized",
          "param",
          "return",
          "link",
          "should",
          "should",
          "Authorized",
          "param",
          "return",
          "link",
          "since",
          "should",
          "should",
          "Authorized",
          "return",
          "link",
          "since",
          "should",
          "Authorized",
          "param",
          "return",
          "link",
          "since",
          "should",
          "should",
          "Authorized",
          "param",
          "return",
          "link",
          "since",
          "should",
          "should",
          "param",
          "return",
          "since",
          "should",
          "should",
          "Authorized",
          "param",
          "param",
          "return",
          "since",
          "should",
          "Authorized",
          "param",
          "return",
          "since",
          "should",
          "Authorized",
          "param",
          "since",
          "should",
          "Authorized",
          "param",
          "return",
          "link",
          "since",
          "should",
          "should",
          "Authorized",
          "param",
          "return",
          "link",
          "since",
          "should",
          "should",
          "Authorized",
          "see",
          "param",
          "link",
          "since",
          "Authorized",
          "see",
          "param",
          "link",
          "since",
          "Authorized"
        ],
        "extends": "",
        "implements": [],
        "lines_of_code": 1101,
        "comment_lines": 830,
        "blank_lines": 84
      }
    },
    "LocationService": {
      "file_path": "/Users/shashivelur/Projects/openmrs-core/api/src/main/java/org/openmrs/api/LocationService.java",
      "class_name": "",
      "type": "interface",
      "metrics": {
        "halstead": {
          "vocabulary": 374,
          "length": 3838,
          "volume": 32802.98093704875,
          "difficulty": 88.61271676300578,
          "effort": 2906761.258756979,
          "time": 161486.73659760994,
          "bugs": 10.93432697901625
        },
        "cyclomatic_complexity": 48,
        "lcom": 0,
        "cbo": 9,
        "fan_in": 0,
        "fan_out": 1,
        "lines_of_code": 503,
        "effective_lines": 94,
        "comment_ratio": 0.7256461232604374,
        "method_count": 28,
        "field_count": 27,
        "import_count": 11
      },
      "elements": {
        "imports": [
          "java.util.List",
          "java.util.Map",
          "org.openmrs.Address",
          "org.openmrs.Location",
          "org.openmrs.LocationAttribute",
          "org.openmrs.LocationAttributeType",
          "org.openmrs.LocationTag",
          "org.openmrs.annotation.Authorized",
          "org.openmrs.api.db.LocationDAO",
          "org.openmrs.util.OpenmrsConstants",
          "org.openmrs.util.PrivilegeConstants"
        ],
        "class_name": "",
        "methods": [
          "saveLocation",
          "getLocation",
          "getLocation",
          "getDefaultLocation",
          "getLocationByUuid",
          "getLocationTagByUuid",
          "getAllLocations",
          "getAllLocations",
          "getLocations",
          "getLocations",
          "getLocationsByTag",
          "getLocationsHavingAllTags",
          "getLocationsHavingAnyTag",
          "retireLocation",
          "unretireLocation",
          "purgeLocation",
          "saveLocationTag",
          "getLocationTag",
          "getLocationTagByName",
          "getAllLocationTags",
          "getAllLocationTags",
          "getLocationTags",
          "retireLocationTag",
          "unretireLocationTag",
          "purgeLocationTag",
          "getPossibleAddressValues",
          "getAddressTemplate",
          "saveAddressTemplate"
        ],
        "fields": [
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException"
        ],
        "method_calls": [
          [
            "Context",
            "getLocationService"
          ]
        ],
        "annotations": [
          "see",
          "see",
          "param",
          "param",
          "Authorized",
          "param",
          "return",
          "Authorized",
          "param",
          "return",
          "Authorized",
          "return",
          "Authorized",
          "param",
          "return",
          "Authorized",
          "param",
          "return",
          "Authorized",
          "return",
          "Authorized",
          "param",
          "Authorized",
          "param",
          "Authorized",
          "param",
          "param",
          "param",
          "param",
          "param",
          "param",
          "return",
          "since",
          "Authorized",
          "param",
          "since",
          "Authorized",
          "param",
          "since",
          "Authorized",
          "param",
          "since",
          "Authorized",
          "param",
          "param",
          "Authorized",
          "param",
          "return",
          "throws",
          "Authorized",
          "param",
          "Authorized",
          "param",
          "since",
          "Authorized",
          "param",
          "return",
          "since",
          "Authorized",
          "param",
          "return",
          "since",
          "Authorized",
          "return",
          "since",
          "Authorized",
          "param",
          "since",
          "Authorized",
          "param",
          "since",
          "Authorized",
          "param",
          "param",
          "since",
          "Authorized",
          "param",
          "return",
          "throws",
          "since",
          "Authorized",
          "param",
          "since",
          "Authorized",
          "param",
          "param",
          "return",
          "since",
          "Authorized",
          "param",
          "return",
          "since",
          "Authorized",
          "param",
          "param",
          "return",
          "since",
          "return",
          "see",
          "see",
          "since",
          "Authorized",
          "param",
          "since",
          "Authorized",
          "return",
          "link",
          "since",
          "Authorized",
          "param",
          "return",
          "link",
          "since",
          "Authorized",
          "param",
          "return",
          "link",
          "since",
          "Authorized",
          "param",
          "return",
          "since",
          "Authorized",
          "param",
          "return",
          "since",
          "Authorized",
          "param",
          "return",
          "since",
          "Authorized",
          "param",
          "since",
          "Authorized",
          "param",
          "return",
          "link",
          "since",
          "Authorized",
          "param",
          "return",
          "link",
          "since",
          "Authorized"
        ],
        "extends": "",
        "implements": [],
        "lines_of_code": 503,
        "comment_lines": 365,
        "blank_lines": 44
      }
    },
    "DatatypeService": {
      "file_path": "/Users/shashivelur/Projects/openmrs-core/api/src/main/java/org/openmrs/api/DatatypeService.java",
      "class_name": "",
      "type": "interface",
      "metrics": {
        "halstead": {
          "vocabulary": 147,
          "length": 569,
          "volume": 4096.613564211892,
          "difficulty": 24.583333333333336,
          "effort": 100708.41678687568,
          "time": 5594.912043715315,
          "bugs": 1.3655378547372972
        },
        "cyclomatic_complexity": 17,
        "lcom": 0,
        "cbo": 4,
        "fan_in": 0,
        "fan_out": 0,
        "lines_of_code": 95,
        "effective_lines": 19,
        "comment_ratio": 0.6526315789473685,
        "method_count": 0,
        "field_count": 0,
        "import_count": 6
      },
      "elements": {
        "imports": [
          "java.util.List",
          "java.util.Set",
          "org.openmrs.api.db.ClobDatatypeStorage",
          "org.openmrs.customdatatype.CustomDatatype",
          "org.openmrs.customdatatype.CustomDatatypeException",
          "org.openmrs.customdatatype.CustomDatatypeHandler"
        ],
        "class_name": "",
        "methods": [],
        "fields": [],
        "method_calls": [],
        "annotations": [
          "link",
          "link",
          "since",
          "return",
          "return",
          "param",
          "param",
          "return",
          "link",
          "throws",
          "link",
          "param",
          "param",
          "return",
          "param",
          "return",
          "link",
          "SuppressWarnings",
          "param",
          "return",
          "param",
          "return",
          "param",
          "return",
          "param"
        ],
        "extends": "",
        "implements": [],
        "lines_of_code": 95,
        "comment_lines": 62,
        "blank_lines": 14
      }
    },
    "EncounterService": {
      "file_path": "/Users/shashivelur/Projects/openmrs-core/api/src/main/java/org/openmrs/api/EncounterService.java",
      "class_name": "",
      "type": "interface",
      "metrics": {
        "halstead": {
          "vocabulary": 510,
          "length": 5881,
          "volume": 52895.79256216695,
          "difficulty": 96.23291925465838,
          "effort": 5090316.534546171,
          "time": 282795.36303034285,
          "bugs": 17.63193085405565
        },
        "cyclomatic_complexity": 88,
        "lcom": 0,
        "cbo": 16,
        "fan_in": 0,
        "fan_out": 0,
        "lines_of_code": 730,
        "effective_lines": 123,
        "comment_ratio": 0.7547945205479452,
        "method_count": 33,
        "field_count": 29,
        "import_count": 20
      },
      "elements": {
        "imports": [
          "java.util.Collection",
          "java.util.Date",
          "java.util.List",
          "java.util.Map",
          "org.openmrs.Cohort",
          "org.openmrs.Encounter",
          "org.openmrs.EncounterRole",
          "org.openmrs.EncounterType",
          "org.openmrs.Form",
          "org.openmrs.Location",
          "org.openmrs.Patient",
          "org.openmrs.Provider",
          "org.openmrs.User",
          "org.openmrs.Visit",
          "org.openmrs.VisitType",
          "org.openmrs.annotation.Authorized",
          "org.openmrs.api.db.EncounterDAO",
          "org.openmrs.api.handler.EncounterVisitHandler",
          "org.openmrs.parameter.EncounterSearchCriteria",
          "org.openmrs.util.PrivilegeConstants"
        ],
        "class_name": "",
        "methods": [
          "saveEncounter",
          "getEncounter",
          "getEncounterByUuid",
          "getEncountersByPatientId",
          "getEncountersByPatientIdentifier",
          "unvoidEncounter",
          "purgeEncounter",
          "purgeEncounter",
          "saveEncounterType",
          "getEncounterType",
          "getEncounterTypeByUuid",
          "getEncounterType",
          "getAllEncounterTypes",
          "getAllEncounterTypes",
          "findEncounterTypes",
          "retireEncounterType",
          "unretireEncounterType",
          "purgeEncounterType",
          "getEncountersByPatient",
          "getEncountersByPatient",
          "getEncounters",
          "getEncounters",
          "getActiveEncounterVisitHandler",
          "saveEncounterRole",
          "getEncounterRole",
          "purgeEncounterRole",
          "getEncounterRoleByUuid",
          "retireEncounterRole",
          "unretireEncounterRole",
          "getEncountersNotAssignedToAnyVisit",
          "getEncountersByVisitsAndPatient",
          "getEncountersByVisitsAndPatientCount",
          "checkIfEncounterTypesAreLocked"
        ],
        "fields": [
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "EncounterTypeLockedException"
        ],
        "method_calls": [],
        "annotations": [
          "version",
          "param",
          "param",
          "throws",
          "Authorized",
          "param",
          "return",
          "throws",
          "Authorized",
          "param",
          "return",
          "Authorized",
          "param",
          "return",
          "Authorized",
          "param",
          "return",
          "throws",
          "Authorized",
          "param",
          "return",
          "throws",
          "Authorized",
          "param",
          "param",
          "param",
          "param",
          "param",
          "param",
          "param",
          "param",
          "param",
          "param",
          "return",
          "since",
          "deprecated",
          "link",
          "Deprecated",
          "Authorized",
          "param",
          "return",
          "since",
          "Authorized",
          "param",
          "param",
          "Authorized",
          "param",
          "Authorized",
          "param",
          "Authorized",
          "param",
          "param",
          "Authorized",
          "param",
          "Authorized",
          "param",
          "return",
          "throws",
          "Authorized",
          "param",
          "return",
          "Authorized",
          "param",
          "return",
          "throws",
          "Authorized",
          "return",
          "throws",
          "Authorized",
          "param",
          "return",
          "throws",
          "Authorized",
          "param",
          "return",
          "throws",
          "Authorized",
          "param",
          "param",
          "throws",
          "Authorized",
          "param",
          "throws",
          "Authorized",
          "param",
          "throws",
          "Authorized",
          "param",
          "return",
          "throws",
          "see",
          "since",
          "Authorized",
          "param",
          "param",
          "return",
          "throws",
          "since",
          "Authorized",
          "param",
          "param",
          "param",
          "param",
          "return",
          "throws",
          "since",
          "Authorized",
          "param",
          "param",
          "param",
          "param",
          "param",
          "return",
          "throws",
          "since",
          "Authorized",
          "param",
          "return",
          "since",
          "param",
          "param",
          "return",
          "since",
          "Authorized",
          "param",
          "param",
          "return",
          "since",
          "Authorized",
          "return",
          "see",
          "since",
          "see",
          "since",
          "return",
          "throws",
          "param",
          "throws",
          "return",
          "since",
          "Authorized",
          "param",
          "throws",
          "return",
          "since",
          "Authorized",
          "param",
          "since",
          "Authorized",
          "param",
          "return",
          "since",
          "Authorized",
          "param",
          "return",
          "since",
          "Authorized",
          "param",
          "return",
          "since",
          "Authorized",
          "param",
          "param",
          "throws",
          "since",
          "Authorized",
          "param",
          "throws",
          "since",
          "Authorized",
          "param",
          "return",
          "link",
          "throws",
          "since",
          "Authorized",
          "param",
          "param",
          "param",
          "param",
          "param",
          "return",
          "throws",
          "since",
          "Authorized",
          "link",
          "param",
          "param",
          "param",
          "return",
          "throws",
          "since",
          "Authorized",
          "param",
          "param",
          "return",
          "Authorized",
          "param",
          "return",
          "param",
          "return",
          "param",
          "param",
          "return",
          "param",
          "param",
          "return",
          "throws",
          "param",
          "return",
          "since",
          "Authorized",
          "param",
          "param",
          "return",
          "since",
          "Authorized"
        ],
        "extends": "",
        "implements": [],
        "lines_of_code": 730,
        "comment_lines": 551,
        "blank_lines": 56
      }
    },
    "MedicationDispenseService": {
      "file_path": "/Users/shashivelur/Projects/openmrs-core/api/src/main/java/org/openmrs/api/MedicationDispenseService.java",
      "class_name": "",
      "type": "interface",
      "metrics": {
        "halstead": {
          "vocabulary": 164,
          "length": 540,
          "volume": 3973.078082493765,
          "difficulty": 21.42413793103448,
          "effort": 85119.77285011641,
          "time": 4728.876269450911,
          "bugs": 1.324359360831255
        },
        "cyclomatic_complexity": 6,
        "lcom": 0,
        "cbo": 4,
        "fan_in": 0,
        "fan_out": 0,
        "lines_of_code": 82,
        "effective_lines": 22,
        "comment_ratio": 0.5975609756097561,
        "method_count": 0,
        "field_count": 0,
        "import_count": 5
      },
      "elements": {
        "imports": [
          "org.openmrs.MedicationDispense",
          "org.openmrs.annotation.Authorized",
          "org.openmrs.parameter.MedicationDispenseCriteria",
          "org.openmrs.util.PrivilegeConstants",
          "java.util.List"
        ],
        "class_name": "",
        "methods": [],
        "fields": [],
        "method_calls": [],
        "annotations": [
          "since",
          "param",
          "return",
          "Authorized",
          "param",
          "return",
          "Authorized",
          "param",
          "return",
          "Authorized",
          "param",
          "Authorized",
          "param",
          "param",
          "Authorized",
          "param",
          "Authorized",
          "param",
          "Authorized"
        ],
        "extends": "",
        "implements": [],
        "lines_of_code": 82,
        "comment_lines": 49,
        "blank_lines": 11
      }
    },
    "ConditionService": {
      "file_path": "/Users/shashivelur/Projects/openmrs-core/api/src/main/java/org/openmrs/api/ConditionService.java",
      "class_name": "",
      "type": "interface",
      "metrics": {
        "halstead": {
          "vocabulary": 180,
          "length": 741,
          "volume": 5551.463144380289,
          "difficulty": 28.264150943396224,
          "effort": 156907.39226946552,
          "time": 8717.07734830364,
          "bugs": 1.8504877147934298
        },
        "cyclomatic_complexity": 10,
        "lcom": 0,
        "cbo": 5,
        "fan_in": 0,
        "fan_out": 0,
        "lines_of_code": 120,
        "effective_lines": 26,
        "comment_ratio": 0.675,
        "method_count": 0,
        "field_count": 0,
        "import_count": 6
      },
      "elements": {
        "imports": [
          "org.openmrs.Condition",
          "org.openmrs.Encounter",
          "org.openmrs.Patient",
          "org.openmrs.annotation.Authorized",
          "org.openmrs.util.PrivilegeConstants",
          "java.util.List"
        ],
        "class_name": "",
        "methods": [],
        "fields": [],
        "method_calls": [],
        "annotations": [
          "since",
          "param",
          "throws",
          "return",
          "Authorized",
          "param",
          "throws",
          "return",
          "Authorized",
          "param",
          "throws",
          "return",
          "since",
          "Authorized",
          "param",
          "return",
          "throws",
          "since",
          "param",
          "return",
          "throws",
          "Authorized",
          "param",
          "throws",
          "Authorized",
          "param",
          "param",
          "throws",
          "Authorized",
          "param",
          "throws",
          "Authorized",
          "param",
          "throws",
          "Authorized"
        ],
        "extends": "",
        "implements": [],
        "lines_of_code": 120,
        "comment_lines": 81,
        "blank_lines": 13
      }
    },
    "StorageService": {
      "file_path": "/Users/shashivelur/Projects/openmrs-core/api/src/main/java/org/openmrs/api/StorageService.java",
      "class_name": "",
      "type": "interface",
      "metrics": {
        "halstead": {
          "vocabulary": 221,
          "length": 1261,
          "volume": 9820.545127392596,
          "difficulty": 47.08629441624365,
          "effort": 462413.0791964148,
          "time": 25689.61551091193,
          "bugs": 3.2735150424641986
        },
        "cyclomatic_complexity": 19,
        "lcom": 0,
        "cbo": 2,
        "fan_in": 0,
        "fan_out": 1,
        "lines_of_code": 176,
        "effective_lines": 25,
        "comment_ratio": 0.7613636363636364,
        "method_count": 0,
        "field_count": 0,
        "import_count": 7
      },
      "elements": {
        "imports": [
          "java.io.IOException",
          "java.io.InputStream",
          "java.io.UncheckedIOException",
          "java.util.regex.Pattern",
          "java.util.stream.Stream",
          "org.openmrs.api.stream.StreamDataWriter",
          "org.openmrs.api.storage.ObjectMetadata"
        ],
        "class_name": "",
        "methods": [],
        "fields": [],
        "method_calls": [
          [
            "Pattern",
            "compile"
          ]
        ],
        "annotations": [
          "link",
          "since",
          "param",
          "return",
          "throws",
          "param",
          "return",
          "throws",
          "param",
          "return",
          "throws",
          "param",
          "param",
          "return",
          "throws",
          "param",
          "param",
          "param",
          "return",
          "throws",
          "param",
          "param",
          "return",
          "throws",
          "param",
          "param",
          "return",
          "throws",
          "link",
          "param",
          "param",
          "param",
          "param",
          "return",
          "throws",
          "link",
          "param",
          "param",
          "param",
          "param",
          "return",
          "throws",
          "param",
          "param",
          "param",
          "return",
          "throws",
          "param",
          "return",
          "throws",
          "param",
          "return",
          "throws"
        ],
        "extends": "",
        "implements": [],
        "lines_of_code": 176,
        "comment_lines": 134,
        "blank_lines": 17
      }
    },
    "ConceptService": {
      "file_path": "/Users/shashivelur/Projects/openmrs-core/api/src/main/java/org/openmrs/api/ConceptService.java",
      "class_name": "",
      "type": "interface",
      "metrics": {
        "halstead": {
          "vocabulary": 890,
          "length": 15905,
          "volume": 155831.80656870405,
          "difficulty": 169.5256111757858,
          "effort": 26417482.249186385,
          "time": 1467637.902732577,
          "bugs": 51.94393552290135
        },
        "cyclomatic_complexity": 190,
        "lcom": 0,
        "cbo": 27,
        "fan_in": 0,
        "fan_out": 4,
        "lines_of_code": 2052,
        "effective_lines": 351,
        "comment_ratio": 0.7524366471734892,
        "method_count": 21,
        "field_count": 94,
        "import_count": 32
      },
      "elements": {
        "imports": [
          "java.util.Collection",
          "java.util.Iterator",
          "java.util.List",
          "java.util.Locale",
          "java.util.Set",
          "org.openmrs.Concept",
          "org.openmrs.ConceptAnswer",
          "org.openmrs.ConceptAttribute",
          "org.openmrs.ConceptAttributeType",
          "org.openmrs.ConceptClass",
          "org.openmrs.ConceptComplex",
          "org.openmrs.ConceptDatatype",
          "org.openmrs.ConceptDescription",
          "org.openmrs.ConceptMap",
          "org.openmrs.ConceptMapType",
          "org.openmrs.ConceptName",
          "org.openmrs.ConceptNameTag",
          "org.openmrs.ConceptNumeric",
          "org.openmrs.ConceptProposal",
          "org.openmrs.ConceptReferenceRange",
          "org.openmrs.ConceptReferenceTerm",
          "org.openmrs.ConceptReferenceTermMap",
          "org.openmrs.ConceptSearchResult",
          "org.openmrs.ConceptSet",
          "org.openmrs.ConceptSource",
          "org.openmrs.ConceptStopWord",
          "org.openmrs.Drug",
          "org.openmrs.DrugIngredient",
          "org.openmrs.Person",
          "org.openmrs.annotation.Authorized",
          "org.openmrs.api.db.ConceptDAO",
          "org.openmrs.util.PrivilegeConstants"
        ],
        "class_name": "",
        "methods": [
          "saveConcept",
          "saveDrug",
          "purgeConcept",
          "saveConceptProposal",
          "getAllConceptSources",
          "getConceptByMapping",
          "getConceptByMapping",
          "getConceptsByMapping",
          "getConceptsByMapping",
          "getConceptIdsByMapping",
          "getConceptSourceByName",
          "convertBooleanConceptToCoded",
          "updateConceptIndex",
          "updateConceptIndexes",
          "saveConceptStopWord",
          "getConceptReferenceTerms",
          "getReferenceTermMappingsTo",
          "getDefaultConceptMapType",
          "getDrugsByMapping",
          "getDrugByMapping",
          "getConceptAttributeTypes"
        ],
        "fields": [
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "ConceptsLockedException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException"
        ],
        "method_calls": [
          [
            "Context",
            "getConceptService"
          ],
          [
            "Context",
            "getConceptService"
          ],
          [
            "concept",
            "getPreferredName"
          ],
          [
            "Context",
            "getLocale"
          ],
          [
            "concept",
            "setConceptClass"
          ],
          [
            "Context",
            "getConceptService"
          ],
          [
            "concept",
            "setDatatype"
          ],
          [
            "Context",
            "getConceptService"
          ],
          [
            "Context",
            "getConceptService"
          ],
          [
            "Concept",
            "getAnswers"
          ],
          [
            "Arrays",
            "asList"
          ]
        ],
        "annotations": [
          "see",
          "param",
          "param",
          "return",
          "Authorized",
          "link",
          "param",
          "return",
          "throws",
          "throws",
          "throws",
          "Authorized",
          "link",
          "param",
          "return",
          "throws",
          "Authorized",
          "link",
          "param",
          "throws",
          "Authorized",
          "param",
          "param",
          "return",
          "throws",
          "Authorized",
          "param",
          "param",
          "throws",
          "return",
          "Authorized",
          "param",
          "return",
          "throws",
          "Authorized",
          "param",
          "throws",
          "Authorized",
          "param",
          "return",
          "throws",
          "Authorized",
          "param",
          "return",
          "throws",
          "Authorized",
          "param",
          "return",
          "throws",
          "Authorized",
          "param",
          "return",
          "throws",
          "Authorized",
          "param",
          "return",
          "throws",
          "Authorized",
          "throws",
          "param",
          "return",
          "Authorized",
          "return",
          "throws",
          "Authorized",
          "param",
          "param",
          "param",
          "return",
          "throws",
          "Authorized",
          "param",
          "throws",
          "return",
          "Authorized",
          "param",
          "throws",
          "return",
          "Authorized",
          "param",
          "return",
          "throws",
          "Authorized",
          "param",
          "since",
          "return",
          "Authorized",
          "param",
          "return",
          "Authorized",
          "param",
          "return",
          "Authorized",
          "param",
          "return",
          "throws",
          "Authorized",
          "throws",
          "return",
          "Authorized",
          "throws",
          "param",
          "return",
          "Authorized",
          "param",
          "return",
          "Authorized",
          "param",
          "throws",
          "return",
          "Authorized",
          "param",
          "return",
          "throws",
          "Authorized",
          "param",
          "return",
          "throws",
          "Authorized",
          "throws",
          "return",
          "Authorized",
          "param",
          "throws",
          "return",
          "Authorized",
          "param",
          "return",
          "Authorized",
          "param",
          "return",
          "Authorized",
          "param",
          "return",
          "Authorized",
          "param",
          "return",
          "Authorized",
          "param",
          "return",
          "Authorized",
          "param",
          "throws",
          "Authorized",
          "param",
          "throws",
          "Authorized",
          "param",
          "throws",
          "since",
          "Authorized",
          "throws",
          "return",
          "Authorized",
          "param",
          "throws",
          "return",
          "Authorized",
          "param",
          "return",
          "throws",
          "Authorized",
          "param",
          "return",
          "Authorized",
          "param",
          "return",
          "throws",
          "Authorized",
          "param",
          "return",
          "throws",
          "Authorized",
          "param",
          "return",
          "throws",
          "Authorized",
          "param",
          "throws",
          "return",
          "Authorized",
          "param",
          "return",
          "throws",
          "Authorized",
          "param",
          "return",
          "Authorized",
          "param",
          "return",
          "throws",
          "Authorized",
          "param",
          "return",
          "throws",
          "Authorized",
          "param",
          "return",
          "throws",
          "Authorized",
          "param",
          "throws",
          "return",
          "Authorized",
          "param",
          "throws",
          "Authorized",
          "param",
          "param",
          "return",
          "throws",
          "Authorized",
          "param",
          "param",
          "param",
          "return",
          "throws",
          "Authorized",
          "param",
          "return",
          "throws",
          "Authorized",
          "param",
          "return",
          "throws",
          "Authorized",
          "param",
          "return",
          "throws",
          "Authorized",
          "throws",
          "Authorized",
          "param",
          "return",
          "Authorized",
          "return",
          "throws",
          "Authorized",
          "param",
          "return",
          "see",
          "see",
          "see",
          "Authorized",
          "param",
          "return",
          "since",
          "Authorized",
          "param",
          "return",
          "see",
          "see",
          "see",
          "see",
          "Authorized",
          "return",
          "Authorized",
          "param",
          "return",
          "Authorized",
          "param",
          "return",
          "Authorized",
          "param",
          "throws",
          "Authorized",
          "param",
          "throws",
          "Authorized",
          "param",
          "param",
          "return",
          "throws",
          "Authorized",
          "param",
          "return",
          "Authorized",
          "return",
          "Authorized",
          "return",
          "Authorized",
          "link",
          "link",
          "link",
          "link",
          "param",
          "link",
          "param",
          "link",
          "return",
          "link",
          "link",
          "throws",
          "Authorized",
          "link",
          "link",
          "link",
          "link",
          "link",
          "link",
          "param",
          "link",
          "param",
          "link",
          "param",
          "return",
          "link",
          "link",
          "throws",
          "Authorized",
          "link",
          "link",
          "link",
          "link",
          "param",
          "link",
          "param",
          "link",
          "return",
          "link",
          "link",
          "throws",
          "since",
          "Authorized",
          "link",
          "link",
          "link",
          "link",
          "param",
          "link",
          "param",
          "link",
          "param",
          "return",
          "link",
          "link",
          "throws",
          "since",
          "Authorized",
          "link",
          "link",
          "link",
          "link",
          "param",
          "link",
          "param",
          "link",
          "param",
          "return",
          "link",
          "throws",
          "should",
          "should",
          "should",
          "should",
          "should",
          "since",
          "Authorized",
          "since",
          "return",
          "Authorized",
          "link",
          "param",
          "return",
          "link",
          "since",
          "Authorized",
          "param",
          "return",
          "Authorized",
          "param",
          "return",
          "throws",
          "Authorized",
          "param",
          "return",
          "throws",
          "Authorized",
          "param",
          "return",
          "throws",
          "Authorized",
          "param",
          "return",
          "throws",
          "Authorized",
          "return",
          "Authorized",
          "return",
          "Authorized",
          "return",
          "Authorized",
          "param",
          "throws",
          "Authorized",
          "param",
          "return",
          "throws",
          "since",
          "Authorized",
          "param",
          "param",
          "param",
          "param",
          "param",
          "param",
          "param",
          "param",
          "param",
          "param",
          "return",
          "throws",
          "since",
          "Authorized",
          "param",
          "param",
          "param",
          "return",
          "throws",
          "since",
          "Authorized",
          "link",
          "param",
          "throws",
          "since",
          "Authorized",
          "throws",
          "since",
          "Authorized",
          "param",
          "param",
          "param",
          "return",
          "throws",
          "since",
          "Authorized",
          "param",
          "param",
          "param",
          "param",
          "param",
          "param",
          "param",
          "param",
          "return",
          "throws",
          "since",
          "Authorized",
          "param",
          "param",
          "param",
          "param",
          "param",
          "return",
          "throws",
          "since",
          "Authorized",
          "param",
          "param",
          "param",
          "param",
          "param",
          "param",
          "param",
          "return",
          "throws",
          "since",
          "Authorized",
          "param",
          "return",
          "since",
          "Authorized",
          "link",
          "param",
          "return",
          "throws",
          "since",
          "Authorized",
          "param",
          "throws",
          "since",
          "Authorized",
          "return",
          "since",
          "Authorized",
          "return",
          "since",
          "Authorized",
          "return",
          "since",
          "throws",
          "Authorized",
          "param",
          "return",
          "since",
          "throws",
          "Authorized",
          "param",
          "return",
          "since",
          "throws",
          "Authorized",
          "param",
          "return",
          "since",
          "throws",
          "Authorized",
          "param",
          "return",
          "since",
          "throws",
          "Authorized",
          "param",
          "return",
          "since",
          "throws",
          "Authorized",
          "param",
          "param",
          "return",
          "since",
          "throws",
          "Authorized",
          "param",
          "return",
          "since",
          "throws",
          "Authorized",
          "param",
          "since",
          "throws",
          "Authorized",
          "param",
          "return",
          "since",
          "throws",
          "Authorized",
          "return",
          "since",
          "throws",
          "Authorized",
          "param",
          "return",
          "since",
          "throws",
          "Authorized",
          "param",
          "return",
          "since",
          "throws",
          "Authorized",
          "param",
          "return",
          "since",
          "throws",
          "Authorized",
          "param",
          "param",
          "return",
          "since",
          "throws",
          "Authorized",
          "param",
          "param",
          "return",
          "since",
          "throws",
          "Authorized",
          "param",
          "param",
          "param",
          "return",
          "since",
          "throws",
          "Authorized",
          "param",
          "return",
          "since",
          "throws",
          "Authorized",
          "param",
          "param",
          "return",
          "since",
          "throws",
          "Authorized",
          "param",
          "return",
          "since",
          "throws",
          "Authorized",
          "param",
          "since",
          "throws",
          "Authorized",
          "param",
          "param",
          "param",
          "param",
          "param",
          "return",
          "link",
          "since",
          "throws",
          "Authorized",
          "param",
          "param",
          "param",
          "return",
          "since",
          "throws",
          "Authorized",
          "link",
          "param",
          "return",
          "link",
          "since",
          "throws",
          "Authorized",
          "param",
          "param",
          "param",
          "return",
          "throws",
          "since",
          "Authorized",
          "since",
          "return",
          "link",
          "throws",
          "Authorized",
          "param",
          "return",
          "since",
          "Authorized",
          "param",
          "param",
          "param",
          "param",
          "return",
          "since",
          "Authorized",
          "param",
          "param",
          "param",
          "param",
          "since",
          "return",
          "link",
          "throws",
          "Authorized",
          "param",
          "param",
          "param",
          "since",
          "return",
          "link",
          "throws",
          "Authorized",
          "param",
          "param",
          "param",
          "param",
          "param",
          "return",
          "since",
          "Authorized",
          "return",
          "link",
          "since",
          "Authorized",
          "param",
          "return",
          "since",
          "Authorized",
          "param",
          "return",
          "link",
          "since",
          "Authorized",
          "param",
          "return",
          "link",
          "since",
          "Authorized",
          "param",
          "since",
          "Authorized",
          "param",
          "return",
          "since",
          "throws",
          "Authorized",
          "param",
          "return",
          "link",
          "since",
          "Authorized",
          "param",
          "param",
          "return",
          "since",
          "Authorized",
          "param",
          "return",
          "since",
          "Authorized",
          "param",
          "return",
          "link",
          "since",
          "Authorized",
          "param",
          "since",
          "return",
          "Authorized",
          "link",
          "param",
          "return",
          "since",
          "Authorized",
          "param",
          "return",
          "link",
          "since",
          "Authorized",
          "param",
          "return",
          "link",
          "since",
          "Authorized",
          "param",
          "param",
          "return",
          "since",
          "Authorized",
          "param",
          "since",
          "Authorized"
        ],
        "extends": "",
        "implements": [],
        "lines_of_code": 2052,
        "comment_lines": 1544,
        "blank_lines": 157
      }
    },
    "ProgramWorkflowService": {
      "file_path": "/Users/shashivelur/Projects/openmrs-core/api/src/main/java/org/openmrs/api/ProgramWorkflowService.java",
      "class_name": "",
      "type": "interface",
      "metrics": {
        "halstead": {
          "vocabulary": 396,
          "length": 4791,
          "volume": 41343.247566801416,
          "difficulty": 86.51612903225806,
          "effort": 3576857.7411019807,
          "time": 198714.31895011003,
          "bugs": 13.78108252226714
        },
        "cyclomatic_complexity": 47,
        "lcom": 0,
        "cbo": 14,
        "fan_in": 0,
        "fan_out": 2,
        "lines_of_code": 566,
        "effective_lines": 110,
        "comment_ratio": 0.7137809187279152,
        "method_count": 22,
        "field_count": 20,
        "import_count": 19
      },
      "elements": {
        "imports": [
          "org.openmrs.ProgramAttributeType",
          "java.util.Collection",
          "java.util.Date",
          "java.util.List",
          "java.util.Map",
          "org.openmrs.Cohort",
          "org.openmrs.Concept",
          "org.openmrs.ConceptStateConversion",
          "org.openmrs.Patient",
          "org.openmrs.PatientProgram",
          "org.openmrs.PatientProgramAttribute",
          "org.openmrs.PatientState",
          "org.openmrs.Program",
          "org.openmrs.ProgramWorkflow",
          "org.openmrs.ProgramWorkflowState",
          "org.openmrs.annotation.Authorized",
          "org.openmrs.api.db.ProgramWorkflowDAO",
          "org.openmrs.util.PrivilegeConstants",
          "org.springframework.transaction.annotation.Transactional"
        ],
        "class_name": "",
        "methods": [
          "saveProgram",
          "getProgram",
          "getProgramByName",
          "getAllPrograms",
          "getAllPrograms",
          "getPrograms",
          "purgeProgram",
          "purgeProgram",
          "retireProgram",
          "unretireProgram",
          "savePatientProgram",
          "getPatientProgram",
          "getPatientPrograms",
          "purgePatientProgram",
          "purgePatientProgram",
          "voidPatientProgram",
          "unvoidPatientProgram",
          "saveConceptStateConversion",
          "getConceptStateConversion",
          "getAllConceptStateConversions",
          "purgeConceptStateConversion",
          "purgeConceptStateConversion"
        ],
        "fields": [
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException"
        ],
        "method_calls": [
          [
            "program",
            "set___"
          ],
          [
            "Context",
            "getProgramWorkflowService"
          ]
        ],
        "annotations": [
          "param",
          "param",
          "return",
          "throws",
          "Authorized",
          "param",
          "return",
          "throws",
          "Authorized",
          "param",
          "return",
          "throws",
          "throws",
          "Authorized",
          "return",
          "throws",
          "Authorized",
          "param",
          "return",
          "throws",
          "Authorized",
          "param",
          "return",
          "throws",
          "Authorized",
          "param",
          "throws",
          "Authorized",
          "param",
          "throws",
          "Authorized",
          "param",
          "param",
          "return",
          "throws",
          "Authorized",
          "param",
          "return",
          "throws",
          "Authorized",
          "param",
          "return",
          "param",
          "return",
          "param",
          "return",
          "throws",
          "Authorized",
          "param",
          "return",
          "throws",
          "Authorized",
          "param",
          "param",
          "param",
          "param",
          "param",
          "param",
          "param",
          "return",
          "throws",
          "Authorized",
          "param",
          "throws",
          "Authorized",
          "param",
          "param",
          "throws",
          "Authorized",
          "param",
          "param",
          "return",
          "throws",
          "Authorized",
          "param",
          "return",
          "throws",
          "Authorized",
          "link",
          "link",
          "param",
          "return",
          "Authorized",
          "code",
          "param",
          "return",
          "since",
          "param",
          "return",
          "param",
          "return",
          "throws",
          "Authorized",
          "param",
          "return",
          "throws",
          "Authorized",
          "return",
          "throws",
          "Authorized",
          "param",
          "throws",
          "Authorized",
          "param",
          "param",
          "throws",
          "Authorized",
          "param",
          "param",
          "return",
          "throws",
          "code",
          "param",
          "return",
          "since",
          "param",
          "return",
          "param",
          "return",
          "param",
          "param",
          "return",
          "Authorized",
          "param",
          "return",
          "Authorized",
          "param",
          "return",
          "Authorized",
          "param",
          "return",
          "Authorized",
          "param",
          "return",
          "Transactional",
          "Authorized",
          "Transactional",
          "Authorized",
          "Transactional",
          "Authorized",
          "Authorized",
          "Authorized",
          "Transactional",
          "Authorized",
          "Transactional",
          "Authorized"
        ],
        "extends": "",
        "implements": [],
        "lines_of_code": 566,
        "comment_lines": 404,
        "blank_lines": 52
      }
    },
    "HL7Service": {
      "file_path": "/Users/shashivelur/Projects/openmrs-core/api/src/main/java/org/openmrs/hl7/HL7Service.java",
      "class_name": "",
      "type": "interface",
      "metrics": {
        "halstead": {
          "vocabulary": 442,
          "length": 3507,
          "volume": 30819.17427578575,
          "difficulty": 67.27228915662651,
          "effort": 2073276.4034491244,
          "time": 115182.02241384024,
          "bugs": 10.273058091928583
        },
        "cyclomatic_complexity": 34,
        "lcom": 0,
        "cbo": 7,
        "fan_in": 0,
        "fan_out": 0,
        "lines_of_code": 522,
        "effective_lines": 99,
        "comment_ratio": 0.710727969348659,
        "method_count": 10,
        "field_count": 41,
        "import_count": 16
      },
      "elements": {
        "imports": [
          "java.util.List",
          "java.util.Map",
          "org.openmrs.Person",
          "org.openmrs.annotation.Authorized",
          "org.openmrs.annotation.Logging",
          "org.openmrs.api.APIException",
          "org.openmrs.api.OpenmrsService",
          "org.openmrs.hl7.db.HL7DAO",
          "org.openmrs.util.PrivilegeConstants",
          "ca.uhn.hl7v2.HL7Exception",
          "ca.uhn.hl7v2.model.Message",
          "ca.uhn.hl7v2.model.v25.datatype.CX",
          "ca.uhn.hl7v2.model.v25.datatype.PL",
          "ca.uhn.hl7v2.model.v25.datatype.XCN",
          "ca.uhn.hl7v2.model.v25.segment.NK1",
          "ca.uhn.hl7v2.model.v25.segment.PID"
        ],
        "class_name": "",
        "methods": [
          "saveHL7Source",
          "purgeHL7Source",
          "saveHL7InQueue",
          "saveHL7InArchive",
          "getHL7InArchiveByUuid",
          "saveHL7InError",
          "processHL7InQueue",
          "parseHL7String",
          "processHL7Message",
          "migrateHl7InArchivesToFileSystem"
        ],
        "fields": [
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "APIException",
          "HL7Exception",
          "HL7Exception",
          "HL7Exception",
          "HL7Exception",
          "HL7Exception",
          "HL7Exception",
          "HL7Exception",
          "HL7Exception",
          "APIException",
          "HL7Exception",
          "HL7Exception",
          "APIException",
          "APIException",
          "APIException"
        ],
        "method_calls": [],
        "annotations": [
          "param",
          "param",
          "return",
          "Authorized",
          "param",
          "return",
          "Authorized",
          "param",
          "return",
          "Authorized",
          "return",
          "Authorized",
          "param",
          "return",
          "Authorized",
          "link",
          "param",
          "Authorized",
          "param",
          "return",
          "Authorized",
          "param",
          "return",
          "throws",
          "Authorized",
          "param",
          "return",
          "throws",
          "since",
          "Authorized",
          "return",
          "throws",
          "Authorized",
          "param",
          "param",
          "param",
          "param",
          "return",
          "throws",
          "since",
          "Authorized",
          "param",
          "param",
          "return",
          "throws",
          "since",
          "Authorized",
          "param",
          "param",
          "param",
          "return",
          "throws",
          "since",
          "Authorized",
          "param",
          "return",
          "throws",
          "since",
          "Authorized",
          "param",
          "param",
          "param",
          "param",
          "return",
          "throws",
          "since",
          "Authorized",
          "param",
          "param",
          "return",
          "throws",
          "since",
          "Authorized",
          "return",
          "Authorized",
          "param",
          "Authorized",
          "param",
          "return",
          "throws",
          "Authorized",
          "link",
          "param",
          "return",
          "Authorized",
          "param",
          "return",
          "throws",
          "since",
          "Authorized",
          "return",
          "throws",
          "since",
          "Authorized",
          "return",
          "throws",
          "since",
          "Authorized",
          "return",
          "Authorized",
          "param",
          "throws",
          "Authorized",
          "param",
          "return",
          "throws",
          "Authorized",
          "param",
          "return",
          "Authorized",
          "param",
          "return",
          "throws",
          "since",
          "Authorized",
          "return",
          "throws",
          "Authorized",
          "param",
          "throws",
          "Authorized",
          "param",
          "return",
          "param",
          "return",
          "param",
          "return",
          "param",
          "return",
          "throws",
          "param",
          "return",
          "throws",
          "link",
          "link",
          "link",
          "link",
          "param",
          "link",
          "return",
          "link",
          "link",
          "param",
          "return",
          "link",
          "throws",
          "see",
          "Logging",
          "link",
          "param",
          "link",
          "return",
          "throws",
          "see",
          "param",
          "throws",
          "Authorized",
          "param",
          "return",
          "throws",
          "param",
          "return",
          "throws",
          "since",
          "throws",
          "param",
          "since",
          "throws",
          "param",
          "link",
          "link",
          "link",
          "link",
          "param",
          "return",
          "throws",
          "since"
        ],
        "extends": "",
        "implements": [],
        "lines_of_code": 522,
        "comment_lines": 371,
        "blank_lines": 52
      }
    },
    "BaseOpenmrsService": {
      "file_path": "/Users/shashivelur/Projects/openmrs-core/api/src/main/java/org/openmrs/api/impl/BaseOpenmrsService.java",
      "class_name": "",
      "type": "interface",
      "metrics": {
        "halstead": {
          "vocabulary": 104,
          "length": 247,
          "volume": 1655.0086103808496,
          "difficulty": 14.166666666666668,
          "effort": 23445.955313728704,
          "time": 1302.553072984928,
          "bugs": 0.5516695367936165
        },
        "cyclomatic_complexity": 3,
        "lcom": 0,
        "cbo": 1,
        "fan_in": 0,
        "fan_out": 0,
        "lines_of_code": 40,
        "effective_lines": 10,
        "comment_ratio": 0.6,
        "method_count": 2,
        "field_count": 0,
        "import_count": 1
      },
      "elements": {
        "imports": [
          "org.openmrs.api.OpenmrsService"
        ],
        "class_name": "",
        "methods": [
          "onShutdown",
          "onStartup"
        ],
        "fields": [],
        "method_calls": [],
        "annotations": [
          "see",
          "see",
          "Override",
          "see",
          "Override"
        ],
        "extends": "",
        "implements": [],
        "lines_of_code": 40,
        "comment_lines": 24,
        "blank_lines": 6
      }
    },
    "StreamDataService": {
      "file_path": "/Users/shashivelur/Projects/openmrs-core/api/src/main/java/org/openmrs/api/stream/StreamDataService.java",
      "class_name": "StreamDataService",
      "type": "interface",
      "metrics": {
        "halstead": {
          "vocabulary": 266,
          "length": 1408,
          "volume": 11341.837669185674,
          "difficulty": 47.163090128755364,
          "effort": 534916.1122175166,
          "time": 29717.561789862037,
          "bugs": 3.7806125563952246
        },
        "cyclomatic_complexity": 22,
        "lcom": 0,
        "cbo": 0,
        "fan_in": 0,
        "fan_out": 17,
        "lines_of_code": 222,
        "effective_lines": 146,
        "comment_ratio": 0.23423423423423423,
        "method_count": 11,
        "field_count": 7,
        "import_count": 19
      },
      "elements": {
        "imports": [
          "java.io.ByteArrayInputStream",
          "java.io.ByteArrayOutputStream",
          "java.io.IOException",
          "java.io.InputStream",
          "java.io.InterruptedIOException",
          "java.io.OutputStream",
          "java.io.UncheckedIOException",
          "java.time.Duration",
          "java.util.Objects",
          "java.util.concurrent.BlockingQueue",
          "java.util.concurrent.LinkedBlockingQueue",
          "java.util.concurrent.TimeUnit",
          "org.apache.commons.io.IOUtils",
          "org.slf4j.Logger",
          "org.slf4j.LoggerFactory",
          "org.springframework.beans.factory.annotation.Autowired",
          "org.springframework.core.task.TaskExecutor",
          "org.springframework.stereotype.Service",
          "org.springframework.util.unit.DataSize"
        ],
        "class_name": "StreamDataService",
        "methods": [
          "StreamDataService",
          "QueueInputStream",
          "newQueueOutputStream",
          "read",
          "close",
          "propagateStreamException",
          "checkStreamException",
          "QueueOutputStream",
          "write",
          "close",
          "streamData"
        ],
        "fields": [
          "BUFFER_SIZE",
          "log",
          "taskExecutor",
          "blockingQueue",
          "timeoutNanos",
          "streamException",
          "queueInputStream"
        ],
        "method_calls": [
          [
            "DataSize",
            "ofKilobytes"
          ],
          [
            "LoggerFactory",
            "getLogger"
          ],
          [
            "Duration",
            "ofSeconds"
          ],
          [
            "blockingQueue",
            "peek"
          ],
          [
            "Integer",
            "valueOf"
          ],
          [
            "blockingQueue",
            "poll"
          ],
          [
            "blockingQueue",
            "clear"
          ],
          [
            "blockingQueue",
            "offer"
          ],
          [
            "Thread",
            "currentThread"
          ],
          [
            "interruptedIoException",
            "initCause"
          ],
          [
            "super",
            "close"
          ],
          [
            "queueInputStream",
            "checkStreamException"
          ],
          [
            "blockingQueue",
            "offer"
          ],
          [
            "queueInputStream",
            "propagateStreamException"
          ],
          [
            "Thread",
            "currentThread"
          ],
          [
            "interruptedIoException",
            "initCause"
          ],
          [
            "queueInputStream",
            "checkStreamException"
          ],
          [
            "blockingQueue",
            "offer"
          ],
          [
            "queueInputStream",
            "propagateStreamException"
          ],
          [
            "Thread",
            "currentThread"
          ],
          [
            "interruptedIoException",
            "initCause"
          ],
          [
            "length",
            "intValue"
          ],
          [
            "writer",
            "write"
          ],
          [
            "out",
            "toByteArray"
          ],
          [
            "taskExecutor",
            "execute"
          ],
          [
            "in",
            "newQueueOutputStream"
          ],
          [
            "writer",
            "write"
          ],
          [
            "log",
            "error"
          ],
          [
            "in",
            "propagateStreamException"
          ],
          [
            "QueueOutputStream",
            "close"
          ],
          [
            "IOUtils",
            "closeQuietly"
          ]
        ],
        "annotations": [
          "link",
          "link",
          "link",
          "link",
          "link",
          "link",
          "since",
          "Service",
          "Autowired",
          "Override",
          "Override",
          "param",
          "throws",
          "param",
          "throws",
          "Override",
          "throws",
          "Override",
          "link",
          "link",
          "link",
          "param",
          "param",
          "return",
          "throws"
        ],
        "extends": "",
        "implements": [],
        "lines_of_code": 222,
        "comment_lines": 52,
        "blank_lines": 24
      }
    },
    "S3StorageService": {
      "file_path": "/Users/shashivelur/Projects/openmrs-core/api/src/main/java/org/openmrs/api/storage/S3StorageService.java",
      "class_name": "S3StorageService",
      "type": "interface",
      "metrics": {
        "halstead": {
          "vocabulary": 313,
          "length": 2051,
          "volume": 17002.828655058798,
          "difficulty": 62.80615942028986,
          "effort": 1067882.3671054954,
          "time": 59326.798172527524,
          "bugs": 5.667609551686266
        },
        "cyclomatic_complexity": 25,
        "lcom": 0,
        "cbo": 3,
        "fan_in": 0,
        "fan_out": 28,
        "lines_of_code": 246,
        "effective_lines": 186,
        "comment_ratio": 0.11788617886178862,
        "method_count": 9,
        "field_count": 3,
        "import_count": 41
      },
      "elements": {
        "imports": [
          "java.io.IOException",
          "java.io.InputStream",
          "java.io.InterruptedIOException",
          "java.io.UncheckedIOException",
          "java.net.URI",
          "java.nio.file.FileAlreadyExistsException",
          "java.util.concurrent.CompletableFuture",
          "java.util.concurrent.ExecutionException",
          "java.util.stream.Stream",
          "org.apache.commons.lang.StringUtils",
          "org.openmrs.api.StorageService",
          "org.openmrs.api.stream.StreamDataService",
          "org.slf4j.Logger",
          "org.slf4j.LoggerFactory",
          "org.springframework.beans.factory.annotation.Autowired",
          "org.springframework.beans.factory.annotation.Qualifier",
          "org.springframework.beans.factory.annotation.Value",
          "org.springframework.context.annotation.Conditional",
          "org.springframework.stereotype.Service",
          "software.amazon.awssdk.auth.credentials.AwsBasicCredentials",
          "software.amazon.awssdk.auth.credentials.StaticCredentialsProvider",
          "software.amazon.awssdk.core.ResponseInputStream",
          "software.amazon.awssdk.core.async.AsyncRequestBody",
          "software.amazon.awssdk.core.async.AsyncResponseTransformer",
          "software.amazon.awssdk.core.async.BlockingInputStreamAsyncRequestBody",
          "software.amazon.awssdk.regions.Region",
          "software.amazon.awssdk.services.s3.S3AsyncClient",
          "software.amazon.awssdk.services.s3.S3AsyncClientBuilder",
          "software.amazon.awssdk.services.s3.model.DeleteObjectRequest",
          "software.amazon.awssdk.services.s3.model.DeleteObjectResponse",
          "software.amazon.awssdk.services.s3.model.GetObjectRequest",
          "software.amazon.awssdk.services.s3.model.GetObjectResponse",
          "software.amazon.awssdk.services.s3.model.HeadObjectRequest",
          "software.amazon.awssdk.services.s3.model.HeadObjectResponse",
          "software.amazon.awssdk.services.s3.model.ListObjectsV2Request",
          "software.amazon.awssdk.services.s3.model.ListObjectsV2Response",
          "software.amazon.awssdk.services.s3.model.PutObjectRequest",
          "software.amazon.awssdk.services.s3.model.PutObjectResponse",
          "software.amazon.awssdk.services.s3.model.S3Exception",
          "software.amazon.awssdk.services.s3.model.S3Object",
          "software.amazon.awssdk.services.s3.model.S3Response"
        ],
        "class_name": "S3StorageService",
        "methods": [
          "S3StorageService",
          "getData",
          "waitForResponse",
          "getMetadata",
          "getKeys",
          "purgeData",
          "waitForBooleanResponse",
          "exists",
          "saveData"
        ],
        "fields": [
          "log",
          "s3AsyncClient",
          "bucketName"
        ],
        "method_calls": [
          [
            "LoggerFactory",
            "getLogger"
          ],
          [
            "S3AsyncClient",
            "builder"
          ],
          [
            "StringUtils",
            "isNotBlank"
          ],
          [
            "StringUtils",
            "isNotBlank"
          ],
          [
            "log",
            "info"
          ],
          [
            "StringUtils",
            "isBlank"
          ],
          [
            "StringUtils",
            "isBlank"
          ],
          [
            "StaticCredentialsProvider",
            "create"
          ],
          [
            "AwsBasicCredentials",
            "create"
          ],
          [
            "s3AsyncClientBuilder",
            "credentialsProvider"
          ],
          [
            "StringUtils",
            "isNotBlank"
          ],
          [
            "s3AsyncClientBuilder",
            "endpointOverride"
          ],
          [
            "URI",
            "create"
          ],
          [
            "StringUtils",
            "isNotBlank"
          ],
          [
            "log",
            "info"
          ],
          [
            "s3AsyncClientBuilder",
            "region"
          ],
          [
            "Region",
            "of"
          ],
          [
            "s3AsyncClientBuilder",
            "build"
          ],
          [
            "s3AsyncClient",
            "getObject"
          ],
          [
            "GetObjectRequest",
            "builder"
          ],
          [
            "AsyncResponseTransformer",
            "toBlockingInputStream"
          ],
          [
            "object",
            "get"
          ],
          [
            "e",
            "getMessage"
          ],
          [
            "HeadObjectRequest",
            "builder"
          ],
          [
            "s3AsyncClient",
            "headObject"
          ],
          [
            "metadata",
            "setMimeType"
          ],
          [
            "awsMetadata",
            "contentType"
          ],
          [
            "metadata",
            "setLength"
          ],
          [
            "awsMetadata",
            "contentLength"
          ],
          [
            "ListObjectsV2Request",
            "builder"
          ],
          [
            "s3AsyncClient",
            "listObjectsV2"
          ],
          [
            "listObjects",
            "contents"
          ],
          [
            "foundKey",
            "substring"
          ],
          [
            "key",
            "length"
          ],
          [
            "dirContent",
            "indexOf"
          ],
          [
            "dirContent",
            "substring"
          ],
          [
            "DeleteObjectRequest",
            "builder"
          ],
          [
            "s3AsyncClient",
            "deleteObject"
          ],
          [
            "request",
            "get"
          ],
          [
            "e",
            "getMessage"
          ],
          [
            "e",
            "getCause"
          ],
          [
            "e",
            "getCause"
          ],
          [
            "s3e",
            "statusCode"
          ],
          [
            "HeadObjectRequest",
            "builder"
          ],
          [
            "s3AsyncClient",
            "headObject"
          ],
          [
            "metadata",
            "getFilename"
          ],
          [
            "PutObjectRequest",
            "builder"
          ],
          [
            "metadata",
            "getMimeType"
          ],
          [
            "metadata",
            "getLength"
          ],
          [
            "AsyncRequestBody",
            "forBlockingInputStream"
          ],
          [
            "metadata",
            "getLength"
          ],
          [
            "s3AsyncClient",
            "putObject"
          ],
          [
            "requestBody",
            "writeInputStream"
          ]
        ],
        "annotations": [
          "link",
          "since",
          "Service",
          "Qualifier",
          "Conditional",
          "Autowired",
          "Value",
          "Value",
          "Value",
          "Value",
          "Value",
          "Value",
          "Value"
        ],
        "extends": "BaseStorageService",
        "implements": [
          "StorageService"
        ],
        "lines_of_code": 246,
        "comment_lines": 29,
        "blank_lines": 31
      }
    },
    "LocalStorageService": {
      "file_path": "/Users/shashivelur/Projects/openmrs-core/api/src/main/java/org/openmrs/api/storage/LocalStorageService.java",
      "class_name": "LocalStorageService",
      "type": "interface",
      "metrics": {
        "halstead": {
          "vocabulary": 275,
          "length": 1366,
          "volume": 11069.091146290823,
          "difficulty": 45.28125,
          "effort": 501222.2834679813,
          "time": 27845.68241488785,
          "bugs": 3.6896970487636076
        },
        "cyclomatic_complexity": 17,
        "lcom": 0,
        "cbo": 4,
        "fan_in": 0,
        "fan_out": 21,
        "lines_of_code": 195,
        "effective_lines": 144,
        "comment_ratio": 0.12307692307692308,
        "method_count": 7,
        "field_count": 3,
        "import_count": 23
      },
      "elements": {
        "imports": [
          "jakarta.activation.MimetypesFileTypeMap",
          "java.io.File",
          "java.io.IOException",
          "java.io.InputStream",
          "java.nio.file.Files",
          "java.nio.file.Path",
          "java.nio.file.Paths",
          "java.nio.file.attribute.BasicFileAttributes",
          "java.util.ArrayList",
          "java.util.List",
          "java.util.stream.Stream",
          "org.apache.commons.lang.StringUtils",
          "org.apache.commons.lang3.tuple.Pair",
          "org.openmrs.api.StorageService",
          "org.openmrs.api.stream.StreamDataService",
          "org.openmrs.util.OpenmrsUtil",
          "org.slf4j.Logger",
          "org.slf4j.LoggerFactory",
          "org.springframework.beans.factory.annotation.Autowired",
          "org.springframework.beans.factory.annotation.Qualifier",
          "org.springframework.beans.factory.annotation.Value",
          "org.springframework.context.annotation.Conditional",
          "org.springframework.stereotype.Service"
        ],
        "class_name": "LocalStorageService",
        "methods": [
          "getData",
          "getLegacyStorageDir",
          "getMetadata",
          "getKeys",
          "saveData",
          "purgeData",
          "exists"
        ],
        "fields": [
          "log",
          "storageDir",
          "mimetypes"
        ],
        "method_calls": [
          [
            "LoggerFactory",
            "getLogger"
          ],
          [
            "StringUtils",
            "isBlank"
          ],
          [
            "Paths",
            "get"
          ],
          [
            "OpenmrsUtil",
            "getApplicationDataDirectory"
          ],
          [
            "Paths",
            "get"
          ],
          [
            "Files",
            "newInputStream"
          ],
          [
            "Paths",
            "get"
          ],
          [
            "OpenmrsUtil",
            "getApplicationDataDirectory"
          ],
          [
            "Files",
            "readAttributes"
          ],
          [
            "path",
            "getFileName"
          ],
          [
            "ObjectMetadata",
            "builder"
          ],
          [
            "attributes",
            "size"
          ],
          [
            "mimetypes",
            "getContentType"
          ],
          [
            "attributes",
            "creationTime"
          ],
          [
            "legacyStorageDir",
            "resolve"
          ],
          [
            "Files",
            "exists"
          ],
          [
            "legacyPath",
            "normalize"
          ],
          [
            "storageDir",
            "resolve"
          ],
          [
            "key",
            "lastIndexOf"
          ],
          [
            "key",
            "substring"
          ],
          [
            "storageDir",
            "resolve"
          ],
          [
            "searchDir",
            "toFile"
          ],
          [
            "Stream",
            "empty"
          ],
          [
            "Files",
            "list"
          ],
          [
            "stream",
            "filter"
          ],
          [
            "path",
            "getFileName"
          ],
          [
            "storageDir",
            "relativize"
          ],
          [
            "Files",
            "isDirectory"
          ],
          [
            "foundKey",
            "replace"
          ],
          [
            "foundKey",
            "startsWith"
          ],
          [
            "key",
            "replace"
          ],
          [
            "storageDir",
            "resolve"
          ],
          [
            "Files",
            "createDirectories"
          ],
          [
            "newPath",
            "getParent"
          ],
          [
            "path",
            "normalize"
          ],
          [
            "metadata",
            "getFilename"
          ],
          [
            "Files",
            "copy"
          ],
          [
            "Files",
            "deleteIfExists"
          ],
          [
            "log",
            "error"
          ],
          [
            "file",
            "exists"
          ],
          [
            "file",
            "deleteOnExit"
          ],
          [
            "log",
            "error"
          ],
          [
            "Files",
            "exists"
          ]
        ],
        "annotations": [
          "since",
          "Service",
          "Conditional",
          "Qualifier",
          "Value",
          "Autowired",
          "Override",
          "return",
          "Override",
          "Override",
          "SuppressWarnings",
          "Override",
          "Override",
          "Override"
        ],
        "extends": "BaseStorageService",
        "implements": [
          "StorageService"
        ],
        "lines_of_code": 195,
        "comment_lines": 24,
        "blank_lines": 27
      }
    },
    "BaseStorageService": {
      "file_path": "/Users/shashivelur/Projects/openmrs-core/api/src/main/java/org/openmrs/api/storage/BaseStorageService.java",
      "class_name": "",
      "type": "interface",
      "metrics": {
        "halstead": {
          "vocabulary": 189,
          "length": 876,
          "volume": 6624.52436361766,
          "difficulty": 43.10322580645162,
          "effort": 285538.3695053522,
          "time": 15863.242750297346,
          "bugs": 2.2081747878725535
        },
        "cyclomatic_complexity": 11,
        "lcom": 0,
        "cbo": 4,
        "fan_in": 0,
        "fan_out": 14,
        "lines_of_code": 121,
        "effective_lines": 89,
        "comment_ratio": 0.11570247933884298,
        "method_count": 10,
        "field_count": 3,
        "import_count": 18
      },
      "elements": {
        "imports": [
          "java.io.File",
          "java.io.IOException",
          "java.io.InputStream",
          "java.io.UnsupportedEncodingException",
          "java.net.URLDecoder",
          "java.net.URLEncoder",
          "java.nio.file.Files",
          "java.nio.file.Path",
          "java.nio.file.Paths",
          "java.nio.file.StandardCopyOption",
          "java.time.LocalDateTime",
          "java.time.format.DateTimeFormatter",
          "org.apache.commons.lang3.RandomStringUtils",
          "org.openmrs.api.StorageService",
          "org.openmrs.api.impl.BaseOpenmrsService",
          "org.openmrs.api.stream.StreamDataService",
          "org.openmrs.api.stream.StreamDataWriter",
          "org.springframework.beans.factory.annotation.Autowired"
        ],
        "class_name": "",
        "methods": [
          "BaseStorageService",
          "getTempData",
          "saveData",
          "saveData",
          "saveData",
          "saveTempData",
          "saveTempData",
          "newKey",
          "decodeKey",
          "encodeKey"
        ],
        "fields": [
          "streamService",
          "tempDir",
          "keyDateTimeFormat"
        ],
        "method_calls": [
          [
            "Paths",
            "get"
          ],
          [
            "System",
            "getProperty"
          ],
          [
            "DateTimeFormatter",
            "ofPattern"
          ],
          [
            "tempDir",
            "resolve"
          ],
          [
            "Files",
            "exists"
          ],
          [
            "Files",
            "newInputStream"
          ],
          [
            "streamService",
            "streamData"
          ],
          [
            "metadata",
            "getLength"
          ],
          [
            "Files",
            "createTempFile"
          ],
          [
            "Files",
            "copy"
          ],
          [
            "tempFile",
            "toFile"
          ],
          [
            "tempFile",
            "getFileName"
          ],
          [
            "streamService",
            "streamData"
          ],
          [
            "metadata",
            "getLength"
          ],
          [
            "LocalDateTime",
            "now"
          ],
          [
            "RandomStringUtils",
            "insecure"
          ],
          [
            "filename",
            "replace"
          ],
          [
            "moduleIdOrGroupPattern",
            "matcher"
          ],
          [
            "URLDecoder",
            "decode"
          ],
          [
            "URLEncoder",
            "encode"
          ]
        ],
        "annotations": [
          "since",
          "Autowired",
          "Override",
          "Override"
        ],
        "extends": "",
        "implements": [],
        "lines_of_code": 121,
        "comment_lines": 14,
        "blank_lines": 18
      }
    }
  },
  "implementations": {
    "HL7ServiceImpl": {
      "file_path": "/Users/shashivelur/Projects/openmrs-core/api/src/main/java/org/openmrs/hl7/impl/HL7ServiceImpl.java",
      "class_name": "HL7ServiceImpl",
      "type": "implementation",
      "metrics": {
        "halstead": {
          "vocabulary": 837,
          "length": 8167,
          "volume": 79294.08749709865,
          "difficulty": 102.95334174022699,
          "effort": 8163591.288068257,
          "time": 453532.84933712543,
          "bugs": 26.431362499032883
        },
        "cyclomatic_complexity": 174,
        "lcom": 0,
        "cbo": 27,
        "fan_in": 0,
        "fan_out": 61,
        "lines_of_code": 1187,
        "effective_lines": 781,
        "comment_ratio": 0.23083403538331929,
        "method_count": 54,
        "field_count": 4,
        "import_count": 64
      },
      "elements": {
        "imports": [
          "java.io.File",
          "java.io.FileNotFoundException",
          "java.io.FileOutputStream",
          "java.io.IOException",
          "java.io.OutputStreamWriter",
          "java.io.PrintWriter",
          "java.net.URI",
          "java.net.URISyntaxException",
          "java.nio.charset.StandardCharsets",
          "java.text.DecimalFormat",
          "java.util.ArrayList",
          "java.util.Calendar",
          "java.util.Collections",
          "java.util.Date",
          "java.util.Iterator",
          "java.util.List",
          "java.util.Map",
          "ca.uhn.hl7v2.HL7Exception",
          "ca.uhn.hl7v2.app.Application",
          "ca.uhn.hl7v2.app.ApplicationException",
          "ca.uhn.hl7v2.app.MessageTypeRouter",
          "ca.uhn.hl7v2.model.Message",
          "ca.uhn.hl7v2.model.v25.datatype.CX",
          "ca.uhn.hl7v2.model.v25.datatype.ID",
          "ca.uhn.hl7v2.model.v25.datatype.PL",
          "ca.uhn.hl7v2.model.v25.datatype.TS",
          "ca.uhn.hl7v2.model.v25.datatype.XCN",
          "ca.uhn.hl7v2.model.v25.datatype.XPN",
          "ca.uhn.hl7v2.model.v25.segment.NK1",
          "ca.uhn.hl7v2.model.v25.segment.PID",
          "ca.uhn.hl7v2.parser.EncodingNotSupportedException",
          "ca.uhn.hl7v2.parser.GenericParser",
          "org.apache.commons.lang3.StringUtils",
          "org.apache.commons.lang3.exception.ExceptionUtils",
          "org.openmrs.Location",
          "org.openmrs.Patient",
          "org.openmrs.PatientIdentifier",
          "org.openmrs.PatientIdentifierType",
          "org.openmrs.Person",
          "org.openmrs.PersonName",
          "org.openmrs.User",
          "org.openmrs.api.APIException",
          "org.openmrs.api.PatientIdentifierException",
          "org.openmrs.api.context.Context",
          "org.openmrs.api.db.DAOException",
          "org.openmrs.api.impl.BaseOpenmrsService",
          "org.openmrs.hl7.HL7Constants",
          "org.openmrs.hl7.HL7InArchive",
          "org.openmrs.hl7.HL7InError",
          "org.openmrs.hl7.HL7InQueue",
          "org.openmrs.hl7.HL7QueueItem",
          "org.openmrs.hl7.HL7Service",
          "org.openmrs.hl7.HL7Source",
          "org.openmrs.hl7.HL7Util",
          "org.openmrs.hl7.Hl7InArchivesMigrateThread",
          "org.openmrs.hl7.Hl7InArchivesMigrateThread.Status",
          "org.openmrs.hl7.db.HL7DAO",
          "org.openmrs.util.OpenmrsConstants",
          "org.openmrs.util.OpenmrsUtil",
          "org.openmrs.util.PrivilegeConstants",
          "org.openmrs.validator.PatientIdentifierValidator",
          "org.slf4j.Logger",
          "org.slf4j.LoggerFactory",
          "org.springframework.transaction.annotation.Transactional"
        ],
        "class_name": "HL7ServiceImpl",
        "methods": [
          "setHL7DAO",
          "setParser",
          "setRouter",
          "saveHL7Source",
          "purgeHL7Source",
          "retireHL7Source",
          "getHL7Source",
          "getAllHL7Sources",
          "getHL7SourceByName",
          "getAllHL7InQueues",
          "getHL7InQueueBatch",
          "getHL7InErrorBatch",
          "getHL7InArchiveBatch",
          "countHL7InQueue",
          "countHL7InError",
          "countHL7InArchive",
          "purgeHL7InQueue",
          "saveHL7InQueue",
          "getHL7InQueue",
          "getHL7InQueueByUuid",
          "getNextHL7InQueue",
          "getHL7InArchiveByState",
          "getHL7InQueueByState",
          "getAllHL7InArchives",
          "purgeHL7InArchive",
          "saveHL7InArchive",
          "getHL7InArchive",
          "getHL7InArchivesToMigrate",
          "getAllHL7InErrors",
          "purgeHL7InError",
          "saveHL7InError",
          "getHL7InError",
          "getHL7InErrorByUuid",
          "getFindingUserErrorMessage",
          "resolveUserId",
          "resolvePersonId",
          "resolveLocationId",
          "resolvePatientId",
          "resolvePersonFromIdentifiers",
          "garbageCollect",
          "processHL7InQueue",
          "setFatalError",
          "parseHL7String",
          "getHL7InArchiveByUuid",
          "processHL7Message",
          "setHL7Handlers",
          "createPersonFromNK1",
          "getUuidFromIdentifiers",
          "loadHL7InArchiveData",
          "loadHL7InArchiveData",
          "migrateHl7InArchivesToFileSystem",
          "migrateHL7InArchive",
          "writeHL7InArchiveToFileSystem",
          "getHl7QueueItemByUuid"
        ],
        "fields": [
          "log",
          "dao",
          "parser",
          "router"
        ],
        "method_calls": [
          [
            "LoggerFactory",
            "getLogger"
          ],
          [
            "hl7Source",
            "getCreator"
          ],
          [
            "hl7Source",
            "setCreator"
          ],
          [
            "Context",
            "getAuthenticatedUser"
          ],
          [
            "hl7Source",
            "getDateCreated"
          ],
          [
            "hl7Source",
            "setDateCreated"
          ],
          [
            "dao",
            "saveHL7Source"
          ],
          [
            "dao",
            "deleteHL7Source"
          ],
          [
            "dao",
            "getHL7Source"
          ],
          [
            "dao",
            "getAllHL7Sources"
          ],
          [
            "dao",
            "getHL7SourceByName"
          ],
          [
            "dao",
            "getAllHL7InQueues"
          ],
          [
            "dao",
            "getHL7Batch"
          ],
          [
            "dao",
            "getHL7Batch"
          ],
          [
            "dao",
            "getHL7Batch"
          ],
          [
            "OpenmrsUtil",
            "convertToInteger"
          ],
          [
            "dao",
            "countHL7s"
          ],
          [
            "OpenmrsUtil",
            "convertToInteger"
          ],
          [
            "dao",
            "countHL7s"
          ],
          [
            "OpenmrsUtil",
            "convertToInteger"
          ],
          [
            "dao",
            "countHL7s"
          ],
          [
            "dao",
            "deleteHL7InQueue"
          ],
          [
            "hl7InQueue",
            "getDateCreated"
          ],
          [
            "hl7InQueue",
            "setDateCreated"
          ],
          [
            "hl7InQueue",
            "getMessageState"
          ],
          [
            "hl7InQueue",
            "setMessageState"
          ],
          [
            "dao",
            "saveHL7InQueue"
          ],
          [
            "dao",
            "getHL7InQueue"
          ],
          [
            "dao",
            "getHL7InQueueByUuid"
          ],
          [
            "dao",
            "getNextHL7InQueue"
          ],
          [
            "dao",
            "getHL7InArchiveByState"
          ],
          [
            "dao",
            "getHL7InQueueByState"
          ],
          [
            "dao",
            "getAllHL7InArchives"
          ],
          [
            "dao",
            "deleteHL7InArchive"
          ],
          [
            "hl7InArchive",
            "getDateCreated"
          ],
          [
            "hl7InArchive",
            "setDateCreated"
          ],
          [
            "dao",
            "saveHL7InArchive"
          ],
          [
            "dao",
            "getHL7InArchive"
          ],
          [
            "dao",
            "getHL7InArchivesToMigrate"
          ],
          [
            "dao",
            "getAllHL7InErrors"
          ],
          [
            "dao",
            "deleteHL7InError"
          ],
          [
            "hl7InError",
            "getDateCreated"
          ],
          [
            "hl7InError",
            "setDateCreated"
          ],
          [
            "dao",
            "saveHL7InError"
          ],
          [
            "dao",
            "getHL7InError"
          ],
          [
            "dao",
            "getHL7InErrorByUuid"
          ],
          [
            "xcn",
            "getIDNumber"
          ],
          [
            "xcn",
            "getFamilyName"
          ],
          [
            "xcn",
            "getGivenName"
          ],
          [
            "idNumber",
            "length"
          ],
          [
            "Integer",
            "valueOf"
          ],
          [
            "Context",
            "getUserService"
          ],
          [
            "user",
            "getUserId"
          ],
          [
            "log",
            "error"
          ],
          [
            "Context",
            "getUserService"
          ],
          [
            "users",
            "size"
          ],
          [
            "users",
            "get"
          ],
          [
            "users",
            "size"
          ],
          [
            "log",
            "error"
          ],
          [
            "users",
            "size"
          ],
          [
            "username",
            "append"
          ],
          [
            "username",
            "length"
          ],
          [
            "username",
            "append"
          ],
          [
            "username",
            "append"
          ],
          [
            "Context",
            "getUserService"
          ],
          [
            "username",
            "toString"
          ],
          [
            "log",
            "error"
          ],
          [
            "user",
            "getUserId"
          ],
          [
            "log",
            "error"
          ],
          [
            "xcn",
            "getIDNumber"
          ],
          [
            "xcn",
            "getFamilyName"
          ],
          [
            "xcn",
            "getGivenName"
          ],
          [
            "idNumber",
            "length"
          ],
          [
            "Context",
            "getPersonService"
          ],
          [
            "Integer",
            "valueOf"
          ],
          [
            "person",
            "getPersonId"
          ],
          [
            "log",
            "error"
          ],
          [
            "Context",
            "getPersonService"
          ],
          [
            "persons",
            "size"
          ],
          [
            "persons",
            "get"
          ],
          [
            "persons",
            "isEmpty"
          ],
          [
            "log",
            "error"
          ],
          [
            "log",
            "error"
          ],
          [
            "pl",
            "getPointOfCare"
          ],
          [
            "pl",
            "getFacility"
          ],
          [
            "Integer",
            "valueOf"
          ],
          [
            "Context",
            "getLocationService"
          ],
          [
            "l",
            "getLocationId"
          ],
          [
            "Context",
            "getLocationService"
          ],
          [
            "log",
            "debug"
          ],
          [
            "l",
            "getLocationId"
          ],
          [
            "log",
            "error"
          ],
          [
            "pid",
            "getPatientIdentifierList"
          ],
          [
            "p",
            "getIsPatient"
          ],
          [
            "p",
            "getPersonId"
          ],
          [
            "identifier",
            "getIDNumber"
          ],
          [
            "identifier",
            "getAssigningAuthority"
          ],
          [
            "StringUtils",
            "isNotBlank"
          ],
          [
            "Context",
            "getPatientService"
          ],
          [
            "assigningAuthority",
            "equals"
          ],
          [
            "Context",
            "getPersonService"
          ],
          [
            "log",
            "warn"
          ],
          [
            "assigningAuthority",
            "equals"
          ],
          [
            "identifier",
            "getIdentifierTypeCode"
          ],
          [
            "idType",
            "equals"
          ],
          [
            "Integer",
            "parseInt"
          ],
          [
            "Context",
            "getPersonService"
          ],
          [
            "idType",
            "equals"
          ],
          [
            "Integer",
            "parseInt"
          ],
          [
            "Context",
            "getPatientService"
          ],
          [
            "log",
            "warn"
          ],
          [
            "log",
            "warn"
          ],
          [
            "Context",
            "getPatientService"
          ],
          [
            "Collections",
            "singletonList"
          ],
          [
            "matchingIds",
            "isEmpty"
          ],
          [
            "log",
            "warn"
          ],
          [
            "matchingIds",
            "size"
          ],
          [
            "matchingIds",
            "get"
          ],
          [
            "log",
            "debug"
          ],
          [
            "matchingIds",
            "size"
          ],
          [
            "log",
            "error"
          ],
          [
            "log",
            "debug"
          ],
          [
            "Context",
            "getPatientService"
          ],
          [
            "Integer",
            "parseInt"
          ],
          [
            "log",
            "warn"
          ],
          [
            "dao",
            "garbageCollect"
          ],
          [
            "OpenmrsUtil",
            "nullSafeEquals"
          ],
          [
            "hl7InQueue",
            "getMessageState"
          ],
          [
            "hl7InQueue",
            "getHL7InQueueId"
          ],
          [
            "hl7InQueue",
            "getHL7SourceKey"
          ],
          [
            "hl7InQueue",
            "setMessageState"
          ],
          [
            "log",
            "debug"
          ],
          [
            "hl7InQueue",
            "getHL7InQueueId"
          ],
          [
            "hl7InQueue",
            "getHL7SourceKey"
          ],
          [
            "hl7InQueue",
            "getHL7Data"
          ],
          [
            "Context",
            "getHL7Service"
          ],
          [
            "Context",
            "getHL7Service"
          ],
          [
            "log",
            "debug"
          ],
          [
            "Context",
            "getHL7Service"
          ],
          [
            "log",
            "debug"
          ],
          [
            "Context",
            "getHL7Service"
          ],
          [
            "log",
            "debug"
          ],
          [
            "hl7InQueue",
            "getHL7InQueueId"
          ],
          [
            "log",
            "debug"
          ],
          [
            "hl7InQueue",
            "getHL7Source"
          ],
          [
            "log",
            "debug"
          ],
          [
            "Context",
            "getAdministrationService"
          ],
          [
            "e",
            "getCause"
          ],
          [
            "e",
            "getCause"
          ],
          [
            "hl7InQueue",
            "getHL7Source"
          ],
          [
            "Context",
            "getAdministrationService"
          ],
          [
            "hl7InQueue",
            "getHL7SourceKey"
          ],
          [
            "hl7InQueue",
            "getHL7SourceKey"
          ],
          [
            "hl7InError",
            "setError"
          ],
          [
            "hl7InError",
            "setErrorDetails"
          ],
          [
            "log",
            "error"
          ],
          [
            "hl7InError",
            "setErrorDetails"
          ],
          [
            "ExceptionUtils",
            "getStackTrace"
          ],
          [
            "Context",
            "getHL7Service"
          ],
          [
            "Context",
            "getHL7Service"
          ],
          [
            "log",
            "info"
          ],
          [
            "parser",
            "parse"
          ],
          [
            "Hl7InArchivesMigrateThread",
            "isActive"
          ],
          [
            "dao",
            "getHL7InArchiveByUuid"
          ],
          [
            "router",
            "canProcess"
          ],
          [
            "message",
            "getName"
          ],
          [
            "router",
            "processMessage"
          ],
          [
            "message",
            "getName"
          ],
          [
            "handlers",
            "entrySet"
          ],
          [
            "entry",
            "getKey"
          ],
          [
            "messageName",
            "contains"
          ],
          [
            "messageName",
            "split"
          ],
          [
            "messageName",
            "split"
          ],
          [
            "router",
            "registerApplication"
          ],
          [
            "entry",
            "getValue"
          ],
          [
            "nk1",
            "getNextOfKinAssociatedPartySIdentifiers"
          ],
          [
            "Context",
            "getPersonService"
          ],
          [
            "person",
            "setUuid"
          ],
          [
            "id",
            "getAssigningAuthority"
          ],
          [
            "id",
            "getIDNumber"
          ],
          [
            "log",
            "debug"
          ],
          [
            "assigningAuthority",
            "length"
          ],
          [
            "Context",
            "getPatientService"
          ],
          [
            "log",
            "warn"
          ],
          [
            "pi",
            "setIdentifierType"
          ],
          [
            "pi",
            "setIdentifier"
          ],
          [
            "Context",
            "getLocationService"
          ],
          [
            "pi",
            "setLocation"
          ],
          [
            "PatientIdentifierValidator",
            "validateIdentifier"
          ],
          [
            "goodIdentifiers",
            "add"
          ],
          [
            "log",
            "warn"
          ],
          [
            "log",
            "error"
          ],
          [
            "log",
            "debug"
          ],
          [
            "goodIdentifiers",
            "isEmpty"
          ],
          [
            "goodIdentifiers",
            "size"
          ],
          [
            "goodIdentifiers",
            "get"
          ],
          [
            "nk1",
            "getNKName"
          ],
          [
            "name",
            "setFamilyName"
          ],
          [
            "patientNameX",
            "getFamilyName"
          ],
          [
            "name",
            "setGivenName"
          ],
          [
            "patientNameX",
            "getGivenName"
          ],
          [
            "name",
            "setMiddleName"
          ],
          [
            "patientNameX",
            "getSecondAndFurtherGivenNamesOrInitialsThereof"
          ],
          [
            "person",
            "addName"
          ],
          [
            "nk1",
            "getAdministrativeSex"
          ],
          [
            "gender",
            "toUpperCase"
          ],
          [
            "GENDERS",
            "contains"
          ],
          [
            "person",
            "setGender"
          ],
          [
            "nk1",
            "getDateTimeOfBirth"
          ],
          [
            "dateOfBirth",
            "getTime"
          ],
          [
            "dateOfBirth",
            "getTime"
          ],
          [
            "person",
            "setBirthdate"
          ],
          [
            "HL7Util",
            "parseHL7Timestamp"
          ],
          [
            "dateOfBirth",
            "getTime"
          ],
          [
            "dateOfBirth",
            "getDegreeOfPrecision"
          ],
          [
            "precisionTemp",
            "getValue"
          ],
          [
            "precisionTemp",
            "getValue"
          ],
          [
            "log",
            "debug"
          ],
          [
            "person",
            "setBirthdateEstimated"
          ],
          [
            "Context",
            "getPatientService"
          ],
          [
            "Context",
            "getPersonService"
          ],
          [
            "OpenmrsUtil",
            "nullSafeEquals"
          ],
          [
            "identifier",
            "getAssigningAuthority"
          ],
          [
            "OpenmrsUtil",
            "nullSafeEquals"
          ],
          [
            "identifier",
            "getIDNumber"
          ],
          [
            "identifier",
            "getIDNumber"
          ],
          [
            "OpenmrsUtil",
            "nullSafeEquals"
          ],
          [
            "archive",
            "getMessageState"
          ],
          [
            "archive",
            "isLoaded"
          ],
          [
            "archive",
            "setHL7Data"
          ],
          [
            "OpenmrsUtil",
            "getFileAsString"
          ],
          [
            "archive",
            "getHL7Data"
          ],
          [
            "archive",
            "setLoaded"
          ],
          [
            "archive",
            "getHL7Data"
          ],
          [
            "archive",
            "getHL7Data"
          ],
          [
            "Hl7InArchivesMigrateThread",
            "isActive"
          ],
          [
            "Hl7InArchivesMigrateThread",
            "getTransferStatus"
          ],
          [
            "hl7InArchives",
            "isEmpty"
          ],
          [
            "hl7InArchives",
            "iterator"
          ],
          [
            "Hl7InArchivesMigrateThread",
            "isActive"
          ],
          [
            "Hl7InArchivesMigrateThread",
            "getTransferStatus"
          ],
          [
            "iterator",
            "hasNext"
          ],
          [
            "iterator",
            "next"
          ],
          [
            "progressStatusMap",
            "put"
          ],
          [
            "progressStatusMap",
            "put"
          ],
          [
            "log",
            "debug"
          ],
          [
            "OpenmrsUtil",
            "nullSafeEquals"
          ],
          [
            "archive",
            "getMessageState"
          ],
          [
            "archive",
            "setHL7Data"
          ],
          [
            "uri",
            "toString"
          ],
          [
            "archive",
            "setMessageState"
          ],
          [
            "HL7Util",
            "getHl7ArchivesDirectory"
          ],
          [
            "Calendar",
            "getInstance"
          ],
          [
            "Context",
            "getLocale"
          ],
          [
            "calendar",
            "setTime"
          ],
          [
            "hl7InArchive",
            "getDateCreated"
          ],
          [
            "Integer",
            "toString"
          ],
          [
            "calendar",
            "get"
          ],
          [
            "yearDir",
            "isDirectory"
          ],
          [
            "yearDir",
            "mkdirs"
          ],
          [
            "df",
            "format"
          ],
          [
            "calendar",
            "get"
          ],
          [
            "monthDir",
            "isDirectory"
          ],
          [
            "monthDir",
            "mkdirs"
          ],
          [
            "df",
            "format"
          ],
          [
            "calendar",
            "get"
          ],
          [
            "dayDir",
            "isDirectory"
          ],
          [
            "dayDir",
            "mkdirs"
          ],
          [
            "hl7InArchive",
            "getUuid"
          ],
          [
            "StringUtils",
            "isBlank"
          ],
          [
            "hl7InArchive",
            "getHL7SourceKey"
          ],
          [
            "hl7InArchive",
            "getHL7SourceKey"
          ],
          [
            "writer",
            "write"
          ],
          [
            "hl7InArchive",
            "getHL7Data"
          ],
          [
            "writer",
            "checkError"
          ],
          [
            "log",
            "warn"
          ],
          [
            "hl7InArchive",
            "getHL7InArchiveId"
          ],
          [
            "fileToWriteTo",
            "toURI"
          ],
          [
            "hl7InArchive",
            "getHL7InArchiveId"
          ],
          [
            "writer",
            "close"
          ],
          [
            "Context",
            "hasPrivilege"
          ],
          [
            "Context",
            "hasPrivilege"
          ],
          [
            "Context",
            "hasPrivilege"
          ]
        ],
        "annotations": [
          "link",
          "see",
          "Transactional",
          "see",
          "Override",
          "param",
          "param",
          "see",
          "Override",
          "see",
          "Override",
          "see",
          "Override",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "see",
          "Override",
          "see",
          "Override",
          "Transactional",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "see",
          "Override",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "see",
          "Override",
          "see",
          "Override",
          "Transactional",
          "Override",
          "Transactional",
          "param",
          "param",
          "param",
          "return",
          "param",
          "return",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "param",
          "return",
          "Override",
          "Transactional",
          "param",
          "return",
          "throws",
          "Override",
          "Transactional",
          "param",
          "return",
          "throws",
          "Override",
          "Transactional",
          "see",
          "Override",
          "see",
          "Override",
          "see",
          "Override",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "param",
          "see",
          "Override",
          "see",
          "Override",
          "see",
          "Override",
          "see",
          "Override",
          "see",
          "Override",
          "param",
          "throws",
          "param",
          "Override",
          "Transactional"
        ],
        "extends": "BaseOpenmrsService",
        "implements": [
          "HL7Service"
        ],
        "lines_of_code": 1187,
        "comment_lines": 274,
        "blank_lines": 132
      }
    },
    "PatientServiceImpl": {
      "file_path": "/Users/shashivelur/Projects/openmrs-core/api/src/main/java/org/openmrs/api/impl/PatientServiceImpl.java",
      "class_name": "PatientServiceImpl",
      "type": "implementation",
      "metrics": {
        "halstead": {
          "vocabulary": 962,
          "length": 11535,
          "volume": 114310.61672128743,
          "difficulty": 117.50869565217391,
          "effort": 13432491.470114067,
          "time": 746249.5261174482,
          "bugs": 38.10353890709581
        },
        "cyclomatic_complexity": 240,
        "lcom": 0,
        "cbo": 49,
        "fan_in": 0,
        "fan_out": 87,
        "lines_of_code": 1640,
        "effective_lines": 1085,
        "comment_ratio": 0.21646341463414634,
        "method_count": 82,
        "field_count": 3,
        "import_count": 63
      },
      "elements": {
        "imports": [
          "java.util.ArrayList",
          "java.util.Collection",
          "java.util.Collections",
          "java.util.Date",
          "java.util.HashSet",
          "java.util.LinkedHashMap",
          "java.util.List",
          "java.util.Map",
          "java.util.Set",
          "java.util.UUID",
          "java.util.stream.Collectors",
          "org.apache.commons.lang3.StringUtils",
          "org.openmrs.Allergen",
          "org.openmrs.Allergies",
          "org.openmrs.Allergy",
          "org.openmrs.BaseOpenmrsMetadata",
          "org.openmrs.Concept",
          "org.openmrs.Encounter",
          "org.openmrs.Location",
          "org.openmrs.Obs",
          "org.openmrs.Order",
          "org.openmrs.Patient",
          "org.openmrs.PatientIdentifier",
          "org.openmrs.PatientIdentifierType",
          "org.openmrs.PatientProgram",
          "org.openmrs.Person",
          "org.openmrs.PersonAddress",
          "org.openmrs.PersonAttribute",
          "org.openmrs.PersonName",
          "org.openmrs.Relationship",
          "org.openmrs.User",
          "org.openmrs.Visit",
          "org.openmrs.api.APIException",
          "org.openmrs.api.BlankIdentifierException",
          "org.openmrs.api.DuplicateIdentifierException",
          "org.openmrs.api.EncounterService",
          "org.openmrs.api.InsufficientIdentifiersException",
          "org.openmrs.api.MissingRequiredIdentifierException",
          "org.openmrs.api.ObsService",
          "org.openmrs.api.PatientIdentifierException",
          "org.openmrs.api.PatientIdentifierTypeLockedException",
          "org.openmrs.api.PatientService",
          "org.openmrs.api.PersonService",
          "org.openmrs.api.ProgramWorkflowService",
          "org.openmrs.api.UserService",
          "org.openmrs.api.VisitService",
          "org.openmrs.api.context.Context",
          "org.openmrs.api.db.PatientDAO",
          "org.openmrs.api.db.hibernate.HibernateUtil",
          "org.openmrs.parameter.EncounterSearchCriteria",
          "org.openmrs.parameter.EncounterSearchCriteriaBuilder",
          "org.openmrs.patient.IdentifierValidator",
          "org.openmrs.patient.impl.LuhnIdentifierValidator",
          "org.openmrs.person.PersonMergeLog",
          "org.openmrs.person.PersonMergeLogData",
          "org.openmrs.serialization.SerializationException",
          "org.openmrs.util.OpenmrsConstants",
          "org.openmrs.util.OpenmrsUtil",
          "org.openmrs.util.PrivilegeConstants",
          "org.openmrs.validator.PatientIdentifierValidator",
          "org.slf4j.Logger",
          "org.slf4j.LoggerFactory",
          "org.springframework.transaction.annotation.Transactional"
        ],
        "class_name": "PatientServiceImpl",
        "methods": [
          "setPatientDAO",
          "onShutdown",
          "savePatient",
          "requireAppropriatePatientModificationPrivilege",
          "setPreferredPatientIdentifier",
          "setPreferredPatientName",
          "setPreferredPatientAddress",
          "getPatient",
          "getPatientOrPromotePerson",
          "getAllPatients",
          "getAllPatients",
          "getPatients",
          "checkPatientIdentifiers",
          "checkForMissingRequiredIdentifiers",
          "voidPatient",
          "unvoidPatient",
          "purgePatient",
          "getPatientIdentifiers",
          "savePatientIdentifierType",
          "getAllPatientIdentifierTypes",
          "getAllPatientIdentifierTypes",
          "getPatientIdentifierTypes",
          "getPatientIdentifierType",
          "getPatientIdentifierTypeByName",
          "retirePatientIdentifierType",
          "unretirePatientIdentifierType",
          "purgePatientIdentifierType",
          "getPatients",
          "getPatientByExample",
          "getDuplicatePatientsByAttributes",
          "relationshipHash",
          "mergePatients",
          "requireNoActiveOrderOfSameType",
          "mergeProgramEnrolments",
          "mergeVisits",
          "mergeEncounters",
          "mergeRelationships",
          "mergeObservationsNotContainedInEncounters",
          "mergeIdentifiers",
          "mergeDateOfDeath",
          "mergeDateOfBirth",
          "mergePersonAttributes",
          "mergeGenderInformation",
          "mergeNames",
          "constructTemporaryName",
          "mergeAddresses",
          "changeUserAssociations",
          "exitFromCare",
          "saveReasonForExitObs",
          "processDeath",
          "saveCauseOfDeathObs",
          "getPatientByUuid",
          "getPatientIdentifierByUuid",
          "getPatientIdentifierTypeByUuid",
          "getDefaultIdentifierValidator",
          "getIdentifierValidator",
          "getIdentifierValidators",
          "setIdentifierValidators",
          "setStaticIdentifierValidators",
          "getAllIdentifierValidators",
          "getIdentifierValidator",
          "isIdentifierInUseByAnotherPatient",
          "getPatientIdentifier",
          "voidPatientIdentifier",
          "mergePatients",
          "savePatientIdentifier",
          "purgePatientIdentifier",
          "getAllergies",
          "setAllergies",
          "voidAllergy",
          "getAllergy",
          "getAllergyByUuid",
          "saveAllergy",
          "removeAllergy",
          "voidAllergy",
          "getCountOfPatients",
          "getCountOfPatients",
          "getPatients",
          "getPatients",
          "getPatients",
          "checkIfPatientIdentifierTypesAreLocked",
          "getPatientIdentifiersByPatientProgram"
        ],
        "fields": [
          "log",
          "dao",
          "identifierValidators"
        ],
        "method_calls": [
          [
            "Context",
            "getPatientService"
          ],
          [
            "LoggerFactory",
            "getLogger"
          ],
          [
            "patient",
            "getVoided"
          ],
          [
            "patient",
            "getIdentifiers"
          ],
          [
            "patient",
            "getPatientIdentifier"
          ],
          [
            "patient",
            "getVoided"
          ],
          [
            "dao",
            "savePatient"
          ],
          [
            "patient",
            "getPatientId"
          ],
          [
            "Context",
            "requirePrivilege"
          ],
          [
            "Context",
            "requirePrivilege"
          ],
          [
            "patient",
            "getVoided"
          ],
          [
            "Context",
            "requirePrivilege"
          ],
          [
            "patient",
            "getPatientIdentifier"
          ],
          [
            "possiblePreferredId",
            "getPreferred"
          ],
          [
            "possiblePreferredId",
            "getVoided"
          ],
          [
            "patient",
            "getIdentifiers"
          ],
          [
            "id",
            "getVoided"
          ],
          [
            "id",
            "setPreferred"
          ],
          [
            "id",
            "equals"
          ],
          [
            "id",
            "setPreferred"
          ],
          [
            "patient",
            "getPersonName"
          ],
          [
            "possiblePreferredName",
            "getPreferred"
          ],
          [
            "possiblePreferredName",
            "getVoided"
          ],
          [
            "patient",
            "getNames"
          ],
          [
            "name",
            "getVoided"
          ],
          [
            "name",
            "setPreferred"
          ],
          [
            "name",
            "equals"
          ],
          [
            "name",
            "setPreferred"
          ],
          [
            "patient",
            "getPersonAddress"
          ],
          [
            "possiblePreferredAddress",
            "getPreferred"
          ],
          [
            "possiblePreferredAddress",
            "getVoided"
          ],
          [
            "patient",
            "getAddresses"
          ],
          [
            "address",
            "getVoided"
          ],
          [
            "address",
            "setPreferred"
          ],
          [
            "address",
            "equals"
          ],
          [
            "address",
            "setPreferred"
          ],
          [
            "dao",
            "getPatient"
          ],
          [
            "Context",
            "getPersonService"
          ],
          [
            "HibernateUtil",
            "getRealObjectFromProxy"
          ],
          [
            "Context",
            "getPatientService"
          ],
          [
            "dao",
            "getAllPatients"
          ],
          [
            "Context",
            "getPatientService"
          ],
          [
            "patient",
            "getVoided"
          ],
          [
            "patient",
            "getActiveIdentifiers"
          ],
          [
            "patient",
            "getIdentifiers"
          ],
          [
            "patientIdentifiers",
            "stream"
          ],
          [
            "pi",
            "getVoided"
          ],
          [
            "PatientIdentifierValidator",
            "validateIdentifier"
          ],
          [
            "patient",
            "removeIdentifier"
          ],
          [
            "pi",
            "getIdentifier"
          ],
          [
            "pi",
            "getIdentifierType"
          ],
          [
            "uniqueIdentifiers",
            "add"
          ],
          [
            "patientIdentifiers",
            "stream"
          ],
          [
            "Collectors",
            "toSet"
          ],
          [
            "this",
            "getPatientIdentifierTypes"
          ],
          [
            "requiredTypes",
            "stream"
          ],
          [
            "patientIdentifierTypes",
            "contains"
          ],
          [
            "Collectors",
            "toSet"
          ],
          [
            "missingRequiredTypeNames",
            "isEmpty"
          ],
          [
            "String",
            "join"
          ],
          [
            "dao",
            "savePatient"
          ],
          [
            "Context",
            "getPatientService"
          ],
          [
            "dao",
            "deletePatient"
          ],
          [
            "dao",
            "getPatientIdentifiers"
          ],
          [
            "dao",
            "savePatientIdentifierType"
          ],
          [
            "Context",
            "getPatientService"
          ],
          [
            "dao",
            "getAllPatientIdentifierTypes"
          ],
          [
            "dao",
            "getPatientIdentifierTypes"
          ],
          [
            "dao",
            "getPatientIdentifierType"
          ],
          [
            "types",
            "isEmpty"
          ],
          [
            "types",
            "get"
          ],
          [
            "reason",
            "length"
          ],
          [
            "patientIdentifierType",
            "setRetired"
          ],
          [
            "patientIdentifierType",
            "setRetiredBy"
          ],
          [
            "Context",
            "getAuthenticatedUser"
          ],
          [
            "patientIdentifierType",
            "setDateRetired"
          ],
          [
            "patientIdentifierType",
            "setRetireReason"
          ],
          [
            "Context",
            "getPatientService"
          ],
          [
            "patientIdentifierType",
            "setRetired"
          ],
          [
            "patientIdentifierType",
            "setRetiredBy"
          ],
          [
            "patientIdentifierType",
            "setDateRetired"
          ],
          [
            "patientIdentifierType",
            "setRetireReason"
          ],
          [
            "Context",
            "getPatientService"
          ],
          [
            "dao",
            "deletePatientIdentifierType"
          ],
          [
            "Context",
            "getPatientService"
          ],
          [
            "patientToMatch",
            "getPatientId"
          ],
          [
            "Context",
            "getPatientService"
          ],
          [
            "patientToMatch",
            "getPatientId"
          ],
          [
            "attributes",
            "isEmpty"
          ],
          [
            "dao",
            "getDuplicatePatientsByAttributes"
          ],
          [
            "rel",
            "getPersonA"
          ],
          [
            "rel",
            "getRelationshipType"
          ],
          [
            "rel",
            "getPersonB"
          ],
          [
            "rel",
            "getPersonA"
          ],
          [
            "log",
            "debug"
          ],
          [
            "preferred",
            "getPatientId"
          ],
          [
            "notPreferred",
            "getPatientId"
          ],
          [
            "preferred",
            "getPatientId"
          ],
          [
            "notPreferred",
            "getPatientId"
          ],
          [
            "log",
            "debug"
          ],
          [
            "preferred",
            "getPatientId"
          ],
          [
            "preferred",
            "getPatientId"
          ],
          [
            "Context",
            "getPatientService"
          ],
          [
            "preferred",
            "getPatientId"
          ],
          [
            "Context",
            "getPersonService"
          ],
          [
            "preferred",
            "getPatientId"
          ],
          [
            "personMergeLog",
            "setWinner"
          ],
          [
            "personMergeLog",
            "setLoser"
          ],
          [
            "personMergeLog",
            "setPersonMergeLogData"
          ],
          [
            "Context",
            "getPersonService"
          ],
          [
            "Context",
            "getOrderService"
          ],
          [
            "Context",
            "getOrderService"
          ],
          [
            "ordersByPatient1",
            "forEach"
          ],
          [
            "ordersByPatient2",
            "forEach"
          ],
          [
            "order1",
            "isActive"
          ],
          [
            "order2",
            "isActive"
          ],
          [
            "order1",
            "getOrderType"
          ],
          [
            "order2",
            "getOrderType"
          ],
          [
            "patient1",
            "getPatientId"
          ],
          [
            "patient2",
            "getPatientId"
          ],
          [
            "order1",
            "getOrderType"
          ],
          [
            "Context",
            "getMessageSourceService"
          ],
          [
            "Context",
            "getLocale"
          ],
          [
            "log",
            "debug"
          ],
          [
            "Context",
            "getProgramWorkflowService"
          ],
          [
            "programService",
            "getPatientPrograms"
          ],
          [
            "pp",
            "getVoided"
          ],
          [
            "pp",
            "setPatient"
          ],
          [
            "log",
            "debug"
          ],
          [
            "pp",
            "getPatientProgramId"
          ],
          [
            "preferred",
            "getPatientId"
          ],
          [
            "programService",
            "savePatientProgram"
          ],
          [
            "mergedData",
            "addMovedProgram"
          ],
          [
            "persisted",
            "getUuid"
          ],
          [
            "Context",
            "getVisitService"
          ],
          [
            "visitService",
            "getVisitsByPatient"
          ],
          [
            "log",
            "debug"
          ],
          [
            "visit",
            "getVisitId"
          ],
          [
            "preferred",
            "getPatientId"
          ],
          [
            "visit",
            "setPatient"
          ],
          [
            "visitService",
            "saveVisit"
          ],
          [
            "mergedData",
            "addMovedVisit"
          ],
          [
            "persisted",
            "getUuid"
          ],
          [
            "Context",
            "getEncounterService"
          ],
          [
            "es",
            "getEncounters"
          ],
          [
            "e",
            "setPatient"
          ],
          [
            "log",
            "debug"
          ],
          [
            "e",
            "getEncounterId"
          ],
          [
            "preferred",
            "getPatientId"
          ],
          [
            "es",
            "saveEncounter"
          ],
          [
            "mergedData",
            "addMovedEncounter"
          ],
          [
            "persisted",
            "getUuid"
          ],
          [
            "Context",
            "getPersonService"
          ],
          [
            "personService",
            "getRelationshipsByPerson"
          ],
          [
            "existingRelationships",
            "add"
          ],
          [
            "personService",
            "getRelationshipsByPerson"
          ],
          [
            "rel",
            "getVoided"
          ],
          [
            "rel",
            "getPersonA"
          ],
          [
            "rel",
            "getPersonA"
          ],
          [
            "rel",
            "getPersonB"
          ],
          [
            "rel",
            "getPersonB"
          ],
          [
            "personService",
            "voidRelationship"
          ],
          [
            "existingRelationships",
            "contains"
          ],
          [
            "personService",
            "voidRelationship"
          ],
          [
            "rel",
            "copy"
          ],
          [
            "tmpRel",
            "setPersonA"
          ],
          [
            "tmpRel",
            "setPersonB"
          ],
          [
            "log",
            "debug"
          ],
          [
            "rel",
            "getRelationshipId"
          ],
          [
            "preferred",
            "getPatientId"
          ],
          [
            "personService",
            "saveRelationship"
          ],
          [
            "mergedData",
            "addCreatedRelationship"
          ],
          [
            "persisted",
            "getUuid"
          ],
          [
            "personService",
            "voidRelationship"
          ],
          [
            "tmpRel",
            "getRelationshipId"
          ],
          [
            "existingRelationships",
            "add"
          ],
          [
            "mergedData",
            "addVoidedRelationship"
          ],
          [
            "rel",
            "getUuid"
          ],
          [
            "Context",
            "getObsService"
          ],
          [
            "obsService",
            "getObservationsByPerson"
          ],
          [
            "obs",
            "getEncounter"
          ],
          [
            "obs",
            "getVoided"
          ],
          [
            "obs",
            "setPerson"
          ],
          [
            "obsService",
            "saveObs"
          ],
          [
            "notPreferred",
            "getPatientId"
          ],
          [
            "mergedData",
            "addMovedIndependentObservation"
          ],
          [
            "persisted",
            "getUuid"
          ],
          [
            "notPreferred",
            "getActiveIdentifiers"
          ],
          [
            "tmpIdentifier",
            "setIdentifier"
          ],
          [
            "pi",
            "getIdentifier"
          ],
          [
            "tmpIdentifier",
            "setIdentifierType"
          ],
          [
            "pi",
            "getIdentifierType"
          ],
          [
            "tmpIdentifier",
            "setLocation"
          ],
          [
            "pi",
            "getLocation"
          ],
          [
            "tmpIdentifier",
            "setPatient"
          ],
          [
            "preferred",
            "getIdentifiers"
          ],
          [
            "preferredIdentifier",
            "getIdentifier"
          ],
          [
            "preferredIdentifier",
            "getIdentifier"
          ],
          [
            "tmpIdentifier",
            "getIdentifier"
          ],
          [
            "preferredIdentifier",
            "getIdentifierType"
          ],
          [
            "preferredIdentifier",
            "getIdentifierType"
          ],
          [
            "tmpIdentifier",
            "getIdentifierType"
          ],
          [
            "tmpIdentifier",
            "setIdentifierType"
          ],
          [
            "pi",
            "getIdentifierType"
          ],
          [
            "tmpIdentifier",
            "setCreator"
          ],
          [
            "Context",
            "getAuthenticatedUser"
          ],
          [
            "tmpIdentifier",
            "setDateCreated"
          ],
          [
            "tmpIdentifier",
            "setVoided"
          ],
          [
            "tmpIdentifier",
            "setVoidedBy"
          ],
          [
            "tmpIdentifier",
            "setVoidReason"
          ],
          [
            "tmpIdentifier",
            "setUuid"
          ],
          [
            "UUID",
            "randomUUID"
          ],
          [
            "tmpIdentifier",
            "setPreferred"
          ],
          [
            "preferred",
            "addIdentifier"
          ],
          [
            "mergedData",
            "addCreatedIdentifier"
          ],
          [
            "tmpIdentifier",
            "getUuid"
          ],
          [
            "log",
            "debug"
          ],
          [
            "tmpIdentifier",
            "getIdentifier"
          ],
          [
            "preferred",
            "getPatientId"
          ],
          [
            "mergedData",
            "setPriorDateOfDeath"
          ],
          [
            "preferred",
            "getDeathDate"
          ],
          [
            "preferred",
            "getDeathDate"
          ],
          [
            "preferred",
            "setDeathDate"
          ],
          [
            "notPreferred",
            "getDeathDate"
          ],
          [
            "preferred",
            "getCauseOfDeath"
          ],
          [
            "mergedData",
            "setPriorCauseOfDeath"
          ],
          [
            "preferred",
            "getCauseOfDeath"
          ],
          [
            "preferred",
            "getCauseOfDeath"
          ],
          [
            "preferred",
            "setCauseOfDeath"
          ],
          [
            "notPreferred",
            "getCauseOfDeath"
          ],
          [
            "mergedData",
            "setPriorDateOfBirth"
          ],
          [
            "preferred",
            "getBirthdate"
          ],
          [
            "mergedData",
            "setPriorDateOfBirthEstimated"
          ],
          [
            "preferred",
            "getBirthdateEstimated"
          ],
          [
            "preferred",
            "getBirthdate"
          ],
          [
            "preferred",
            "getBirthdateEstimated"
          ],
          [
            "notPreferred",
            "getBirthdateEstimated"
          ],
          [
            "preferred",
            "setBirthdate"
          ],
          [
            "notPreferred",
            "getBirthdate"
          ],
          [
            "preferred",
            "setBirthdateEstimated"
          ],
          [
            "notPreferred",
            "getBirthdateEstimated"
          ],
          [
            "notPreferred",
            "getAttributes"
          ],
          [
            "attr",
            "getVoided"
          ],
          [
            "attr",
            "copy"
          ],
          [
            "tmpAttr",
            "setPerson"
          ],
          [
            "tmpAttr",
            "setUuid"
          ],
          [
            "UUID",
            "randomUUID"
          ],
          [
            "preferred",
            "addAttribute"
          ],
          [
            "mergedData",
            "addCreatedAttribute"
          ],
          [
            "tmpAttr",
            "getUuid"
          ],
          [
            "mergedData",
            "setPriorGender"
          ],
          [
            "preferred",
            "getGender"
          ],
          [
            "preferred",
            "getGender"
          ],
          [
            "preferred",
            "getGender"
          ],
          [
            "preferred",
            "setGender"
          ],
          [
            "notPreferred",
            "getGender"
          ],
          [
            "notPreferred",
            "getNames"
          ],
          [
            "preferred",
            "getNames"
          ],
          [
            "currentName",
            "equalsContent"
          ],
          [
            "preferred",
            "addName"
          ],
          [
            "mergedData",
            "addCreatedName"
          ],
          [
            "tmpName",
            "getUuid"
          ],
          [
            "log",
            "debug"
          ],
          [
            "newName",
            "getGivenName"
          ],
          [
            "preferred",
            "getPatientId"
          ],
          [
            "PersonName",
            "newInstance"
          ],
          [
            "tmpName",
            "setPersonNameId"
          ],
          [
            "tmpName",
            "setVoided"
          ],
          [
            "tmpName",
            "setVoidedBy"
          ],
          [
            "tmpName",
            "setVoidReason"
          ],
          [
            "tmpName",
            "setPreferred"
          ],
          [
            "tmpName",
            "setUuid"
          ],
          [
            "UUID",
            "randomUUID"
          ],
          [
            "notPreferred",
            "getAddresses"
          ],
          [
            "preferred",
            "getAddresses"
          ],
          [
            "currentAddress",
            "equalsContent"
          ],
          [
            "newAddress",
            "clone"
          ],
          [
            "tmpAddress",
            "setPersonAddressId"
          ],
          [
            "tmpAddress",
            "setVoided"
          ],
          [
            "tmpAddress",
            "setVoidedBy"
          ],
          [
            "tmpAddress",
            "setVoidReason"
          ],
          [
            "tmpAddress",
            "setPreferred"
          ],
          [
            "tmpAddress",
            "setUuid"
          ],
          [
            "UUID",
            "randomUUID"
          ],
          [
            "preferred",
            "addAddress"
          ],
          [
            "mergedData",
            "addCreatedAddress"
          ],
          [
            "tmpAddress",
            "getUuid"
          ],
          [
            "log",
            "debug"
          ],
          [
            "newAddress",
            "getPersonAddressId"
          ],
          [
            "preferred",
            "getPatientId"
          ],
          [
            "notPreferred",
            "getAttributes"
          ],
          [
            "attr",
            "getVoided"
          ],
          [
            "attr",
            "copy"
          ],
          [
            "tmpAttr",
            "setPerson"
          ],
          [
            "tmpAttr",
            "setUuid"
          ],
          [
            "UUID",
            "randomUUID"
          ],
          [
            "preferred",
            "addAttribute"
          ],
          [
            "mergedData",
            "addCreatedAttribute"
          ],
          [
            "tmpAttr",
            "getUuid"
          ],
          [
            "mergedData",
            "setPriorGender"
          ],
          [
            "preferred",
            "getGender"
          ],
          [
            "preferred",
            "getGender"
          ],
          [
            "preferred",
            "getGender"
          ],
          [
            "preferred",
            "setGender"
          ],
          [
            "notPreferred",
            "getGender"
          ],
          [
            "mergedData",
            "setPriorDateOfBirth"
          ],
          [
            "preferred",
            "getBirthdate"
          ],
          [
            "mergedData",
            "setPriorDateOfBirthEstimated"
          ],
          [
            "preferred",
            "getBirthdateEstimated"
          ],
          [
            "preferred",
            "getBirthdate"
          ],
          [
            "preferred",
            "getBirthdateEstimated"
          ],
          [
            "notPreferred",
            "getBirthdateEstimated"
          ],
          [
            "preferred",
            "setBirthdate"
          ],
          [
            "notPreferred",
            "getBirthdate"
          ],
          [
            "preferred",
            "setBirthdateEstimated"
          ],
          [
            "notPreferred",
            "getBirthdateEstimated"
          ],
          [
            "mergedData",
            "setPriorDateOfDeathEstimated"
          ],
          [
            "preferred",
            "getDeathdateEstimated"
          ],
          [
            "preferred",
            "getDeathdateEstimated"
          ],
          [
            "preferred",
            "setDeathdateEstimated"
          ],
          [
            "notPreferred",
            "getDeathdateEstimated"
          ],
          [
            "mergedData",
            "setPriorDateOfDeath"
          ],
          [
            "preferred",
            "getDeathDate"
          ],
          [
            "preferred",
            "getDeathDate"
          ],
          [
            "preferred",
            "setDeathDate"
          ],
          [
            "notPreferred",
            "getDeathDate"
          ],
          [
            "preferred",
            "getCauseOfDeath"
          ],
          [
            "mergedData",
            "setPriorCauseOfDeath"
          ],
          [
            "preferred",
            "getCauseOfDeath"
          ],
          [
            "preferred",
            "getCauseOfDeath"
          ],
          [
            "preferred",
            "setCauseOfDeath"
          ],
          [
            "notPreferred",
            "getCauseOfDeath"
          ],
          [
            "Context",
            "getPatientService"
          ],
          [
            "preferred",
            "getPatientId"
          ],
          [
            "Context",
            "getPersonService"
          ],
          [
            "preferred",
            "getPatientId"
          ],
          [
            "personMergeLog",
            "setWinner"
          ],
          [
            "personMergeLog",
            "setLoser"
          ],
          [
            "personMergeLog",
            "setPersonMergeLogData"
          ],
          [
            "Context",
            "getPersonService"
          ],
          [
            "Context",
            "getUserService"
          ],
          [
            "userService",
            "getUsersByPerson"
          ],
          [
            "user",
            "setPerson"
          ],
          [
            "userService",
            "saveUser"
          ],
          [
            "mergedData",
            "addMovedUser"
          ],
          [
            "persisted",
            "getUuid"
          ],
          [
            "log",
            "debug"
          ],
          [
            "Context",
            "getAdministrationService"
          ],
          [
            "Context",
            "getConceptService"
          ],
          [
            "Context",
            "getObsService"
          ],
          [
            "obssExit",
            "size"
          ],
          [
            "log",
            "error"
          ],
          [
            "obssExit",
            "size"
          ],
          [
            "obssExit",
            "size"
          ],
          [
            "log",
            "debug"
          ],
          [
            "obssExit",
            "iterator"
          ],
          [
            "log",
            "debug"
          ],
          [
            "obsExit",
            "setPerson"
          ],
          [
            "obsExit",
            "setConcept"
          ],
          [
            "Context",
            "getLocationService"
          ],
          [
            "obsExit",
            "setLocation"
          ],
          [
            "log",
            "error"
          ],
          [
            "obsExit",
            "setValueCoded"
          ],
          [
            "obsExit",
            "setValueCodedName"
          ],
          [
            "cause",
            "getName"
          ],
          [
            "obsExit",
            "setObsDatetime"
          ],
          [
            "Context",
            "getObsService"
          ],
          [
            "log",
            "debug"
          ],
          [
            "patient",
            "setDead"
          ],
          [
            "patient",
            "setDeathDate"
          ],
          [
            "patient",
            "setCauseOfDeath"
          ],
          [
            "this",
            "savePatient"
          ],
          [
            "Context",
            "getAdministrationService"
          ],
          [
            "Context",
            "getConceptService"
          ],
          [
            "log",
            "debug"
          ],
          [
            "patient",
            "getDead"
          ],
          [
            "patient",
            "setDead"
          ],
          [
            "patient",
            "setDeathDate"
          ],
          [
            "patient",
            "setCauseOfDeath"
          ],
          [
            "log",
            "debug"
          ],
          [
            "Context",
            "getAdministrationService"
          ],
          [
            "Context",
            "getConceptService"
          ],
          [
            "Context",
            "getObsService"
          ],
          [
            "obssDeath",
            "size"
          ],
          [
            "log",
            "error"
          ],
          [
            "obssDeath",
            "size"
          ],
          [
            "obssDeath",
            "size"
          ],
          [
            "log",
            "debug"
          ],
          [
            "obssDeath",
            "iterator"
          ],
          [
            "log",
            "debug"
          ],
          [
            "obsDeath",
            "setPerson"
          ],
          [
            "obsDeath",
            "setConcept"
          ],
          [
            "Context",
            "getLocationService"
          ],
          [
            "obsDeath",
            "setLocation"
          ],
          [
            "log",
            "error"
          ],
          [
            "patient",
            "getCauseOfDeath"
          ],
          [
            "log",
            "debug"
          ],
          [
            "Context",
            "getAdministrationService"
          ],
          [
            "Context",
            "getConceptService"
          ],
          [
            "log",
            "debug"
          ],
          [
            "obsDeath",
            "setValueCoded"
          ],
          [
            "obsDeath",
            "setValueCodedName"
          ],
          [
            "currCause",
            "getName"
          ],
          [
            "patient",
            "getDeathDate"
          ],
          [
            "obsDeath",
            "setObsDatetime"
          ],
          [
            "Context",
            "getAdministrationService"
          ],
          [
            "Context",
            "getConceptService"
          ],
          [
            "conceptOther",
            "equals"
          ],
          [
            "log",
            "debug"
          ],
          [
            "obsDeath",
            "setValueText"
          ],
          [
            "log",
            "debug"
          ],
          [
            "obsDeath",
            "setValueText"
          ],
          [
            "log",
            "debug"
          ],
          [
            "obsDeath",
            "setValueText"
          ],
          [
            "Context",
            "getObsService"
          ],
          [
            "log",
            "debug"
          ],
          [
            "log",
            "debug"
          ],
          [
            "dao",
            "getPatientByUuid"
          ],
          [
            "dao",
            "getPatientIdentifierByUuid"
          ],
          [
            "dao",
            "getPatientIdentifierTypeByUuid"
          ],
          [
            "Context",
            "getAdministrationService"
          ],
          [
            "identifierValidators",
            "get"
          ],
          [
            "Class",
            "forName"
          ],
          [
            "log",
            "error"
          ],
          [
            "identifierValidators",
            "get"
          ],
          [
            "identifierValidators",
            "get"
          ],
          [
            "PatientServiceImpl",
            "setStaticIdentifierValidators"
          ],
          [
            "identifierValidators",
            "entrySet"
          ],
          [
            "entry",
            "getKey"
          ],
          [
            "entry",
            "getValue"
          ],
          [
            "identifierValidators",
            "values"
          ],
          [
            "StringUtils",
            "isBlank"
          ],
          [
            "Context",
            "loadClass"
          ],
          [
            "dao",
            "isIdentifierInUseByAnotherPatient"
          ],
          [
            "dao",
            "getPatientIdentifier"
          ],
          [
            "StringUtils",
            "isBlank"
          ],
          [
            "Context",
            "getPatientService"
          ],
          [
            "patientIdentifier",
            "getIdentifierType"
          ],
          [
            "patientIdentifier",
            "getPatient"
          ],
          [
            "patientIdentifier",
            "getIdentifierType"
          ],
          [
            "StringUtils",
            "isBlank"
          ],
          [
            "patientIdentifier",
            "getIdentifier"
          ],
          [
            "patientIdentifier",
            "getLocation"
          ],
          [
            "patientIdentifier",
            "getPatientIdentifierId"
          ],
          [
            "Context",
            "requirePrivilege"
          ],
          [
            "Context",
            "requirePrivilege"
          ],
          [
            "dao",
            "savePatientIdentifier"
          ],
          [
            "dao",
            "deletePatientIdentifier"
          ],
          [
            "dao",
            "getAllergies"
          ],
          [
            "allergyList",
            "isEmpty"
          ],
          [
            "allergies",
            "addAll"
          ],
          [
            "dao",
            "getAllergyStatus"
          ],
          [
            "NO_KNOWN_ALLERGIES",
            "equals"
          ],
          [
            "allergies",
            "confirmNoKnownAllergies"
          ],
          [
            "allergies",
            "contains"
          ],
          [
            "allergies",
            "getAllergy"
          ],
          [
            "originalAllergy",
            "getAllergyId"
          ],
          [
            "potentiallyEditedAllergy",
            "hasSameValues"
          ],
          [
            "allergies",
            "remove"
          ],
          [
            "newAllergy",
            "copy"
          ],
          [
            "allergies",
            "add"
          ],
          [
            "allergy",
            "getAllergyId"
          ],
          [
            "allergy",
            "getAllergen"
          ],
          [
            "StringUtils",
            "isNotBlank"
          ],
          [
            "allergy",
            "getAllergen"
          ],
          [
            "Context",
            "getConceptService"
          ],
          [
            "Allergen",
            "getOtherNonCodedConceptUuid"
          ],
          [
            "Allergen",
            "getOtherNonCodedConceptUuid"
          ],
          [
            "allergy",
            "getAllergen"
          ],
          [
            "dao",
            "saveAllergies"
          ],
          [
            "allergy",
            "setVoided"
          ],
          [
            "allergy",
            "setVoidedBy"
          ],
          [
            "Context",
            "getAuthenticatedUser"
          ],
          [
            "allergy",
            "setDateVoided"
          ],
          [
            "allergy",
            "setVoidReason"
          ],
          [
            "dao",
            "saveAllergy"
          ],
          [
            "dao",
            "getAllergy"
          ],
          [
            "dao",
            "getAllergyByUuid"
          ],
          [
            "dao",
            "saveAllergy"
          ],
          [
            "allergy",
            "setVoided"
          ],
          [
            "allergy",
            "setVoidedBy"
          ],
          [
            "Context",
            "getAuthenticatedUser"
          ],
          [
            "allergy",
            "setDateVoided"
          ],
          [
            "allergy",
            "setVoidReason"
          ],
          [
            "dao",
            "saveAllergy"
          ],
          [
            "StringUtils",
            "isBlank"
          ],
          [
            "OpenmrsUtil",
            "convertToInteger"
          ],
          [
            "dao",
            "getCountOfPatients"
          ],
          [
            "StringUtils",
            "isBlank"
          ],
          [
            "OpenmrsUtil",
            "convertToInteger"
          ],
          [
            "dao",
            "getCountOfPatients"
          ],
          [
            "StringUtils",
            "isBlank"
          ],
          [
            "dao",
            "getPatients"
          ],
          [
            "StringUtils",
            "isBlank"
          ],
          [
            "Collections",
            "emptyList"
          ],
          [
            "dao",
            "getPatients"
          ],
          [
            "dao",
            "getPatients"
          ],
          [
            "dao",
            "getPatients"
          ],
          [
            "Context",
            "getAdministrationService"
          ],
          [
            "dao",
            "getPatientIdentifierByProgram"
          ]
        ],
        "annotations": [
          "see",
          "see",
          "see",
          "Transactional",
          "see",
          "Override",
          "see",
          "Override",
          "see",
          "Override",
          "see",
          "Override",
          "Transactional",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "see",
          "Override",
          "see",
          "Override",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "see",
          "Override",
          "see",
          "Override",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "param",
          "param",
          "return",
          "param",
          "param",
          "throws",
          "see",
          "Override",
          "param",
          "param",
          "param",
          "see",
          "param",
          "param",
          "param",
          "throws",
          "param",
          "param",
          "param",
          "param",
          "param",
          "param",
          "param",
          "throws",
          "Override",
          "see",
          "Override",
          "see",
          "Override",
          "Transactional",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "param",
          "param",
          "see",
          "Override",
          "see",
          "Override",
          "SuppressWarnings",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "see",
          "Override",
          "see",
          "Override",
          "see",
          "Override",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "param",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "see",
          "Override",
          "see",
          "Override",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "see"
        ],
        "extends": "BaseOpenmrsService",
        "implements": [
          "PatientService"
        ],
        "lines_of_code": 1640,
        "comment_lines": 355,
        "blank_lines": 200
      }
    },
    "FormServiceImpl": {
      "file_path": "/Users/shashivelur/Projects/openmrs-core/api/src/main/java/org/openmrs/api/impl/FormServiceImpl.java",
      "class_name": "FormServiceImpl",
      "type": "implementation",
      "metrics": {
        "halstead": {
          "vocabulary": 456,
          "length": 5264,
          "volume": 46496.3330345632,
          "difficulty": 96.187648456057,
          "effort": 4472372.936424315,
          "time": 248465.16313468418,
          "bugs": 15.498777678187732
        },
        "cyclomatic_complexity": 71,
        "lcom": 0,
        "cbo": 24,
        "fan_in": 0,
        "fan_out": 28,
        "lines_of_code": 796,
        "effective_lines": 480,
        "comment_ratio": 0.27261306532663315,
        "method_count": 55,
        "field_count": 3,
        "import_count": 36
      },
      "elements": {
        "imports": [
          "java.util.Collection",
          "java.util.Collections",
          "java.util.Date",
          "java.util.HashMap",
          "java.util.HashSet",
          "java.util.Iterator",
          "java.util.List",
          "java.util.Map",
          "java.util.Set",
          "java.util.UUID",
          "org.hibernate.exception.ConstraintViolationException",
          "org.openmrs.Concept",
          "org.openmrs.ConceptComplex",
          "org.openmrs.EncounterType",
          "org.openmrs.Field",
          "org.openmrs.FieldAnswer",
          "org.openmrs.FieldType",
          "org.openmrs.Form",
          "org.openmrs.FormField",
          "org.openmrs.FormResource",
          "org.openmrs.aop.RequiredDataAdvice",
          "org.openmrs.api.APIException",
          "org.openmrs.api.FormService",
          "org.openmrs.api.FormsLockedException",
          "org.openmrs.api.InvalidFileTypeException",
          "org.openmrs.api.context.Context",
          "org.openmrs.api.db.FormDAO",
          "org.openmrs.api.handler.SaveHandler",
          "org.openmrs.customdatatype.CustomDatatypeUtil",
          "org.openmrs.obs.ComplexObsHandler",
          "org.openmrs.obs.SerializableComplexObsHandler",
          "org.openmrs.util.OpenmrsConstants",
          "org.openmrs.util.OpenmrsUtil",
          "org.openmrs.validator.FormValidator",
          "org.springframework.transaction.annotation.Transactional",
          "org.springframework.validation.BindException"
        ],
        "class_name": "FormServiceImpl",
        "methods": [
          "FormServiceImpl",
          "setFormDAO",
          "getForm",
          "duplicateForm",
          "retireForm",
          "unretireForm",
          "getAllFieldTypes",
          "getAllFieldTypes",
          "getFieldType",
          "getField",
          "getFormField",
          "getFormField",
          "getFieldByUuid",
          "getFieldAnswerByUuid",
          "getFieldTypeByUuid",
          "getFieldTypeByName",
          "getFormByUuid",
          "getFormFieldByUuid",
          "getAllFields",
          "getAllFields",
          "getAllFormFields",
          "getAllForms",
          "getAllForms",
          "getFields",
          "getForm",
          "getForm",
          "getForms",
          "getForms",
          "getFormCount",
          "getPublishedForms",
          "purgeField",
          "purgeField",
          "purgeForm",
          "purgeForm",
          "purgeFormField",
          "retireField",
          "saveField",
          "saveForm",
          "saveFormField",
          "unretireField",
          "getFields",
          "getFieldsByConcept",
          "getFormsContainingConcept",
          "purgeFieldType",
          "saveFieldType",
          "mergeDuplicateFields",
          "fieldsAreSimilar",
          "getFormResource",
          "getFormResourceByUuid",
          "getFormResource",
          "saveFormResource",
          "purgeFormResource",
          "getFormResourcesForForm",
          "duplicateFormResources",
          "checkIfFormsAreLocked"
        ],
        "fields": [
          "dao",
          "formValidator",
          "formValidator"
        ],
        "method_calls": [
          [
            "Context",
            "getFormService"
          ],
          [
            "dao",
            "getForm"
          ],
          [
            "form",
            "getFormId"
          ],
          [
            "form",
            "getFormFields"
          ],
          [
            "formField",
            "setUuid"
          ],
          [
            "formField",
            "setFormFieldId"
          ],
          [
            "form",
            "setFormFields"
          ],
          [
            "form",
            "getFormFields"
          ],
          [
            "form",
            "setUuid"
          ],
          [
            "form",
            "setFormId"
          ],
          [
            "form",
            "setCreator"
          ],
          [
            "form",
            "setDateCreated"
          ],
          [
            "form",
            "setChangedBy"
          ],
          [
            "form",
            "setDateChanged"
          ],
          [
            "Context",
            "clearSession"
          ],
          [
            "Context",
            "getFormService"
          ],
          [
            "dao",
            "duplicateForm"
          ],
          [
            "Context",
            "getFormService"
          ],
          [
            "RequiredDataAdvice",
            "recursivelyHandle"
          ],
          [
            "dao",
            "duplicateForm"
          ],
          [
            "form",
            "setRetired"
          ],
          [
            "form",
            "setRetireReason"
          ],
          [
            "Context",
            "getFormService"
          ],
          [
            "form",
            "setRetired"
          ],
          [
            "Context",
            "getFormService"
          ],
          [
            "Context",
            "getFormService"
          ],
          [
            "dao",
            "getAllFieldTypes"
          ],
          [
            "dao",
            "getFieldType"
          ],
          [
            "dao",
            "getField"
          ],
          [
            "dao",
            "getFormField"
          ],
          [
            "Collections",
            "emptyList"
          ],
          [
            "dao",
            "getFormField"
          ],
          [
            "dao",
            "getFieldByUuid"
          ],
          [
            "dao",
            "getFieldAnswerByUuid"
          ],
          [
            "dao",
            "getFieldTypeByUuid"
          ],
          [
            "dao",
            "getFieldTypeByName"
          ],
          [
            "dao",
            "getFormByUuid"
          ],
          [
            "dao",
            "getFormFieldByUuid"
          ],
          [
            "Context",
            "getFormService"
          ],
          [
            "dao",
            "getAllFields"
          ],
          [
            "dao",
            "getAllFormFields"
          ],
          [
            "Context",
            "getFormService"
          ],
          [
            "dao",
            "getAllForms"
          ],
          [
            "Collections",
            "emptyList"
          ],
          [
            "Collections",
            "emptyList"
          ],
          [
            "Collections",
            "emptyList"
          ],
          [
            "Collections",
            "emptyList"
          ],
          [
            "Collections",
            "emptyList"
          ],
          [
            "Collections",
            "emptyList"
          ],
          [
            "Collections",
            "emptyList"
          ],
          [
            "dao",
            "getFields"
          ],
          [
            "dao",
            "getFormsByName"
          ],
          [
            "forms",
            "isEmpty"
          ],
          [
            "forms",
            "get"
          ],
          [
            "dao",
            "getForm"
          ],
          [
            "Context",
            "getFormService"
          ],
          [
            "forms",
            "iterator"
          ],
          [
            "i",
            "hasNext"
          ],
          [
            "i",
            "next"
          ],
          [
            "namesAlreadySeen",
            "contains"
          ],
          [
            "form",
            "getName"
          ],
          [
            "i",
            "remove"
          ],
          [
            "namesAlreadySeen",
            "add"
          ],
          [
            "form",
            "getName"
          ],
          [
            "Collections",
            "emptyList"
          ],
          [
            "Collections",
            "emptyList"
          ],
          [
            "Collections",
            "emptyList"
          ],
          [
            "Collections",
            "emptyList"
          ],
          [
            "dao",
            "getForms"
          ],
          [
            "Collections",
            "emptyList"
          ],
          [
            "Collections",
            "emptyList"
          ],
          [
            "Collections",
            "emptyList"
          ],
          [
            "Collections",
            "emptyList"
          ],
          [
            "dao",
            "getFormCount"
          ],
          [
            "Context",
            "getFormService"
          ],
          [
            "Context",
            "getFormService"
          ],
          [
            "dao",
            "deleteField"
          ],
          [
            "Context",
            "getFormService"
          ],
          [
            "Context",
            "getFormService"
          ],
          [
            "Context",
            "getFormService"
          ],
          [
            "dao",
            "deleteForm"
          ],
          [
            "dao",
            "deleteFormField"
          ],
          [
            "field",
            "getRetired"
          ],
          [
            "field",
            "setRetired"
          ],
          [
            "Context",
            "getFormService"
          ],
          [
            "dao",
            "saveField"
          ],
          [
            "formValidator",
            "validate"
          ],
          [
            "errors",
            "hasErrors"
          ],
          [
            "form",
            "getFormFields"
          ],
          [
            "form",
            "getFormFields"
          ],
          [
            "ff",
            "getForm"
          ],
          [
            "ff",
            "setForm"
          ],
          [
            "ff",
            "getForm"
          ],
          [
            "dao",
            "saveForm"
          ],
          [
            "formField",
            "getField"
          ],
          [
            "field",
            "getCreator"
          ],
          [
            "field",
            "setCreator"
          ],
          [
            "Context",
            "getAuthenticatedUser"
          ],
          [
            "field",
            "getDateCreated"
          ],
          [
            "field",
            "setDateCreated"
          ],
          [
            "field",
            "getUuid"
          ],
          [
            "field",
            "setUuid"
          ],
          [
            "UUID",
            "randomUUID"
          ],
          [
            "dao",
            "saveFormField"
          ],
          [
            "tmpFormField",
            "getField"
          ],
          [
            "concept",
            "isComplex"
          ],
          [
            "Context",
            "getObsService"
          ],
          [
            "sHandler",
            "getFormFields"
          ],
          [
            "sHandler",
            "getFormFields"
          ],
          [
            "ff",
            "setParent"
          ],
          [
            "ff",
            "setForm"
          ],
          [
            "tmpFormField",
            "getForm"
          ],
          [
            "ff",
            "setCreator"
          ],
          [
            "tmpFormField",
            "getCreator"
          ],
          [
            "ff",
            "setDateCreated"
          ],
          [
            "tmpFormField",
            "getDateCreated"
          ],
          [
            "dao",
            "saveFormField"
          ],
          [
            "field",
            "getRetired"
          ],
          [
            "field",
            "setRetired"
          ],
          [
            "Context",
            "getFormService"
          ],
          [
            "dao",
            "getFields"
          ],
          [
            "Context",
            "getFormService"
          ],
          [
            "Collections",
            "singleton"
          ],
          [
            "concept",
            "getConceptId"
          ],
          [
            "Collections",
            "emptyList"
          ],
          [
            "dao",
            "getFormsContainingConcept"
          ],
          [
            "dao",
            "deleteFieldType"
          ],
          [
            "dao",
            "saveFieldType"
          ],
          [
            "dao",
            "getAllFields"
          ],
          [
            "fieldNameAsKeyAndFieldIdAsValueMap",
            "containsKey"
          ],
          [
            "field",
            "getName"
          ],
          [
            "dao",
            "getField"
          ],
          [
            "fieldNameAsKeyAndFieldIdAsValueMap",
            "get"
          ],
          [
            "field",
            "getName"
          ],
          [
            "dao",
            "getFormFieldsByField"
          ],
          [
            "formField",
            "setField"
          ],
          [
            "dao",
            "saveFormField"
          ],
          [
            "fieldsToDelete",
            "add"
          ],
          [
            "fieldNameAsKeyAndFieldIdAsValueMap",
            "put"
          ],
          [
            "field",
            "getName"
          ],
          [
            "field",
            "getId"
          ],
          [
            "fieldNameAsKeyAndFieldIdAsValueMap",
            "put"
          ],
          [
            "field",
            "getName"
          ],
          [
            "field",
            "getId"
          ],
          [
            "dao",
            "deleteField"
          ],
          [
            "fieldsToDelete",
            "size"
          ],
          [
            "OpenmrsUtil",
            "nullSafeEquals"
          ],
          [
            "field",
            "getName"
          ],
          [
            "fieldToBeReplaced",
            "getName"
          ],
          [
            "OpenmrsUtil",
            "nullSafeEquals"
          ],
          [
            "field",
            "getSelectMultiple"
          ],
          [
            "fieldToBeReplaced",
            "getSelectMultiple"
          ],
          [
            "OpenmrsUtil",
            "nullSafeEquals"
          ],
          [
            "field",
            "getFieldType"
          ],
          [
            "fieldToBeReplaced",
            "getFieldType"
          ],
          [
            "OpenmrsUtil",
            "nullSafeEquals"
          ],
          [
            "field",
            "getConcept"
          ],
          [
            "fieldToBeReplaced",
            "getConcept"
          ],
          [
            "OpenmrsUtil",
            "nullSafeEquals"
          ],
          [
            "field",
            "getTableName"
          ],
          [
            "fieldToBeReplaced",
            "getTableName"
          ],
          [
            "OpenmrsUtil",
            "nullSafeEquals"
          ],
          [
            "field",
            "getDefaultValue"
          ],
          [
            "fieldToBeReplaced",
            "getDefaultValue"
          ],
          [
            "field",
            "getRetired"
          ],
          [
            "field",
            "getRetired"
          ],
          [
            "dao",
            "getFormResource"
          ],
          [
            "dao",
            "getFormResourceByUuid"
          ],
          [
            "dao",
            "getFormResource"
          ],
          [
            "Context",
            "getFormService"
          ],
          [
            "formResource",
            "getForm"
          ],
          [
            "formResource",
            "getName"
          ],
          [
            "original",
            "setName"
          ],
          [
            "formResource",
            "getName"
          ],
          [
            "original",
            "setValue"
          ],
          [
            "formResource",
            "getValue"
          ],
          [
            "original",
            "setDatatypeClassname"
          ],
          [
            "formResource",
            "getDatatypeClassname"
          ],
          [
            "original",
            "setDatatypeConfig"
          ],
          [
            "formResource",
            "getDatatypeConfig"
          ],
          [
            "original",
            "setPreferredHandlerClassname"
          ],
          [
            "formResource",
            "getPreferredHandlerClassname"
          ],
          [
            "CustomDatatypeUtil",
            "saveIfDirty"
          ],
          [
            "ex",
            "getMessage"
          ],
          [
            "dao",
            "saveFormResource"
          ],
          [
            "dao",
            "deleteFormResource"
          ],
          [
            "dao",
            "getFormResourcesForForm"
          ],
          [
            "Context",
            "getFormService"
          ],
          [
            "newResource",
            "setForm"
          ],
          [
            "service",
            "saveFormResource"
          ],
          [
            "Context",
            "getAdministrationService"
          ],
          [
            "Boolean",
            "valueOf"
          ]
        ],
        "annotations": [
          "link",
          "see",
          "see",
          "Transactional",
          "param",
          "see",
          "Override",
          "Transactional",
          "param",
          "return",
          "throws",
          "see",
          "Override",
          "see",
          "Override",
          "see",
          "Override",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "see",
          "Override",
          "see",
          "Override",
          "see",
          "Override",
          "see",
          "Override",
          "see",
          "Override",
          "see",
          "Override",
          "see",
          "Override",
          "see",
          "Override",
          "see",
          "Override",
          "see",
          "Override",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "see",
          "Override",
          "see",
          "Override",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "see",
          "Override",
          "see",
          "Override",
          "Transactional",
          "param",
          "param",
          "param",
          "see",
          "see",
          "Override"
        ],
        "extends": "BaseOpenmrsService",
        "implements": [
          "FormService"
        ],
        "lines_of_code": 796,
        "comment_lines": 217,
        "blank_lines": 99
      }
    },
    "ProviderServiceImpl": {
      "file_path": "/Users/shashivelur/Projects/openmrs-core/api/src/main/java/org/openmrs/api/impl/ProviderServiceImpl.java",
      "class_name": "ProviderServiceImpl",
      "type": "implementation",
      "metrics": {
        "halstead": {
          "vocabulary": 196,
          "length": 1876,
          "volume": 14285.19566756013,
          "difficulty": 60.34883720930232,
          "effort": 862094.9478446171,
          "time": 47894.163769145394,
          "bugs": 4.76173188918671
        },
        "cyclomatic_complexity": 4,
        "lcom": 0,
        "cbo": 13,
        "fan_in": 0,
        "fan_out": 4,
        "lines_of_code": 335,
        "effective_lines": 179,
        "comment_ratio": 0.34626865671641793,
        "method_count": 32,
        "field_count": 1,
        "import_count": 16
      },
      "elements": {
        "imports": [
          "java.util.Collection",
          "java.util.List",
          "java.util.Map",
          "org.openmrs.Person",
          "org.openmrs.Provider",
          "org.openmrs.ProviderAttribute",
          "org.openmrs.ProviderAttributeType",
          "org.openmrs.ProviderRole",
          "org.openmrs.api.APIException",
          "org.openmrs.api.ProviderService",
          "org.openmrs.api.context.Context",
          "org.openmrs.api.db.ProviderDAO",
          "org.openmrs.customdatatype.CustomDatatypeUtil",
          "org.openmrs.util.OpenmrsConstants",
          "org.openmrs.util.OpenmrsUtil",
          "org.springframework.transaction.annotation.Transactional"
        ],
        "class_name": "ProviderServiceImpl",
        "methods": [
          "setProviderDAO",
          "getAllProviders",
          "getAllProviders",
          "retireProvider",
          "unretireProvider",
          "purgeProvider",
          "getProvider",
          "saveProvider",
          "getProviderByUuid",
          "getProvidersByPerson",
          "getProvidersByPerson",
          "getCountOfProviders",
          "getCountOfProviders",
          "getProviders",
          "getProviders",
          "getAllProviderAttributeTypes",
          "getAllProviderAttributeTypes",
          "getProviderAttributeType",
          "getProviderAttributeTypeByUuid",
          "getProviderAttributeTypeByName",
          "getProviderAttribute",
          "getProviderAttributeByUuid",
          "saveProviderAttributeType",
          "retireProviderAttributeType",
          "unretireProviderAttributeType",
          "purgeProviderAttributeType",
          "isProviderIdentifierUnique",
          "getProviderByIdentifier",
          "getUnknownProvider",
          "getProviderRole",
          "getProviderRoleByUuid",
          "getProvidersByRoles"
        ],
        "fields": [
          "dao"
        ],
        "method_calls": [
          [
            "Context",
            "getProviderService"
          ],
          [
            "dao",
            "getAllProviders"
          ],
          [
            "dao",
            "saveProvider"
          ],
          [
            "Context",
            "getProviderService"
          ],
          [
            "dao",
            "deleteProvider"
          ],
          [
            "dao",
            "getProvider"
          ],
          [
            "CustomDatatypeUtil",
            "saveAttributesIfNecessary"
          ],
          [
            "dao",
            "saveProvider"
          ],
          [
            "dao",
            "getProviderByUuid"
          ],
          [
            "dao",
            "getProvidersByPerson"
          ],
          [
            "Context",
            "getProviderService"
          ],
          [
            "Context",
            "getProviderService"
          ],
          [
            "OpenmrsUtil",
            "convertToInteger"
          ],
          [
            "dao",
            "getCountOfProviders"
          ],
          [
            "dao",
            "getProviders"
          ],
          [
            "Context",
            "getProviderService"
          ],
          [
            "dao",
            "getAllProviderAttributeTypes"
          ],
          [
            "dao",
            "getAllProviderAttributeTypes"
          ],
          [
            "dao",
            "getProviderAttributeType"
          ],
          [
            "dao",
            "getProviderAttributeTypeByUuid"
          ],
          [
            "dao",
            "getProviderAttributeTypeByName"
          ],
          [
            "dao",
            "getProviderAttribute"
          ],
          [
            "dao",
            "getProviderAttributeByUuid"
          ],
          [
            "dao",
            "saveProviderAttributeType"
          ],
          [
            "Context",
            "getProviderService"
          ],
          [
            "Context",
            "getProviderService"
          ],
          [
            "dao",
            "deleteProviderAttributeType"
          ],
          [
            "dao",
            "isProviderIdentifierUnique"
          ],
          [
            "dao",
            "getProviderByIdentifier"
          ],
          [
            "Context",
            "getAdministrationService"
          ],
          [
            "dao",
            "getProviderRole"
          ],
          [
            "dao",
            "getProviderRoleByUuid"
          ],
          [
            "dao",
            "getProvidersByRoles"
          ]
        ],
        "annotations": [
          "link",
          "since",
          "Transactional",
          "param",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "see",
          "Override",
          "see",
          "Override",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "see",
          "Override",
          "see",
          "Override",
          "see",
          "Override",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional"
        ],
        "extends": "BaseOpenmrsService",
        "implements": [
          "ProviderService"
        ],
        "lines_of_code": 335,
        "comment_lines": 116,
        "blank_lines": 40
      }
    },
    "OrderServiceImpl": {
      "file_path": "/Users/shashivelur/Projects/openmrs-core/api/src/main/java/org/openmrs/api/impl/OrderServiceImpl.java",
      "class_name": "OrderServiceImpl",
      "type": "implementation",
      "metrics": {
        "halstead": {
          "vocabulary": 634,
          "length": 8035,
          "volume": 74792.50410717014,
          "difficulty": 129.4227504244482,
          "effort": 9679851.592681797,
          "time": 537769.5329267666,
          "bugs": 24.930834702390047
        },
        "cyclomatic_complexity": 146,
        "lcom": 0,
        "cbo": 45,
        "fan_in": 0,
        "fan_out": 42,
        "lines_of_code": 1291,
        "effective_lines": 858,
        "comment_ratio": 0.22850503485670023,
        "method_count": 104,
        "field_count": 4,
        "import_count": 60
      },
      "elements": {
        "imports": [
          "org.apache.commons.lang3.time.DateUtils",
          "org.hibernate.proxy.HibernateProxy",
          "org.openmrs.CareSetting",
          "org.openmrs.Concept",
          "org.openmrs.ConceptClass",
          "org.openmrs.Encounter",
          "org.openmrs.DrugOrder",
          "org.openmrs.Order",
          "org.openmrs.OrderAttribute",
          "org.openmrs.OrderAttributeType",
          "org.openmrs.OrderFrequency",
          "org.openmrs.OrderGroup",
          "org.openmrs.OrderType",
          "org.openmrs.GlobalProperty",
          "org.openmrs.Patient",
          "org.openmrs.Provider",
          "org.openmrs.ReferralOrder",
          "org.openmrs.Order.FulfillerStatus",
          "org.openmrs.OrderGroupAttribute",
          "org.openmrs.OrderGroupAttributeType",
          "org.openmrs.TestOrder",
          "org.openmrs.Visit",
          "org.openmrs.api.APIException",
          "org.openmrs.api.AmbiguousOrderException",
          "org.openmrs.api.CannotDeleteObjectInUseException",
          "org.openmrs.api.CannotStopDiscontinuationOrderException",
          "org.openmrs.api.CannotStopInactiveOrderException",
          "org.openmrs.api.CannotUnvoidOrderException",
          "org.openmrs.api.CannotUpdateObjectInUseException",
          "org.openmrs.api.EditedOrderDoesNotMatchPreviousException",
          "org.openmrs.api.GlobalPropertyListener",
          "org.openmrs.api.MissingRequiredPropertyException",
          "org.openmrs.api.OrderContext",
          "org.openmrs.api.OrderEntryException",
          "org.openmrs.api.OrderNumberGenerator",
          "org.openmrs.api.OrderService",
          "org.openmrs.api.UnchangeableObjectException",
          "org.openmrs.api.context.Context",
          "org.openmrs.api.db.OrderDAO",
          "org.openmrs.customdatatype.CustomDatatypeUtil",
          "org.openmrs.order.OrderUtil",
          "org.openmrs.parameter.OrderSearchCriteria",
          "org.openmrs.util.OpenmrsConstants",
          "org.openmrs.util.OpenmrsUtil",
          "org.slf4j.Logger",
          "org.slf4j.LoggerFactory",
          "org.springframework.transaction.annotation.Propagation",
          "org.springframework.transaction.annotation.Transactional",
          "org.springframework.util.StringUtils",
          "java.lang.reflect.Field",
          "java.util.ArrayList",
          "java.util.Arrays",
          "java.util.Calendar",
          "java.util.Collections",
          "java.util.Date",
          "java.util.List",
          "java.util.Locale",
          "java.util.Set",
          "static org.openmrs.Order.Action.DISCONTINUE",
          "static org.openmrs.Order.Action.REVISE"
        ],
        "class_name": "OrderServiceImpl",
        "methods": [
          "OrderServiceImpl",
          "setOrderDAO",
          "saveOrder",
          "saveOrderGroup",
          "saveOrderGroup",
          "saveRetrospectiveOrder",
          "saveOrder",
          "failOnExistingOrder",
          "ensureDateActivatedIsSet",
          "ensureConceptIsSet",
          "ensureDrugOrderAutoExpirationDateIsSet",
          "ensureOrderTypeIsSet",
          "ensureCareSettingIsSet",
          "failOnOrderTypeMismatch",
          "areDrugOrdersOfSameOrderableAndOverlappingSchedule",
          "isDrugOrder",
          "aMomentBefore",
          "saveOrderInternal",
          "setProperty",
          "getOrderNumberGenerator",
          "discontinueExistingOrdersIfNecessary",
          "getActualType",
          "purgeOrder",
          "purgeOrder",
          "voidOrder",
          "unvoidOrder",
          "updateOrderFulfillerStatus",
          "updateOrderFulfillerStatus",
          "getOrder",
          "getOrders",
          "getOrders",
          "getAllOrdersByPatient",
          "getOrders",
          "getOrderByUuid",
          "getDiscontinuationOrder",
          "getRevisionOrder",
          "getNewOrderNumber",
          "getOrderByOrderNumber",
          "getOrderHistoryByConcept",
          "getNextOrderNumberSeedSequenceValue",
          "getOrderHistoryByOrderNumber",
          "getActiveOrders",
          "getActiveOrders",
          "getCareSetting",
          "getCareSettingByUuid",
          "getCareSettingByName",
          "getCareSettings",
          "getOrderTypeByName",
          "getOrderFrequency",
          "getOrderFrequencyByUuid",
          "getOrderFrequencies",
          "getOrderFrequencies",
          "discontinueOrder",
          "discontinueOrder",
          "isDiscontinueOrReviseOrder",
          "stopOrder",
          "saveOrderFrequency",
          "retireOrderFrequency",
          "unretireOrderFrequency",
          "purgeOrderFrequency",
          "getOrderFrequencyByConcept",
          "supportsPropertyName",
          "globalPropertyChanged",
          "globalPropertyDeleted",
          "setOrderNumberGenerator",
          "getOrderType",
          "getOrderTypeByUuid",
          "getOrderTypes",
          "saveOrderType",
          "purgeOrderType",
          "retireOrderType",
          "unretireOrderType",
          "getSubtypes",
          "getOrderTypeByConceptClass",
          "getOrderTypeByConcept",
          "getDrugRoutes",
          "getDrugDosingUnits",
          "getDrugDispensingUnits",
          "getDurationUnits",
          "getTestSpecimenSources",
          "getNonCodedDrugConcept",
          "getOrderGroupByUuid",
          "getOrderGroup",
          "getSetMembersOfConceptSetFromGP",
          "getOrderGroupsByPatient",
          "getOrderGroupsByEncounter",
          "getAllOrderGroupAttributeTypes",
          "getOrderGroupAttributeType",
          "getOrderGroupAttributeTypeByUuid",
          "saveOrderGroupAttributeType",
          "retireOrderGroupAttributeType",
          "unretireOrderGroupAttributeType",
          "purgeOrderGroupAttributeType",
          "getOrderGroupAttributeTypeByName",
          "getOrderGroupAttributeByUuid",
          "getAllOrderAttributeTypes",
          "getOrderAttributeTypeById",
          "getOrderAttributeTypeByUuid",
          "saveOrderAttributeType",
          "retireOrderAttributeType",
          "unretireOrderAttributeType",
          "purgeOrderAttributeType",
          "getOrderAttributeTypeByName",
          "getOrderAttributeByUuid"
        ],
        "fields": [
          "log",
          "ORDER_NUMBER_PREFIX",
          "dao",
          "orderNumberGenerator"
        ],
        "method_calls": [
          [
            "LoggerFactory",
            "getLogger"
          ],
          [
            "orderGroup",
            "getId"
          ],
          [
            "orderGroup",
            "setPatient"
          ],
          [
            "orderGroup",
            "getEncounter"
          ],
          [
            "CustomDatatypeUtil",
            "saveAttributesIfNecessary"
          ],
          [
            "dao",
            "saveOrderGroup"
          ],
          [
            "orderGroup",
            "getOrders"
          ],
          [
            "order",
            "getId"
          ],
          [
            "order",
            "setEncounter"
          ],
          [
            "orderGroup",
            "getEncounter"
          ],
          [
            "Context",
            "getOrderService"
          ],
          [
            "orderGroup",
            "getNestedOrderGroups"
          ],
          [
            "Context",
            "getOrderService"
          ],
          [
            "order",
            "getDateActivated"
          ],
          [
            "dateActivated",
            "after"
          ],
          [
            "DateUtils",
            "isSameDay"
          ],
          [
            "order",
            "getPreviousOrder"
          ],
          [
            "order",
            "getAction"
          ],
          [
            "order",
            "getDateActivated"
          ],
          [
            "order",
            "getAction"
          ],
          [
            "order",
            "hasSameOrderableAs"
          ],
          [
            "order",
            "getOrderType"
          ],
          [
            "previousOrder",
            "getOrderType"
          ],
          [
            "order",
            "getCareSetting"
          ],
          [
            "previousOrder",
            "getCareSetting"
          ],
          [
            "order",
            "getAction"
          ],
          [
            "order",
            "getDateActivated"
          ],
          [
            "order",
            "getPatient"
          ],
          [
            "order",
            "getCareSetting"
          ],
          [
            "Collections",
            "emptyList"
          ],
          [
            "orderContext",
            "getAttribute"
          ],
          [
            "Arrays",
            "asList"
          ],
          [
            "orderContext",
            "getAttribute"
          ],
          [
            "parallelOrders",
            "contains"
          ],
          [
            "activeOrder",
            "getUuid"
          ],
          [
            "order",
            "getOrderId"
          ],
          [
            "order",
            "getDateActivated"
          ],
          [
            "order",
            "setDateActivated"
          ],
          [
            "order",
            "getConcept"
          ],
          [
            "drugOrder",
            "getDrug"
          ],
          [
            "drugOrder",
            "getDrug"
          ],
          [
            "drugOrder",
            "setConcept"
          ],
          [
            "drugOrder",
            "isNonCodedDrug"
          ],
          [
            "drugOrder",
            "setConcept"
          ],
          [
            "order",
            "getOrderType"
          ],
          [
            "orderContext",
            "getOrderType"
          ],
          [
            "order",
            "getConcept"
          ],
          [
            "Context",
            "getOrderService"
          ],
          [
            "Context",
            "getOrderService"
          ],
          [
            "Context",
            "getOrderService"
          ],
          [
            "order",
            "getPreviousOrder"
          ],
          [
            "orderType",
            "equals"
          ],
          [
            "previousOrder",
            "getOrderType"
          ],
          [
            "order",
            "setOrderType"
          ],
          [
            "order",
            "getCareSetting"
          ],
          [
            "orderContext",
            "getCareSetting"
          ],
          [
            "order",
            "getPreviousOrder"
          ],
          [
            "careSetting",
            "equals"
          ],
          [
            "previousOrder",
            "getCareSetting"
          ],
          [
            "order",
            "setCareSetting"
          ],
          [
            "order",
            "getOrderType"
          ],
          [
            "order",
            "getClass"
          ],
          [
            "order",
            "getOrderType"
          ],
          [
            "order",
            "getClass"
          ],
          [
            "firstOrder",
            "hasSameOrderableAs"
          ],
          [
            "OpenmrsUtil",
            "nullSafeEquals"
          ],
          [
            "firstOrder",
            "getPreviousOrder"
          ],
          [
            "OrderUtil",
            "checkScheduleOverlap"
          ],
          [
            "firstOrder",
            "getOrderType"
          ],
          [
            "Context",
            "getOrderService"
          ],
          [
            "class",
            "isAssignableFrom"
          ],
          [
            "DateUtils",
            "addSeconds"
          ],
          [
            "order",
            "getOrderId"
          ],
          [
            "order",
            "getAction"
          ],
          [
            "order",
            "setAutoExpireDate"
          ],
          [
            "order",
            "getDateActivated"
          ],
          [
            "order",
            "getAutoExpireDate"
          ],
          [
            "Calendar",
            "getInstance"
          ],
          [
            "cal",
            "setTime"
          ],
          [
            "order",
            "getAutoExpireDate"
          ],
          [
            "cal",
            "get"
          ],
          [
            "cal",
            "get"
          ],
          [
            "cal",
            "get"
          ],
          [
            "cal",
            "get"
          ],
          [
            "cal",
            "set"
          ],
          [
            "cal",
            "set"
          ],
          [
            "cal",
            "set"
          ],
          [
            "cal",
            "set"
          ],
          [
            "order",
            "setAutoExpireDate"
          ],
          [
            "cal",
            "getTime"
          ],
          [
            "dao",
            "saveOrder"
          ],
          [
            "class",
            "getDeclaredField"
          ],
          [
            "field",
            "setAccessible"
          ],
          [
            "field",
            "set"
          ],
          [
            "field",
            "setAccessible"
          ],
          [
            "Context",
            "getAdministrationService"
          ],
          [
            "StringUtils",
            "hasText"
          ],
          [
            "Context",
            "getRegisteredComponent"
          ],
          [
            "log",
            "info"
          ],
          [
            "log",
            "info"
          ],
          [
            "order",
            "getAction"
          ],
          [
            "order",
            "getPreviousOrder"
          ],
          [
            "order",
            "getDateActivated"
          ],
          [
            "order",
            "getDateActivated"
          ],
          [
            "order",
            "getPatient"
          ],
          [
            "order",
            "getOrderType"
          ],
          [
            "order",
            "getCareSetting"
          ],
          [
            "order",
            "hasSameOrderableAs"
          ],
          [
            "activeOrder",
            "getConcept"
          ],
          [
            "order",
            "getConcept"
          ],
          [
            "order",
            "setPreviousOrder"
          ],
          [
            "order",
            "getDateActivated"
          ],
          [
            "persistentObject",
            "getClass"
          ],
          [
            "dao",
            "deleteObsThatReference"
          ],
          [
            "dao",
            "deleteOrder"
          ],
          [
            "StringUtils",
            "hasLength"
          ],
          [
            "order",
            "getPreviousOrder"
          ],
          [
            "order",
            "getPreviousOrder"
          ],
          [
            "previousOrder",
            "isActive"
          ],
          [
            "order",
            "getAction"
          ],
          [
            "order",
            "getDateActivated"
          ],
          [
            "order",
            "setFulfillerStatus"
          ],
          [
            "order",
            "setFulfillerComment"
          ],
          [
            "order",
            "setAccessionNumber"
          ],
          [
            "dao",
            "getOrder"
          ],
          [
            "this",
            "getOrders"
          ],
          [
            "orderTypes",
            "add"
          ],
          [
            "orderTypes",
            "addAll"
          ],
          [
            "dao",
            "getOrders"
          ],
          [
            "dao",
            "getOrders"
          ],
          [
            "dao",
            "getOrders"
          ],
          [
            "dao",
            "getOrderByUuid"
          ],
          [
            "dao",
            "getDiscontinuationOrder"
          ],
          [
            "dao",
            "getRevisionOrder"
          ],
          [
            "Context",
            "getOrderService"
          ],
          [
            "dao",
            "getOrderByOrderNumber"
          ],
          [
            "concepts",
            "add"
          ],
          [
            "patients",
            "add"
          ],
          [
            "dao",
            "getOrders"
          ],
          [
            "dao",
            "getNextOrderNumberSeedSequenceValue"
          ],
          [
            "dao",
            "getOrderByOrderNumber"
          ],
          [
            "orders",
            "add"
          ],
          [
            "order",
            "getPreviousOrder"
          ],
          [
            "this",
            "getActiveOrders"
          ],
          [
            "orderTypes",
            "add"
          ],
          [
            "orderTypes",
            "addAll"
          ],
          [
            "dao",
            "getActiveOrders"
          ],
          [
            "dao",
            "getCareSetting"
          ],
          [
            "dao",
            "getCareSettingByUuid"
          ],
          [
            "dao",
            "getCareSettingByName"
          ],
          [
            "dao",
            "getCareSettings"
          ],
          [
            "dao",
            "getOrderTypeByName"
          ],
          [
            "dao",
            "getOrderFrequency"
          ],
          [
            "dao",
            "getOrderFrequencyByUuid"
          ],
          [
            "dao",
            "getOrderFrequencies"
          ],
          [
            "dao",
            "getOrderFrequencies"
          ],
          [
            "orderToDiscontinue",
            "cloneForDiscontinuing"
          ],
          [
            "newOrder",
            "setOrderReason"
          ],
          [
            "newOrder",
            "setOrderer"
          ],
          [
            "newOrder",
            "setEncounter"
          ],
          [
            "newOrder",
            "setDateActivated"
          ],
          [
            "orderToDiscontinue",
            "cloneForDiscontinuing"
          ],
          [
            "newOrder",
            "setOrderReasonNonCoded"
          ],
          [
            "newOrder",
            "setOrderer"
          ],
          [
            "newOrder",
            "setEncounter"
          ],
          [
            "newOrder",
            "setDateActivated"
          ],
          [
            "order",
            "getAction"
          ],
          [
            "order",
            "getAction"
          ],
          [
            "discontinueDate",
            "after"
          ],
          [
            "orderToStop",
            "getAction"
          ],
          [
            "orderToStop",
            "getDateStopped"
          ],
          [
            "orderToStop",
            "isActive"
          ],
          [
            "orderToStop",
            "isActive"
          ],
          [
            "dao",
            "saveOrderFrequency"
          ],
          [
            "dao",
            "saveOrderFrequency"
          ],
          [
            "Context",
            "getOrderService"
          ],
          [
            "dao",
            "isOrderFrequencyInUse"
          ],
          [
            "dao",
            "purgeOrderFrequency"
          ],
          [
            "dao",
            "getOrderFrequencyByConcept"
          ],
          [
            "GP_ORDER_NUMBER_GENERATOR_BEAN_ID",
            "equals"
          ],
          [
            "dao",
            "getOrderType"
          ],
          [
            "dao",
            "getOrderTypeByUuid"
          ],
          [
            "dao",
            "getOrderTypes"
          ],
          [
            "dao",
            "saveOrderType"
          ],
          [
            "dao",
            "isOrderTypeInUse"
          ],
          [
            "dao",
            "purgeOrderType"
          ],
          [
            "dao",
            "getOrderSubtypes"
          ],
          [
            "immediateAncestors",
            "isEmpty"
          ],
          [
            "allSubtypes",
            "add"
          ],
          [
            "ancestorsAtNextLevel",
            "addAll"
          ],
          [
            "dao",
            "getOrderSubtypes"
          ],
          [
            "dao",
            "getOrderTypeByConceptClass"
          ],
          [
            "Context",
            "getOrderService"
          ],
          [
            "concept",
            "getConceptClass"
          ],
          [
            "dispensingUnits",
            "contains"
          ],
          [
            "dispensingUnits",
            "add"
          ],
          [
            "Context",
            "getAdministrationService"
          ],
          [
            "StringUtils",
            "hasText"
          ],
          [
            "Context",
            "getConceptService"
          ],
          [
            "dao",
            "getOrderGroupByUuid"
          ],
          [
            "dao",
            "getOrderGroupById"
          ],
          [
            "Context",
            "getAdministrationService"
          ],
          [
            "Context",
            "getConceptService"
          ],
          [
            "concept",
            "getSet"
          ],
          [
            "concept",
            "getSetMembers"
          ],
          [
            "Collections",
            "emptyList"
          ],
          [
            "dao",
            "getOrderGroupsByPatient"
          ],
          [
            "dao",
            "getOrderGroupsByEncounter"
          ],
          [
            "dao",
            "getAllOrderGroupAttributeTypes"
          ],
          [
            "dao",
            "getOrderGroupAttributeType"
          ],
          [
            "dao",
            "getOrderGroupAttributeTypeByUuid"
          ],
          [
            "dao",
            "saveOrderGroupAttributeType"
          ],
          [
            "Context",
            "getOrderService"
          ],
          [
            "Context",
            "getOrderService"
          ],
          [
            "dao",
            "deleteOrderGroupAttributeType"
          ],
          [
            "dao",
            "getOrderGroupAttributeTypeByName"
          ],
          [
            "dao",
            "getOrderGroupAttributeByUuid"
          ],
          [
            "dao",
            "getAllOrderAttributeTypes"
          ],
          [
            "dao",
            "getOrderAttributeTypeById"
          ],
          [
            "dao",
            "getOrderAttributeTypeByUuid"
          ],
          [
            "dao",
            "saveOrderAttributeType"
          ],
          [
            "Context",
            "getOrderService"
          ],
          [
            "Context",
            "getOrderService"
          ],
          [
            "dao",
            "deleteOrderAttributeType"
          ],
          [
            "dao",
            "getOrderAttributeTypeByName"
          ],
          [
            "dao",
            "getOrderAttributeByUuid"
          ]
        ],
        "annotations": [
          "see",
          "Transactional",
          "see",
          "Override",
          "see",
          "Override",
          "see",
          "Override",
          "see",
          "Override",
          "see",
          "Override",
          "param",
          "return",
          "return",
          "param",
          "param",
          "param",
          "return",
          "see",
          "Override",
          "see",
          "Override",
          "see",
          "Override",
          "see",
          "Override",
          "Override",
          "Override",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "see",
          "Override",
          "see",
          "Override",
          "Override",
          "see",
          "Override",
          "Transactional",
          "see",
          "Transactional",
          "Override",
          "see",
          "Override",
          "see",
          "param",
          "Override",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "see",
          "Override",
          "see",
          "Override",
          "see",
          "Override",
          "see",
          "Override",
          "see",
          "Override",
          "see",
          "Override",
          "see",
          "Override",
          "see",
          "Override",
          "see",
          "Override",
          "see",
          "Override",
          "param",
          "param",
          "see",
          "Override",
          "see",
          "Override",
          "see",
          "Override",
          "see",
          "Override",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "see",
          "Override",
          "see",
          "Override",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "see",
          "Override",
          "see",
          "Override",
          "see",
          "Override",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "Override",
          "Transactional",
          "Override",
          "Transactional",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Override",
          "Override",
          "Transactional",
          "Override",
          "Transactional",
          "Override",
          "Override",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "see",
          "Override",
          "see",
          "Override",
          "see",
          "Override",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "see",
          "Override",
          "see",
          "Override",
          "see",
          "Override",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional"
        ],
        "extends": "BaseOpenmrsService",
        "implements": [
          "OrderService",
          "OrderNumberGenerator",
          "GlobalPropertyListener"
        ],
        "lines_of_code": 1291,
        "comment_lines": 295,
        "blank_lines": 138
      }
    },
    "LocationServiceImpl": {
      "file_path": "/Users/shashivelur/Projects/openmrs-core/api/src/main/java/org/openmrs/api/impl/LocationServiceImpl.java",
      "class_name": "LocationServiceImpl",
      "type": "implementation",
      "metrics": {
        "halstead": {
          "vocabulary": 272,
          "length": 3013,
          "volume": 24367.52554068727,
          "difficulty": 99.53389830508473,
          "effort": 2425394.809113322,
          "time": 134744.15606185122,
          "bugs": 8.122508513562424
        },
        "cyclomatic_complexity": 32,
        "lcom": 0,
        "cbo": 13,
        "fan_in": 0,
        "fan_out": 12,
        "lines_of_code": 512,
        "effective_lines": 297,
        "comment_ratio": 0.287109375,
        "method_count": 42,
        "field_count": 1,
        "import_count": 19
      },
      "elements": {
        "imports": [
          "java.util.ArrayList",
          "java.util.Date",
          "java.util.List",
          "java.util.Map",
          "org.apache.commons.collections.CollectionUtils",
          "org.openmrs.Address",
          "org.openmrs.Location",
          "org.openmrs.LocationAttribute",
          "org.openmrs.LocationAttributeType",
          "org.openmrs.LocationTag",
          "org.openmrs.api.APIException",
          "org.openmrs.api.LocationService",
          "org.openmrs.api.context.Context",
          "org.openmrs.api.db.LocationDAO",
          "org.openmrs.customdatatype.CustomDatatypeUtil",
          "org.openmrs.util.OpenmrsConstants",
          "org.openmrs.util.OpenmrsUtil",
          "org.springframework.transaction.annotation.Transactional",
          "org.springframework.util.StringUtils"
        ],
        "class_name": "LocationServiceImpl",
        "methods": [
          "setLocationDAO",
          "saveLocation",
          "getLocation",
          "getLocation",
          "getDefaultLocation",
          "getDefaultLocation",
          "getDefaultLocationFromSting",
          "getLocationByUuid",
          "getLocationTagByUuid",
          "getAllLocations",
          "getAllLocations",
          "getLocations",
          "getLocationsByTag",
          "getLocationsHavingAllTags",
          "getLocationsHavingAnyTag",
          "retireLocation",
          "unretireLocation",
          "purgeLocation",
          "saveLocationTag",
          "getLocationTag",
          "getLocationTagByName",
          "getAllLocationTags",
          "getAllLocationTags",
          "getLocationTags",
          "retireLocationTag",
          "unretireLocationTag",
          "purgeLocationTag",
          "getCountOfLocations",
          "getLocations",
          "getRootLocations",
          "getPossibleAddressValues",
          "getAllLocationAttributeTypes",
          "getLocationAttributeType",
          "getLocationAttributeTypeByUuid",
          "saveLocationAttributeType",
          "retireLocationAttributeType",
          "unretireLocationAttributeType",
          "purgeLocationAttributeType",
          "getLocationAttributeByUuid",
          "getAddressTemplate",
          "saveAddressTemplate",
          "getLocationAttributeTypeByName"
        ],
        "fields": [
          "dao"
        ],
        "method_calls": [
          [
            "Context",
            "getLocationService"
          ],
          [
            "location",
            "getName"
          ],
          [
            "location",
            "getTags"
          ],
          [
            "location",
            "getTags"
          ],
          [
            "tag",
            "getLocationTagId"
          ],
          [
            "StringUtils",
            "hasLength"
          ],
          [
            "tag",
            "getName"
          ],
          [
            "Context",
            "getLocationService"
          ],
          [
            "tag",
            "getName"
          ],
          [
            "location",
            "removeTag"
          ],
          [
            "location",
            "addTag"
          ],
          [
            "CustomDatatypeUtil",
            "saveAttributesIfNecessary"
          ],
          [
            "dao",
            "saveLocation"
          ],
          [
            "dao",
            "getLocation"
          ],
          [
            "dao",
            "getLocation"
          ],
          [
            "Context",
            "getAdministrationService"
          ],
          [
            "StringUtils",
            "hasText"
          ],
          [
            "Context",
            "getLocationService"
          ],
          [
            "Context",
            "getLocationService"
          ],
          [
            "StringUtils",
            "hasText"
          ],
          [
            "defaultLocation",
            "equalsIgnoreCase"
          ],
          [
            "Context",
            "getLocationService"
          ],
          [
            "dao",
            "getLocationByUuid"
          ],
          [
            "dao",
            "getLocationTagByUuid"
          ],
          [
            "dao",
            "getAllLocations"
          ],
          [
            "dao",
            "getAllLocations"
          ],
          [
            "Context",
            "getLocationService"
          ],
          [
            "dao",
            "getAllLocations"
          ],
          [
            "l",
            "getTags"
          ],
          [
            "l",
            "getTags"
          ],
          [
            "locations",
            "add"
          ],
          [
            "CollectionUtils",
            "isEmpty"
          ],
          [
            "dao",
            "getLocationsHavingAllTags"
          ],
          [
            "dao",
            "getAllLocations"
          ],
          [
            "loc",
            "getTags"
          ],
          [
            "locations",
            "contains"
          ],
          [
            "locations",
            "add"
          ],
          [
            "location",
            "setRetired"
          ],
          [
            "location",
            "setRetireReason"
          ],
          [
            "Context",
            "getLocationService"
          ],
          [
            "location",
            "setRetired"
          ],
          [
            "Context",
            "getLocationService"
          ],
          [
            "dao",
            "deleteLocation"
          ],
          [
            "dao",
            "saveLocationTag"
          ],
          [
            "dao",
            "getLocationTag"
          ],
          [
            "dao",
            "getLocationTagByName"
          ],
          [
            "dao",
            "getAllLocationTags"
          ],
          [
            "dao",
            "getAllLocationTags"
          ],
          [
            "StringUtils",
            "isEmpty"
          ],
          [
            "Context",
            "getLocationService"
          ],
          [
            "dao",
            "getLocationTags"
          ],
          [
            "tag",
            "getRetired"
          ],
          [
            "tag",
            "setRetired"
          ],
          [
            "tag",
            "setRetireReason"
          ],
          [
            "tag",
            "setRetiredBy"
          ],
          [
            "Context",
            "getAuthenticatedUser"
          ],
          [
            "tag",
            "setDateRetired"
          ],
          [
            "Context",
            "getLocationService"
          ],
          [
            "tag",
            "setRetired"
          ],
          [
            "tag",
            "setRetireReason"
          ],
          [
            "tag",
            "setRetiredBy"
          ],
          [
            "tag",
            "setDateRetired"
          ],
          [
            "Context",
            "getLocationService"
          ],
          [
            "dao",
            "deleteLocationTag"
          ],
          [
            "OpenmrsUtil",
            "convertToInteger"
          ],
          [
            "dao",
            "getCountOfLocations"
          ],
          [
            "dao",
            "getLocations"
          ],
          [
            "dao",
            "getRootLocations"
          ],
          [
            "dao",
            "getAllLocationAttributeTypes"
          ],
          [
            "dao",
            "getLocationAttributeType"
          ],
          [
            "dao",
            "getLocationAttributeTypeByUuid"
          ],
          [
            "dao",
            "saveLocationAttributeType"
          ],
          [
            "dao",
            "saveLocationAttributeType"
          ],
          [
            "Context",
            "getLocationService"
          ],
          [
            "dao",
            "deleteLocationAttributeType"
          ],
          [
            "dao",
            "getLocationAttributeByUuid"
          ],
          [
            "Context",
            "getAdministrationService"
          ],
          [
            "StringUtils",
            "hasLength"
          ],
          [
            "Context",
            "getAdministrationService"
          ],
          [
            "dao",
            "getLocationAttributeTypeByName"
          ]
        ],
        "annotations": [
          "link",
          "see",
          "see",
          "see",
          "Transactional",
          "see",
          "Override",
          "see",
          "Override",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "see",
          "Override",
          "see",
          "Override",
          "see",
          "Override",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "see",
          "Override",
          "see",
          "Override",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "see",
          "Override",
          "see",
          "Override",
          "see",
          "Override",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "see",
          "Override",
          "Transactional"
        ],
        "extends": "BaseOpenmrsService",
        "implements": [
          "LocationService"
        ],
        "lines_of_code": 512,
        "comment_lines": 147,
        "blank_lines": 68
      }
    },
    "ObsServiceImpl": {
      "file_path": "/Users/shashivelur/Projects/openmrs-core/api/src/main/java/org/openmrs/api/impl/ObsServiceImpl.java",
      "class_name": "ObsServiceImpl",
      "type": "implementation",
      "metrics": {
        "halstead": {
          "vocabulary": 441,
          "length": 4850,
          "volume": 42605.47900095398,
          "difficulty": 101.38366336633663,
          "effort": 4319499.5405942425,
          "time": 239972.19669968015,
          "bugs": 14.201826333651326
        },
        "cyclomatic_complexity": 66,
        "lcom": 0,
        "cbo": 23,
        "fan_in": 0,
        "fan_out": 32,
        "lines_of_code": 677,
        "effective_lines": 414,
        "comment_ratio": 0.25997045790251105,
        "method_count": 42,
        "field_count": 2,
        "import_count": 28
      },
      "elements": {
        "imports": [
          "java.util.ArrayList",
          "java.util.Date",
          "java.util.LinkedHashMap",
          "java.util.List",
          "java.util.Map",
          "org.openmrs.Concept",
          "org.openmrs.ConceptName",
          "org.openmrs.Encounter",
          "org.openmrs.Location",
          "org.openmrs.Obs",
          "org.openmrs.Patient",
          "org.openmrs.Person",
          "org.openmrs.Visit",
          "org.openmrs.aop.RequiredDataAdvice",
          "org.openmrs.api.APIException",
          "org.openmrs.api.EncounterService",
          "org.openmrs.api.ObsService",
          "org.openmrs.api.PatientService",
          "org.openmrs.api.context.Context",
          "org.openmrs.api.db.ObsDAO",
          "org.openmrs.api.handler.SaveHandler",
          "org.openmrs.obs.ComplexData",
          "org.openmrs.obs.ComplexObsHandler",
          "org.openmrs.util.OpenmrsClassLoader",
          "org.openmrs.util.OpenmrsConstants.PERSON_TYPE",
          "org.openmrs.util.OpenmrsUtil",
          "org.openmrs.util.PrivilegeConstants",
          "org.springframework.transaction.annotation.Transactional"
        ],
        "class_name": "ObsServiceImpl",
        "methods": [
          "ObsServiceImpl",
          "setObsDAO",
          "onShutdown",
          "saveObs",
          "setPersonFromEncounter",
          "voidExistingObs",
          "saveExistingObs",
          "updateStatusIfNecessary",
          "unsetVoidedAndCreationProperties",
          "saveObsNotDirty",
          "saveNewOrVoidedObs",
          "evictObsAndChildren",
          "ensureRequirePrivilege",
          "saveObsGroup",
          "handleExistingObsWithComplexConcept",
          "getObs",
          "voidObs",
          "unvoidObs",
          "purgeObs",
          "purgeObs",
          "getObservations",
          "getObservations",
          "getObservations",
          "getObservationCount",
          "getObservationCount",
          "getObservationCount",
          "getObservations",
          "getObservationsByPerson",
          "getObservationsByPersonAndConcept",
          "getObsByUuid",
          "getRevisionObs",
          "getComplexObs",
          "purgeComplexData",
          "getHandler",
          "getHandler",
          "setHandlers",
          "setStaticHandlers",
          "getHandlers",
          "registerHandler",
          "registerHandler",
          "getObservationCount",
          "removeHandler"
        ],
        "fields": [
          "dao",
          "handlers"
        ],
        "method_calls": [
          [
            "obs",
            "getId"
          ],
          [
            "obs",
            "getObsId"
          ],
          [
            "obs",
            "getVoided"
          ],
          [
            "obs",
            "isDirty"
          ],
          [
            "obs",
            "getEncounter"
          ],
          [
            "obs",
            "setPerson"
          ],
          [
            "encounter",
            "getPatient"
          ],
          [
            "Context",
            "addProxyPrivilege"
          ],
          [
            "Context",
            "getObsService"
          ],
          [
            "obs",
            "getObsId"
          ],
          [
            "newObs",
            "hasPreviousVersion"
          ],
          [
            "newObs",
            "getPreviousVersion"
          ],
          [
            "newObs",
            "getPreviousVersion"
          ],
          [
            "handler",
            "purgeComplexData"
          ],
          [
            "newObs",
            "getPreviousVersion"
          ],
          [
            "Context",
            "getObsService"
          ],
          [
            "Context",
            "removeProxyPrivilege"
          ],
          [
            "Obs",
            "newInstance"
          ],
          [
            "dao",
            "getSavedStatus"
          ],
          [
            "RequiredDataAdvice",
            "recursivelyHandle"
          ],
          [
            "dao",
            "saveObs"
          ],
          [
            "FINAL",
            "equals"
          ],
          [
            "newObs",
            "setStatus"
          ],
          [
            "newObs",
            "setVoided"
          ],
          [
            "newObs",
            "setVoidReason"
          ],
          [
            "newObs",
            "setDateVoided"
          ],
          [
            "newObs",
            "setVoidedBy"
          ],
          [
            "newObs",
            "setCreator"
          ],
          [
            "newObs",
            "setDateCreated"
          ],
          [
            "newObs",
            "setPreviousVersion"
          ],
          [
            "obs",
            "isObsGrouping"
          ],
          [
            "Context",
            "getObsService"
          ],
          [
            "obs",
            "getGroupMembers"
          ],
          [
            "o",
            "getId"
          ],
          [
            "os",
            "saveObs"
          ],
          [
            "os",
            "saveObs"
          ],
          [
            "newObs",
            "equals"
          ],
          [
            "Context",
            "flushSession"
          ],
          [
            "Context",
            "refreshEntity"
          ],
          [
            "dao",
            "saveObs"
          ],
          [
            "Context",
            "evictFromSession"
          ],
          [
            "obs",
            "hasGroupMembers"
          ],
          [
            "obs",
            "getGroupMembers"
          ],
          [
            "obs",
            "getObsId"
          ],
          [
            "Context",
            "requirePrivilege"
          ],
          [
            "Context",
            "requirePrivilege"
          ],
          [
            "obs",
            "isObsGrouping"
          ],
          [
            "obs",
            "getGroupMembers"
          ],
          [
            "Context",
            "getObsService"
          ],
          [
            "obs",
            "getComplexData"
          ],
          [
            "obs",
            "getConcept"
          ],
          [
            "concept",
            "isComplex"
          ],
          [
            "complexData",
            "getData"
          ],
          [
            "handler",
            "saveObs"
          ],
          [
            "dao",
            "getObs"
          ],
          [
            "obs",
            "isComplex"
          ],
          [
            "dao",
            "saveObs"
          ],
          [
            "Context",
            "getObsService"
          ],
          [
            "dao",
            "deleteObs"
          ],
          [
            "Context",
            "getObsService"
          ],
          [
            "sort",
            "isEmpty"
          ],
          [
            "sort",
            "add"
          ],
          [
            "dao",
            "getObservations"
          ],
          [
            "this",
            "getObservations"
          ],
          [
            "sort",
            "isEmpty"
          ],
          [
            "sort",
            "add"
          ],
          [
            "dao",
            "getObservations"
          ],
          [
            "OpenmrsUtil",
            "convertToInteger"
          ],
          [
            "dao",
            "getObservationCount"
          ],
          [
            "this",
            "getObservationCount"
          ],
          [
            "OpenmrsUtil",
            "convertToInteger"
          ],
          [
            "dao",
            "getObservationCount"
          ],
          [
            "Context",
            "getPatientService"
          ],
          [
            "ps",
            "getPatients"
          ],
          [
            "Context",
            "getEncounterService"
          ],
          [
            "es",
            "getEncounter"
          ],
          [
            "Integer",
            "valueOf"
          ],
          [
            "encounters",
            "add"
          ],
          [
            "encounters",
            "isEmpty"
          ],
          [
            "persons",
            "isEmpty"
          ],
          [
            "Context",
            "getObsService"
          ],
          [
            "Integer",
            "valueOf"
          ],
          [
            "returnList",
            "add"
          ],
          [
            "whom",
            "add"
          ],
          [
            "Context",
            "getObsService"
          ],
          [
            "who",
            "getPersonId"
          ],
          [
            "whom",
            "add"
          ],
          [
            "questions",
            "add"
          ],
          [
            "Context",
            "getObsService"
          ],
          [
            "dao",
            "getObsByUuid"
          ],
          [
            "obsByUuid",
            "isComplex"
          ],
          [
            "dao",
            "getRevisionObs"
          ],
          [
            "dao",
            "getObs"
          ],
          [
            "obs",
            "isComplex"
          ],
          [
            "obs",
            "isComplex"
          ],
          [
            "handler",
            "purgeComplexData"
          ],
          [
            "obs",
            "getConcept"
          ],
          [
            "obs",
            "getConcept"
          ],
          [
            "Context",
            "getConceptService"
          ],
          [
            "obs",
            "getConcept"
          ],
          [
            "obs",
            "getConcept"
          ],
          [
            "this",
            "getHandler"
          ],
          [
            "handlers",
            "get"
          ],
          [
            "ObsServiceImpl",
            "setStaticHandlers"
          ],
          [
            "newHandlers",
            "entrySet"
          ],
          [
            "entry",
            "getKey"
          ],
          [
            "entry",
            "getValue"
          ],
          [
            "OpenmrsClassLoader",
            "getInstance"
          ],
          [
            "loadedClass",
            "newInstance"
          ],
          [
            "OpenmrsUtil",
            "convertToInteger"
          ],
          [
            "dao",
            "getObservationCount"
          ],
          [
            "handlers",
            "remove"
          ]
        ],
        "annotations": [
          "see",
          "Transactional",
          "link",
          "see",
          "Override",
          "see",
          "Override",
          "see",
          "Override",
          "see",
          "Override",
          "Transactional",
          "see",
          "param",
          "param",
          "throws",
          "Override",
          "see",
          "param",
          "return",
          "throws",
          "Override",
          "see",
          "Override",
          "see",
          "Override",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "see",
          "see",
          "Override",
          "param",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "see",
          "Override",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override"
        ],
        "extends": "BaseOpenmrsService",
        "implements": [
          "ObsService"
        ],
        "lines_of_code": 677,
        "comment_lines": 176,
        "blank_lines": 87
      }
    },
    "MedicationDispenseServiceImpl": {
      "file_path": "/Users/shashivelur/Projects/openmrs-core/api/src/main/java/org/openmrs/api/impl/MedicationDispenseServiceImpl.java",
      "class_name": "MedicationDispenseServiceImpl",
      "type": "implementation",
      "metrics": {
        "halstead": {
          "vocabulary": 149,
          "length": 482,
          "volume": 3479.6392268627615,
          "difficulty": 27.26829268292683,
          "effort": 94883.82086908701,
          "time": 5271.3233816159445,
          "bugs": 1.159879742287587
        },
        "cyclomatic_complexity": 3,
        "lcom": 0,
        "cbo": 7,
        "fan_in": 0,
        "fan_out": 2,
        "lines_of_code": 87,
        "effective_lines": 57,
        "comment_ratio": 0.1839080459770115,
        "method_count": 9,
        "field_count": 1,
        "import_count": 11
      },
      "elements": {
        "imports": [
          "org.apache.commons.lang.BooleanUtils",
          "org.apache.commons.lang3.StringUtils",
          "org.openmrs.MedicationDispense",
          "org.openmrs.api.APIException",
          "org.openmrs.api.MedicationDispenseService",
          "org.openmrs.api.context.Context",
          "org.openmrs.api.db.MedicationDispenseDAO",
          "org.openmrs.parameter.MedicationDispenseCriteria",
          "org.springframework.transaction.annotation.Transactional",
          "java.util.Date",
          "java.util.List"
        ],
        "class_name": "MedicationDispenseServiceImpl",
        "methods": [
          "setMedicationDispenseDAO",
          "getMedicationDispenseDAO",
          "getMedicationDispense",
          "getMedicationDispenseByUuid",
          "getMedicationDispenseByCriteria",
          "saveMedicationDispense",
          "voidMedicationDispense",
          "unvoidMedicationDispense",
          "purgeMedicationDispense"
        ],
        "fields": [
          "medicationDispenseDAO"
        ],
        "method_calls": [
          [
            "medicationDispenseDAO",
            "getMedicationDispense"
          ],
          [
            "medicationDispenseDAO",
            "getMedicationDispenseByUuid"
          ],
          [
            "medicationDispenseDAO",
            "getMedicationDispenseByCriteria"
          ],
          [
            "medicationDispenseDAO",
            "saveMedicationDispense"
          ],
          [
            "StringUtils",
            "isBlank"
          ],
          [
            "medicationDispenseDAO",
            "deleteMedicationDispense"
          ]
        ],
        "annotations": [
          "link",
          "since",
          "Transactional",
          "Override",
          "Transactional",
          "Override",
          "Transactional",
          "Override",
          "Transactional",
          "Override",
          "Override",
          "Override",
          "Override"
        ],
        "extends": "BaseOpenmrsService",
        "implements": [
          "MedicationDispenseService"
        ],
        "lines_of_code": 87,
        "comment_lines": 16,
        "blank_lines": 14
      }
    },
    "PersonServiceImpl": {
      "file_path": "/Users/shashivelur/Projects/openmrs-core/api/src/main/java/org/openmrs/api/impl/PersonServiceImpl.java",
      "class_name": "PersonServiceImpl",
      "type": "implementation",
      "metrics": {
        "halstead": {
          "vocabulary": 468,
          "length": 6081,
          "volume": 53940.68785978668,
          "difficulty": 109.92691415313226,
          "effort": 5929533.363723674,
          "time": 329418.52020687074,
          "bugs": 17.98022928659556
        },
        "cyclomatic_complexity": 91,
        "lcom": 0,
        "cbo": 21,
        "fan_in": 0,
        "fan_out": 40,
        "lines_of_code": 1002,
        "effective_lines": 633,
        "comment_ratio": 0.23552894211576847,
        "method_count": 71,
        "field_count": 2,
        "import_count": 32
      },
      "elements": {
        "imports": [
          "org.apache.commons.lang3.StringUtils",
          "org.openmrs.GlobalProperty",
          "org.openmrs.Person",
          "org.openmrs.PersonAddress",
          "org.openmrs.PersonAttribute",
          "org.openmrs.PersonAttributeType",
          "org.openmrs.PersonName",
          "org.openmrs.Relationship",
          "org.openmrs.RelationshipType",
          "org.openmrs.api.APIException",
          "org.openmrs.api.AdministrationService",
          "org.openmrs.api.PersonAttributeTypeLockedException",
          "org.openmrs.api.PersonService",
          "org.openmrs.api.context.Context",
          "org.openmrs.api.db.PersonDAO",
          "org.openmrs.person.PersonMergeLog",
          "org.openmrs.person.PersonMergeLogData",
          "org.openmrs.serialization.SerializationException",
          "org.openmrs.util.OpenmrsConstants",
          "org.openmrs.util.OpenmrsConstants.PERSON_TYPE",
          "org.openmrs.validator.ValidateUtil",
          "org.slf4j.Logger",
          "org.slf4j.LoggerFactory",
          "org.slf4j.MarkerFactory",
          "org.springframework.transaction.annotation.Transactional",
          "org.springframework.util.Assert",
          "java.util.ArrayList",
          "java.util.Date",
          "java.util.HashMap",
          "java.util.List",
          "java.util.Map",
          "java.util.Set"
        ],
        "class_name": "PersonServiceImpl",
        "methods": [
          "setPersonDAO",
          "getSimilarPeople",
          "getPeople",
          "getPeople",
          "getAllPersonAttributeTypes",
          "getAllPersonAttributeTypes",
          "getPersonAttributeTypeByName",
          "purgePersonAttributeType",
          "savePersonAttributeType",
          "retirePersonAttributeType",
          "getPersonAttributeTypes",
          "unretirePersonAttributeType",
          "getPersonAttributeType",
          "getPersonAttribute",
          "getRelationship",
          "getRelationshipType",
          "getRelationshipTypeByName",
          "purgePerson",
          "savePerson",
          "setPreferredPersonName",
          "setPreferredPersonAddress",
          "voidPerson",
          "unvoidPerson",
          "getPerson",
          "getAllRelationships",
          "getAllRelationships",
          "getRelationships",
          "getRelationships",
          "getRelationships",
          "getRelationshipsByPerson",
          "getRelationshipsByPerson",
          "purgeRelationship",
          "saveRelationship",
          "voidRelationship",
          "unvoidRelationship",
          "getAllRelationshipTypes",
          "getRelationshipTypes",
          "getRelationshipTypes",
          "purgeRelationshipType",
          "saveRelationshipType",
          "getPersonAttributeTypes",
          "getAttributeTypesFromGlobalProperties",
          "combineAttributes",
          "getGlobalProperties",
          "parsePersonName",
          "voidPersonName",
          "unvoidPersonName",
          "savePersonName",
          "getRelationshipMap",
          "getPersonAttributeTypeByUuid",
          "getPersonByUuid",
          "getPersonAddressByUuid",
          "getPersonAttributeByUuid",
          "getPersonName",
          "getPersonNameByUuid",
          "savePersonMergeLog",
          "getPersonMergeLogByUuid",
          "deserializeList",
          "deserialize",
          "getAllPersonMergeLogs",
          "getWinningPersonMergeLogs",
          "getLosingPersonMergeLog",
          "getRelationshipByUuid",
          "getRelationshipTypeByUuid",
          "getAllRelationshipTypes",
          "retireRelationshipType",
          "unretireRelationshipType",
          "voidPersonAddress",
          "unvoidPersonAddress",
          "savePersonAddress",
          "checkIfPersonAttributeTypesAreLocked"
        ],
        "fields": [
          "log",
          "dao"
        ],
        "method_calls": [
          [
            "LoggerFactory",
            "getLogger"
          ],
          [
            "dao",
            "getSimilarPeople"
          ],
          [
            "dao",
            "getPeople"
          ],
          [
            "dao",
            "getPeople"
          ],
          [
            "Context",
            "getPersonService"
          ],
          [
            "dao",
            "getAllPersonAttributeTypes"
          ],
          [
            "Context",
            "getPersonService"
          ],
          [
            "types",
            "isEmpty"
          ],
          [
            "types",
            "get"
          ],
          [
            "dao",
            "deletePersonAttributeType"
          ],
          [
            "type",
            "getSortWeight"
          ],
          [
            "Context",
            "getPersonService"
          ],
          [
            "allTypes",
            "isEmpty"
          ],
          [
            "type",
            "setSortWeight"
          ],
          [
            "allTypes",
            "get"
          ],
          [
            "allTypes",
            "size"
          ],
          [
            "type",
            "setSortWeight"
          ],
          [
            "type",
            "getId"
          ],
          [
            "dao",
            "getSavedPersonAttributeTypeName"
          ],
          [
            "type",
            "getName"
          ],
          [
            "oldTypeName",
            "equals"
          ],
          [
            "Context",
            "getAdministrationService"
          ],
          [
            "props",
            "add"
          ],
          [
            "as",
            "getGlobalPropertyObject"
          ],
          [
            "prop",
            "getPropertyValue"
          ],
          [
            "propVal",
            "contains"
          ],
          [
            "prop",
            "setPropertyValue"
          ],
          [
            "propVal",
            "replaceFirst"
          ],
          [
            "as",
            "saveGlobalProperty"
          ],
          [
            "dao",
            "savePersonAttributeType"
          ],
          [
            "dao",
            "getSavedPersonAttributeTypeSearchable"
          ],
          [
            "oldSearchable",
            "equals"
          ],
          [
            "type",
            "getSearchable"
          ],
          [
            "Context",
            "updateSearchIndexForType"
          ],
          [
            "retiredReason",
            "length"
          ],
          [
            "type",
            "setRetired"
          ],
          [
            "type",
            "setRetiredBy"
          ],
          [
            "Context",
            "getAuthenticatedUser"
          ],
          [
            "type",
            "setRetireReason"
          ],
          [
            "type",
            "setDateRetired"
          ],
          [
            "dao",
            "savePersonAttributeType"
          ],
          [
            "dao",
            "getPersonAttributeTypes"
          ],
          [
            "type",
            "setRetired"
          ],
          [
            "type",
            "setDateRetired"
          ],
          [
            "type",
            "setRetiredBy"
          ],
          [
            "type",
            "setRetireReason"
          ],
          [
            "Context",
            "getPersonService"
          ],
          [
            "dao",
            "getPersonAttributeType"
          ],
          [
            "dao",
            "getPersonAttribute"
          ],
          [
            "dao",
            "getRelationship"
          ],
          [
            "dao",
            "getRelationshipType"
          ],
          [
            "dao",
            "getRelationshipTypes"
          ],
          [
            "types",
            "isEmpty"
          ],
          [
            "types",
            "get"
          ],
          [
            "dao",
            "deletePerson"
          ],
          [
            "dao",
            "savePerson"
          ],
          [
            "person",
            "getPersonName"
          ],
          [
            "possiblePreferredName",
            "getPreferred"
          ],
          [
            "possiblePreferredName",
            "getVoided"
          ],
          [
            "person",
            "getNames"
          ],
          [
            "name",
            "getVoided"
          ],
          [
            "name",
            "setPreferred"
          ],
          [
            "name",
            "equals"
          ],
          [
            "name",
            "setPreferred"
          ],
          [
            "person",
            "getPersonAddress"
          ],
          [
            "possiblePreferredAddress",
            "getPreferred"
          ],
          [
            "possiblePreferredAddress",
            "getVoided"
          ],
          [
            "person",
            "getAddresses"
          ],
          [
            "address",
            "getVoided"
          ],
          [
            "address",
            "setPreferred"
          ],
          [
            "address",
            "equals"
          ],
          [
            "address",
            "setPreferred"
          ],
          [
            "dao",
            "savePerson"
          ],
          [
            "Context",
            "getPersonService"
          ],
          [
            "dao",
            "getPerson"
          ],
          [
            "Context",
            "getPersonService"
          ],
          [
            "dao",
            "getAllRelationships"
          ],
          [
            "dao",
            "getRelationships"
          ],
          [
            "dao",
            "getRelationships"
          ],
          [
            "dao",
            "getRelationships"
          ],
          [
            "Context",
            "getPersonService"
          ],
          [
            "rels",
            "addAll"
          ],
          [
            "Context",
            "getPersonService"
          ],
          [
            "Context",
            "getPersonService"
          ],
          [
            "rels",
            "addAll"
          ],
          [
            "Context",
            "getPersonService"
          ],
          [
            "dao",
            "deleteRelationship"
          ],
          [
            "relationship",
            "getPersonA"
          ],
          [
            "relationship",
            "getPersonB"
          ],
          [
            "dao",
            "saveRelationship"
          ],
          [
            "Context",
            "getPersonService"
          ],
          [
            "relationship",
            "setVoided"
          ],
          [
            "relationship",
            "setVoidedBy"
          ],
          [
            "relationship",
            "setDateVoided"
          ],
          [
            "relationship",
            "setVoidReason"
          ],
          [
            "Context",
            "getPersonService"
          ],
          [
            "Context",
            "getPersonService"
          ],
          [
            "Context",
            "getPersonService"
          ],
          [
            "Assert",
            "hasText"
          ],
          [
            "dao",
            "getRelationshipTypes"
          ],
          [
            "dao",
            "deleteRelationshipType"
          ],
          [
            "StringUtils",
            "isBlank"
          ],
          [
            "relationshipType",
            "getDescription"
          ],
          [
            "Context",
            "getMessageSourceService"
          ],
          [
            "dao",
            "saveRelationshipType"
          ],
          [
            "Context",
            "getPersonService"
          ],
          [
            "nameOrId",
            "matches"
          ],
          [
            "result",
            "add"
          ],
          [
            "Integer",
            "valueOf"
          ],
          [
            "result",
            "add"
          ],
          [
            "log",
            "error"
          ],
          [
            "MarkerFactory",
            "getMarker"
          ],
          [
            "res",
            "split"
          ],
          [
            "attrType",
            "trim"
          ],
          [
            "attrType",
            "isEmpty"
          ],
          [
            "attrTypes",
            "add"
          ],
          [
            "log",
            "error"
          ],
          [
            "MarkerFactory",
            "getMarker"
          ],
          [
            "Context",
            "getAdministrationService"
          ],
          [
            "as",
            "getGlobalProperty"
          ],
          [
            "StringUtils",
            "isNotBlank"
          ],
          [
            "result",
            "add"
          ],
          [
            "id",
            "trim"
          ],
          [
            "name",
            "trim"
          ],
          [
            "name",
            "endsWith"
          ],
          [
            "name",
            "substring"
          ],
          [
            "name",
            "length"
          ],
          [
            "name",
            "contains"
          ],
          [
            "name",
            "split"
          ],
          [
            "name",
            "contains"
          ],
          [
            "name",
            "split"
          ],
          [
            "pn",
            "setFamilyName2"
          ],
          [
            "Context",
            "getPersonService"
          ],
          [
            "Context",
            "getPersonService"
          ],
          [
            "ValidateUtil",
            "validate"
          ],
          [
            "personName",
            "getPerson"
          ],
          [
            "dao",
            "savePersonName"
          ],
          [
            "Context",
            "getPersonService"
          ],
          [
            "rel",
            "getPersonA"
          ],
          [
            "rel",
            "getPersonB"
          ],
          [
            "ret",
            "get"
          ],
          [
            "relList",
            "add"
          ],
          [
            "ret",
            "put"
          ],
          [
            "dao",
            "getPersonAttributeTypeByUuid"
          ],
          [
            "dao",
            "getPersonByUuid"
          ],
          [
            "dao",
            "getPersonAddressByUuid"
          ],
          [
            "dao",
            "getPersonAttributeByUuid"
          ],
          [
            "dao",
            "getPersonName"
          ],
          [
            "dao",
            "getPersonNameByUuid"
          ],
          [
            "Context",
            "getSerializationService"
          ],
          [
            "log",
            "debug"
          ],
          [
            "personMergeLog",
            "getLoser"
          ],
          [
            "personMergeLog",
            "getWinner"
          ],
          [
            "Context",
            "getSerializationService"
          ],
          [
            "personMergeLog",
            "getPersonMergeLogData"
          ],
          [
            "personMergeLog",
            "setSerializedMergedData"
          ],
          [
            "log",
            "debug"
          ],
          [
            "dao",
            "savePersonMergeLog"
          ],
          [
            "dao",
            "getPersonMergeLogByUuid"
          ],
          [
            "Context",
            "getSerializationService"
          ],
          [
            "personMergeLog",
            "getSerializedMergedData"
          ],
          [
            "personMergeLog",
            "setPersonMergeLogData"
          ],
          [
            "dao",
            "getAllPersonMergeLogs"
          ],
          [
            "dao",
            "getWinningPersonMergeLogs"
          ],
          [
            "dao",
            "getLosingPersonMergeLogs"
          ],
          [
            "dao",
            "getRelationshipByUuid"
          ],
          [
            "dao",
            "getRelationshipTypeByUuid"
          ],
          [
            "dao",
            "getAllRelationshipTypes"
          ],
          [
            "retiredReason",
            "length"
          ],
          [
            "type",
            "setRetired"
          ],
          [
            "type",
            "setRetiredBy"
          ],
          [
            "Context",
            "getAuthenticatedUser"
          ],
          [
            "type",
            "setDateRetired"
          ],
          [
            "type",
            "setRetireReason"
          ],
          [
            "Context",
            "getPersonService"
          ],
          [
            "relationshipType",
            "setRetired"
          ],
          [
            "relationshipType",
            "setRetiredBy"
          ],
          [
            "relationshipType",
            "setDateRetired"
          ],
          [
            "relationshipType",
            "setRetireReason"
          ],
          [
            "Context",
            "getPersonService"
          ],
          [
            "Context",
            "getPersonService"
          ],
          [
            "Context",
            "getPersonService"
          ],
          [
            "dao",
            "savePersonAddress"
          ],
          [
            "Context",
            "getAdministrationService"
          ],
          [
            "Boolean",
            "valueOf"
          ]
        ],
        "annotations": [
          "see",
          "see",
          "Transactional",
          "see",
          "Override",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "Override",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "see",
          "Override",
          "see",
          "Override",
          "see",
          "Override",
          "Transactional",
          "Override",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "see",
          "Override",
          "see",
          "Override",
          "see",
          "Override",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "see",
          "Override",
          "see",
          "Override",
          "see",
          "Override",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "see",
          "Override",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "see",
          "Override",
          "see",
          "Override",
          "see",
          "Override",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "Override",
          "Transactional",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "see",
          "Override",
          "Transactional",
          "param",
          "throws",
          "param",
          "throws",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "see",
          "Override",
          "see",
          "Override",
          "see",
          "Override",
          "see",
          "Override",
          "Override"
        ],
        "extends": "BaseOpenmrsService",
        "implements": [
          "PersonService"
        ],
        "lines_of_code": 1002,
        "comment_lines": 236,
        "blank_lines": 133
      }
    },
    "AdministrationServiceImpl": {
      "file_path": "/Users/shashivelur/Projects/openmrs-core/api/src/main/java/org/openmrs/api/impl/AdministrationServiceImpl.java",
      "class_name": "AdministrationServiceImpl",
      "type": "implementation",
      "metrics": {
        "halstead": {
          "vocabulary": 681,
          "length": 6703,
          "volume": 63085.35815264492,
          "difficulty": 95.43573667711598,
          "effort": 6020597.628837372,
          "time": 334477.6460465207,
          "bugs": 21.028452717548305
        },
        "cyclomatic_complexity": 123,
        "lcom": 0,
        "cbo": 31,
        "fan_in": 0,
        "fan_out": 55,
        "lines_of_code": 986,
        "effective_lines": 662,
        "comment_ratio": 0.19776876267748478,
        "method_count": 47,
        "field_count": 13,
        "import_count": 57
      },
      "elements": {
        "imports": [
          "java.io.UnsupportedEncodingException",
          "java.net.InetAddress",
          "java.net.UnknownHostException",
          "java.text.SimpleDateFormat",
          "java.util.ArrayList",
          "java.util.Arrays",
          "java.util.Calendar",
          "java.util.Collection",
          "java.util.HashMap",
          "java.util.HashSet",
          "java.util.Iterator",
          "java.util.LinkedHashMap",
          "java.util.LinkedHashSet",
          "java.util.List",
          "java.util.Locale",
          "java.util.Map",
          "java.util.Properties",
          "java.util.Set",
          "java.util.SortedMap",
          "java.util.TreeMap",
          "org.apache.commons.lang3.StringUtils",
          "org.openmrs.ConceptSource",
          "org.openmrs.GlobalProperty",
          "org.openmrs.ImplementationId",
          "org.openmrs.OpenmrsData",
          "org.openmrs.OpenmrsMetadata",
          "org.openmrs.OpenmrsObject",
          "org.openmrs.Privilege",
          "org.openmrs.User",
          "org.openmrs.api.APIException",
          "org.openmrs.api.AdministrationService",
          "org.openmrs.api.EventListeners",
          "org.openmrs.api.GlobalPropertyListener",
          "org.openmrs.api.context.Context",
          "org.openmrs.api.db.AdministrationDAO",
          "org.openmrs.customdatatype.CustomDatatype",
          "org.openmrs.customdatatype.CustomDatatypeUtil",
          "org.openmrs.customdatatype.CustomValueDescriptor",
          "org.openmrs.customdatatype.Customizable",
          "org.openmrs.customdatatype.SingleCustomValue",
          "org.openmrs.layout.LayoutSupport",
          "org.openmrs.layout.LayoutTemplate",
          "org.openmrs.messagesource.PresentationMessage",
          "org.openmrs.module.Module",
          "org.openmrs.module.ModuleFactory",
          "org.openmrs.module.ModuleUtil",
          "org.openmrs.obs.ComplexData",
          "org.openmrs.person.PersonMergeLogData",
          "org.openmrs.util.HttpClient",
          "org.openmrs.util.LocaleUtility",
          "org.openmrs.util.OpenmrsConstants",
          "org.slf4j.Logger",
          "org.slf4j.LoggerFactory",
          "org.springframework.cache.annotation.CacheEvict",
          "org.springframework.cache.annotation.Cacheable",
          "org.springframework.transaction.annotation.Transactional",
          "org.springframework.validation.Errors"
        ],
        "class_name": "AdministrationServiceImpl",
        "methods": [
          "AdministrationServiceImpl",
          "setAdministrationDAO",
          "setEventListeners",
          "getSystemVariables",
          "getGlobalProperty",
          "canViewGlobalProperty",
          "canDeleteGlobalProperty",
          "canEditGlobalProperty",
          "filterGlobalPropertiesByViewPrivilege",
          "getGlobalProperty",
          "getGlobalPropertyObject",
          "setGlobalProperty",
          "updateGlobalProperty",
          "getAllGlobalProperties",
          "getGlobalPropertiesByPrefix",
          "getGlobalPropertiesBySuffix",
          "purgeGlobalProperty",
          "saveGlobalProperties",
          "saveGlobalProperty",
          "executeSQL",
          "addGlobalPropertyListener",
          "removeGlobalPropertyListener",
          "notifyGlobalPropertyChange",
          "notifyGlobalPropertyDelete",
          "getImplementationId",
          "setImplementationId",
          "checkImplementationIdValidity",
          "getAllowedLocales",
          "setGlobalLocaleList",
          "getPresentationLocales",
          "globalPropertyChanged",
          "globalPropertyDeleted",
          "supportsPropertyName",
          "getGlobalPropertyByUuid",
          "getGlobalPropertyValue",
          "getSystemInformation",
          "convertToMegaBytes",
          "purgeGlobalProperties",
          "getMaximumPropertyLength",
          "validate",
          "getSearchLocales",
          "getSearchLocales",
          "setImplementationIdHttpClient",
          "isDatabaseStringComparisonCaseSensitive",
          "updatePostgresSequence",
          "getSerializerWhitelistTypes",
          "getSerializerDefaultWhitelistHierarchyTypes"
        ],
        "fields": [
          "log",
          "dao",
          "eventListeners",
          "globalLocaleList",
          "implementationIdHttpClient",
          "systemVariables",
          "presentationLocales",
          "globalLocaleList",
          "serialVersionUID",
          "serialVersionUID",
          "serialVersionUID",
          "serialVersionUID",
          "serialVersionUID"
        ],
        "method_calls": [
          [
            "LoggerFactory",
            "getLogger"
          ],
          [
            "systemVariables",
            "put"
          ],
          [
            "InetAddress",
            "getLocalHost"
          ],
          [
            "systemVariables",
            "put"
          ],
          [
            "e",
            "getMessage"
          ],
          [
            "systemVariables",
            "put"
          ],
          [
            "String",
            "valueOf"
          ],
          [
            "systemVariables",
            "put"
          ],
          [
            "systemVariables",
            "put"
          ],
          [
            "systemVariables",
            "put"
          ],
          [
            "String",
            "valueOf"
          ],
          [
            "systemVariables",
            "put"
          ],
          [
            "systemVariables",
            "put"
          ],
          [
            "systemVariables",
            "put"
          ],
          [
            "systemVariables",
            "put"
          ],
          [
            "ModuleUtil",
            "getModuleRepository"
          ],
          [
            "systemVariables",
            "put"
          ],
          [
            "String",
            "valueOf"
          ],
          [
            "systemVariables",
            "put"
          ],
          [
            "String",
            "valueOf"
          ],
          [
            "dao",
            "getGlobalPropertyObject"
          ],
          [
            "gp",
            "getPropertyValue"
          ],
          [
            "gp",
            "getViewPrivilege"
          ],
          [
            "property",
            "getViewPrivilege"
          ],
          [
            "Context",
            "getAuthenticatedUser"
          ],
          [
            "property",
            "getViewPrivilege"
          ],
          [
            "property",
            "getDeletePrivilege"
          ],
          [
            "Context",
            "getAuthenticatedUser"
          ],
          [
            "property",
            "getDeletePrivilege"
          ],
          [
            "property",
            "getEditPrivilege"
          ],
          [
            "Context",
            "getAuthenticatedUser"
          ],
          [
            "property",
            "getEditPrivilege"
          ],
          [
            "properties",
            "iterator"
          ],
          [
            "iterator",
            "hasNext"
          ],
          [
            "iterator",
            "next"
          ],
          [
            "property",
            "getViewPrivilege"
          ],
          [
            "Context",
            "getAuthenticatedUser"
          ],
          [
            "vp",
            "getPrivilege"
          ],
          [
            "iterator",
            "remove"
          ],
          [
            "Context",
            "getAdministrationService"
          ],
          [
            "dao",
            "getGlobalPropertyObject"
          ],
          [
            "gp",
            "getViewPrivilege"
          ],
          [
            "Context",
            "getAdministrationService"
          ],
          [
            "gp",
            "setProperty"
          ],
          [
            "gp",
            "setPropertyValue"
          ],
          [
            "Context",
            "getAdministrationService"
          ],
          [
            "Context",
            "getAdministrationService"
          ],
          [
            "gp",
            "getEditPrivilege"
          ],
          [
            "gp",
            "setPropertyValue"
          ],
          [
            "dao",
            "saveGlobalProperty"
          ],
          [
            "dao",
            "getAllGlobalProperties"
          ],
          [
            "dao",
            "getGlobalPropertiesByPrefix"
          ],
          [
            "dao",
            "getGlobalPropertiesBySuffix"
          ],
          [
            "globalProperty",
            "getDeletePrivilege"
          ],
          [
            "globalProperty",
            "getProperty"
          ],
          [
            "globalProperty",
            "getProperty"
          ],
          [
            "dao",
            "deleteGlobalProperty"
          ],
          [
            "log",
            "debug"
          ],
          [
            "prop",
            "getProperty"
          ],
          [
            "prop",
            "getProperty"
          ],
          [
            "Context",
            "getAdministrationService"
          ],
          [
            "gp",
            "getEditPrivilege"
          ],
          [
            "gp",
            "getProperty"
          ],
          [
            "gp",
            "getProperty"
          ],
          [
            "gp",
            "getProperty"
          ],
          [
            "gp",
            "getProperty"
          ],
          [
            "gp",
            "getPropertyValue"
          ],
          [
            "gp",
            "getPropertyValue"
          ],
          [
            "localeList",
            "add"
          ],
          [
            "LocaleUtility",
            "fromSpecification"
          ],
          [
            "localeString",
            "trim"
          ],
          [
            "localeList",
            "contains"
          ],
          [
            "LocaleUtility",
            "getDefaultLocale"
          ],
          [
            "gp",
            "setPropertyValue"
          ],
          [
            "StringUtils",
            "join"
          ],
          [
            "Context",
            "getMessageSourceService"
          ],
          [
            "LocaleUtility",
            "getDefaultLocale"
          ],
          [
            "gp",
            "getProperty"
          ],
          [
            "gp",
            "getPropertyValue"
          ],
          [
            "localeList",
            "contains"
          ],
          [
            "LocaleUtility",
            "fromSpecification"
          ],
          [
            "gp",
            "getPropertyValue"
          ],
          [
            "gp",
            "getPropertyValue"
          ],
          [
            "gp",
            "setPropertyValue"
          ],
          [
            "LocaleUtility",
            "getDefaultLocale"
          ],
          [
            "Context",
            "getMessageSourceService"
          ],
          [
            "CustomDatatypeUtil",
            "saveIfDirty"
          ],
          [
            "dao",
            "saveGlobalProperty"
          ],
          [
            "sql",
            "trim"
          ],
          [
            "dao",
            "executeSQL"
          ],
          [
            "eventListeners",
            "getGlobalPropertyListeners"
          ],
          [
            "eventListeners",
            "getGlobalPropertyListeners"
          ],
          [
            "eventListeners",
            "getGlobalPropertyListeners"
          ],
          [
            "listener",
            "supportsPropertyName"
          ],
          [
            "gp",
            "getProperty"
          ],
          [
            "listener",
            "globalPropertyChanged"
          ],
          [
            "eventListeners",
            "getGlobalPropertyListeners"
          ],
          [
            "listener",
            "supportsPropertyName"
          ],
          [
            "listener",
            "globalPropertyDeleted"
          ],
          [
            "Context",
            "getAdministrationService"
          ],
          [
            "Context",
            "getSerializationService"
          ],
          [
            "log",
            "debug"
          ],
          [
            "implementationId",
            "getDescription"
          ],
          [
            "implementationId",
            "getImplementationId"
          ],
          [
            "implementationId",
            "getPassphrase"
          ],
          [
            "implementationId",
            "setDescription"
          ],
          [
            "Context",
            "getConceptService"
          ],
          [
            "implementationId",
            "getImplementationId"
          ],
          [
            "source",
            "getHl7Code"
          ],
          [
            "newConceptSource",
            "setName"
          ],
          [
            "implementationId",
            "getName"
          ],
          [
            "newConceptSource",
            "setDescription"
          ],
          [
            "implementationId",
            "getDescription"
          ],
          [
            "newConceptSource",
            "setHl7Code"
          ],
          [
            "implementationId",
            "getImplementationId"
          ],
          [
            "Context",
            "getAuthenticatedUser"
          ],
          [
            "newConceptSource",
            "setCreator"
          ],
          [
            "Context",
            "getConceptService"
          ],
          [
            "Context",
            "getSerializationService"
          ],
          [
            "Context",
            "getAdministrationService"
          ],
          [
            "StringUtils",
            "isEmpty"
          ],
          [
            "StringUtils",
            "isEmpty"
          ],
          [
            "StringUtils",
            "isEmpty"
          ],
          [
            "data",
            "put"
          ],
          [
            "data",
            "put"
          ],
          [
            "data",
            "put"
          ],
          [
            "implementationIdHttpClient",
            "post"
          ],
          [
            "response",
            "trim"
          ],
          [
            "Context",
            "getMessageSourceService"
          ],
          [
            "Context",
            "getLocale"
          ],
          [
            "log",
            "debug"
          ],
          [
            "response",
            "startsWith"
          ],
          [
            "response",
            "replace"
          ],
          [
            "response",
            "trim"
          ],
          [
            "Context",
            "getMessageSourceService"
          ],
          [
            "Context",
            "getLocale"
          ],
          [
            "Context",
            "getAdministrationService"
          ],
          [
            "globalLocaleList",
            "getAllowedLocales"
          ],
          [
            "Context",
            "getAdministrationService"
          ],
          [
            "LocaleUtility",
            "getDefaultLocale"
          ],
          [
            "globalLocaleList",
            "globalPropertyChanged"
          ],
          [
            "globalLocaleList",
            "getAllowedLocales"
          ],
          [
            "Context",
            "getMessageSourceService"
          ],
          [
            "StringUtils",
            "isEmpty"
          ],
          [
            "locale",
            "getCountry"
          ],
          [
            "locale",
            "getLanguage"
          ],
          [
            "possibleLocale",
            "getLanguage"
          ],
          [
            "StringUtils",
            "isEmpty"
          ],
          [
            "possibleLocale",
            "getCountry"
          ],
          [
            "localsWithSameLanguage",
            "add"
          ],
          [
            "localsWithSameLanguage",
            "isEmpty"
          ],
          [
            "presentationLocales",
            "addAll"
          ],
          [
            "messageLocales",
            "contains"
          ],
          [
            "presentationLocales",
            "add"
          ],
          [
            "messageLocales",
            "contains"
          ],
          [
            "presentationLocales",
            "add"
          ],
          [
            "locale",
            "getLanguage"
          ],
          [
            "possibleLocale",
            "getLanguage"
          ],
          [
            "StringUtils",
            "isEmpty"
          ],
          [
            "possibleLocale",
            "getCountry"
          ],
          [
            "presentationLocales",
            "add"
          ],
          [
            "newValue",
            "getProperty"
          ],
          [
            "propertyName",
            "equals"
          ],
          [
            "dao",
            "getGlobalPropertyByUuid"
          ],
          [
            "gp",
            "getViewPrivilege"
          ],
          [
            "gp",
            "getProperty"
          ],
          [
            "Context",
            "getAdministrationService"
          ],
          [
            "StringUtils",
            "isEmpty"
          ],
          [
            "defaultValue",
            "getClass"
          ],
          [
            "defaultValue",
            "getClass"
          ],
          [
            "defaultValue",
            "getClass"
          ],
          [
            "log",
            "error"
          ],
          [
            "defaultValue",
            "getClass"
          ],
          [
            "systemInfoMap",
            "put"
          ],
          [
            "InetAddress",
            "getLocalHost"
          ],
          [
            "e",
            "getMessage"
          ],
          [
            "systemInfoMap",
            "put"
          ],
          [
            "System",
            "getProperties"
          ],
          [
            "properties",
            "getProperty"
          ],
          [
            "properties",
            "getProperty"
          ],
          [
            "properties",
            "getProperty"
          ],
          [
            "properties",
            "getProperty"
          ],
          [
            "properties",
            "getProperty"
          ],
          [
            "properties",
            "getProperty"
          ],
          [
            "properties",
            "getProperty"
          ],
          [
            "properties",
            "getProperty"
          ],
          [
            "properties",
            "getProperty"
          ],
          [
            "properties",
            "getProperty"
          ],
          [
            "properties",
            "getProperty"
          ],
          [
            "properties",
            "getProperty"
          ],
          [
            "properties",
            "getProperty"
          ],
          [
            "properties",
            "getProperty"
          ],
          [
            "properties",
            "getProperty"
          ],
          [
            "systemInfoMap",
            "put"
          ],
          [
            "Runtime",
            "getRuntime"
          ],
          [
            "runtime",
            "totalMemory"
          ],
          [
            "runtime",
            "freeMemory"
          ],
          [
            "runtime",
            "maxMemory"
          ],
          [
            "systemInfoMap",
            "put"
          ],
          [
            "Context",
            "getRuntimeProperties"
          ],
          [
            "properties",
            "getProperty"
          ],
          [
            "properties",
            "getProperty"
          ],
          [
            "properties",
            "getProperty"
          ],
          [
            "properties",
            "getProperty"
          ],
          [
            "systemInfoMap",
            "put"
          ],
          [
            "ModuleUtil",
            "getModuleRepository"
          ],
          [
            "ModuleFactory",
            "getLoadedModules"
          ],
          [
            "module",
            "getVersion"
          ],
          [
            "module",
            "isStarted"
          ],
          [
            "Context",
            "getMessageSourceService"
          ],
          [
            "module",
            "getName"
          ],
          [
            "String",
            "valueOf"
          ],
          [
            "Context",
            "getAdministrationService"
          ],
          [
            "dao",
            "getMaximumPropertyLength"
          ],
          [
            "dao",
            "validate"
          ],
          [
            "locales",
            "add"
          ],
          [
            "locales",
            "add"
          ],
          [
            "currentLocale",
            "getLanguage"
          ],
          [
            "user",
            "getProficientLocales"
          ],
          [
            "locales",
            "addAll"
          ],
          [
            "Context",
            "getAdministrationService"
          ],
          [
            "retainLocales",
            "add"
          ],
          [
            "retainLocales",
            "add"
          ],
          [
            "allowedLocale",
            "getLanguage"
          ],
          [
            "locales",
            "retainAll"
          ],
          [
            "Context",
            "getAdministrationService"
          ],
          [
            "Context",
            "getLocale"
          ],
          [
            "Context",
            "getAuthenticatedUser"
          ],
          [
            "dao",
            "isDatabaseStringComparisonCaseSensitive"
          ],
          [
            "dao",
            "updatePostgresSequence"
          ],
          [
            "whitelistTypes",
            "add"
          ],
          [
            "hierarchyType",
            "getName"
          ],
          [
            "gpType",
            "getPropertyValue"
          ],
          [
            "StringUtils",
            "isBlank"
          ],
          [
            "whitelistTypes",
            "add"
          ],
          [
            "type",
            "trim"
          ],
          [
            "Arrays",
            "asList"
          ]
        ],
        "annotations": [
          "see",
          "see",
          "Transactional",
          "see",
          "Override",
          "link",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "see",
          "Override",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "see",
          "Override",
          "CacheEvict",
          "see",
          "Override",
          "CacheEvict",
          "see",
          "Override",
          "see",
          "Override",
          "see",
          "Override",
          "param",
          "param",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "param",
          "param",
          "param",
          "return",
          "throws",
          "throws",
          "see",
          "Override",
          "Transactional",
          "param",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "see",
          "Override",
          "see",
          "Override",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "SuppressWarnings",
          "see",
          "Override",
          "Transactional",
          "param",
          "return",
          "see",
          "Override",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "Override",
          "Cacheable",
          "see",
          "Override",
          "Transactional",
          "Override",
          "see",
          "Override",
          "see",
          "Override",
          "Override"
        ],
        "extends": "BaseOpenmrsService",
        "implements": [
          "AdministrationService",
          "GlobalPropertyListener"
        ],
        "lines_of_code": 986,
        "comment_lines": 195,
        "blank_lines": 129
      }
    },
    "CohortServiceImpl": {
      "file_path": "/Users/shashivelur/Projects/openmrs-core/api/src/main/java/org/openmrs/api/impl/CohortServiceImpl.java",
      "class_name": "CohortServiceImpl",
      "type": "implementation",
      "metrics": {
        "halstead": {
          "vocabulary": 216,
          "length": 1772,
          "volume": 13741.660653833665,
          "difficulty": 72.01648351648352,
          "effort": 989626.0779659223,
          "time": 54979.22655366235,
          "bugs": 4.580553551277888
        },
        "cyclomatic_complexity": 14,
        "lcom": 0,
        "cbo": 12,
        "fan_in": 0,
        "fan_out": 12,
        "lines_of_code": 283,
        "effective_lines": 179,
        "comment_ratio": 0.254416961130742,
        "method_count": 22,
        "field_count": 2,
        "import_count": 17
      },
      "elements": {
        "imports": [
          "static org.openmrs.util.DateUtil.truncateToSeconds",
          "java.util.Date",
          "java.util.List",
          "java.util.stream.Collectors",
          "org.openmrs.Cohort",
          "org.openmrs.CohortMembership",
          "org.openmrs.Patient",
          "org.openmrs.User",
          "org.openmrs.api.APIException",
          "org.openmrs.api.CohortService",
          "org.openmrs.api.context.Context",
          "org.openmrs.api.db.CohortDAO",
          "org.openmrs.util.OpenmrsUtil",
          "org.openmrs.util.PrivilegeConstants",
          "org.slf4j.Logger",
          "org.slf4j.LoggerFactory",
          "org.springframework.transaction.annotation.Transactional"
        ],
        "class_name": "CohortServiceImpl",
        "methods": [
          "setCohortDAO",
          "saveCohort",
          "getCohort",
          "voidCohort",
          "getCohortByUuid",
          "getCohortMembershipByUuid",
          "addPatientToCohort",
          "removePatientFromCohort",
          "getCohortsContainingPatient",
          "getCohortsContainingPatientId",
          "getCohorts",
          "getAllCohorts",
          "getAllCohorts",
          "getCohortByName",
          "getCohort",
          "purgeCohort",
          "purgeCohortMembership",
          "voidCohortMembership",
          "endCohortMembership",
          "notifyPatientVoided",
          "notifyPatientUnvoided",
          "getCohortMemberships"
        ],
        "fields": [
          "log",
          "dao"
        ],
        "method_calls": [
          [
            "LoggerFactory",
            "getLogger"
          ],
          [
            "cohort",
            "getCohortId"
          ],
          [
            "Context",
            "requirePrivilege"
          ],
          [
            "Context",
            "requirePrivilege"
          ],
          [
            "cohort",
            "getName"
          ],
          [
            "cohort",
            "getDescription"
          ],
          [
            "log",
            "isInfoEnabled"
          ],
          [
            "log",
            "info"
          ],
          [
            "dao",
            "saveCohort"
          ],
          [
            "dao",
            "getCohort"
          ],
          [
            "Context",
            "getCohortService"
          ],
          [
            "dao",
            "getCohortByUuid"
          ],
          [
            "dao",
            "getCohortMembershipByUuid"
          ],
          [
            "cohort",
            "contains"
          ],
          [
            "patient",
            "getPatientId"
          ],
          [
            "patient",
            "getPatientId"
          ],
          [
            "cohort",
            "addMembership"
          ],
          [
            "Context",
            "getCohortService"
          ],
          [
            "patient",
            "getPatientId"
          ],
          [
            "memberships",
            "stream"
          ],
          [
            "m",
            "getCohort"
          ],
          [
            "Collectors",
            "toList"
          ],
          [
            "Context",
            "getCohortService"
          ],
          [
            "patient",
            "getPatientId"
          ],
          [
            "dao",
            "getCohortsContainingPatientId"
          ],
          [
            "dao",
            "getCohorts"
          ],
          [
            "Context",
            "getCohortService"
          ],
          [
            "dao",
            "getAllCohorts"
          ],
          [
            "dao",
            "getCohort"
          ],
          [
            "dao",
            "deleteCohort"
          ],
          [
            "cohortMembership",
            "getCohort"
          ],
          [
            "cohort",
            "removeMembership"
          ],
          [
            "Context",
            "getCohortService"
          ],
          [
            "Context",
            "getCohortService"
          ],
          [
            "cohortMembership",
            "getCohort"
          ],
          [
            "cohortMembership",
            "setEndDate"
          ],
          [
            "Context",
            "getCohortService"
          ],
          [
            "cohortMembership",
            "getCohort"
          ],
          [
            "Context",
            "getCohortService"
          ],
          [
            "patient",
            "getPatientId"
          ],
          [
            "memberships",
            "forEach"
          ],
          [
            "m",
            "setVoided"
          ],
          [
            "patient",
            "getVoided"
          ],
          [
            "m",
            "setDateVoided"
          ],
          [
            "patient",
            "getDateVoided"
          ],
          [
            "m",
            "setVoidedBy"
          ],
          [
            "patient",
            "getVoidedBy"
          ],
          [
            "m",
            "setVoidReason"
          ],
          [
            "patient",
            "getVoidReason"
          ],
          [
            "dao",
            "saveCohortMembership"
          ],
          [
            "patient",
            "getPatientId"
          ],
          [
            "memberships",
            "stream"
          ],
          [
            "m",
            "getVoided"
          ],
          [
            "m",
            "getVoidedBy"
          ],
          [
            "OpenmrsUtil",
            "compare"
          ],
          [
            "m",
            "getDateVoided"
          ],
          [
            "Collectors",
            "toList"
          ],
          [
            "member",
            "setVoided"
          ],
          [
            "member",
            "setDateVoided"
          ],
          [
            "member",
            "setVoidedBy"
          ],
          [
            "member",
            "setVoidReason"
          ],
          [
            "dao",
            "saveCohortMembership"
          ],
          [
            "dao",
            "getCohortMemberships"
          ]
        ],
        "annotations": [
          "Transactional",
          "see",
          "Override",
          "see",
          "Override",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "see",
          "Override",
          "Override",
          "Transactional",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "see",
          "Override",
          "see",
          "Override",
          "see",
          "Override",
          "see",
          "Override",
          "see",
          "Override",
          "Override"
        ],
        "extends": "BaseOpenmrsService",
        "implements": [
          "CohortService"
        ],
        "lines_of_code": 283,
        "comment_lines": 72,
        "blank_lines": 32
      }
    },
    "DiagnosisServiceImpl": {
      "file_path": "/Users/shashivelur/Projects/openmrs-core/api/src/main/java/org/openmrs/api/impl/DiagnosisServiceImpl.java",
      "class_name": "DiagnosisServiceImpl",
      "type": "implementation",
      "metrics": {
        "halstead": {
          "vocabulary": 247,
          "length": 1515,
          "volume": 12041.776355850787,
          "difficulty": 45.83333333333333,
          "effort": 551914.749643161,
          "time": 30661.930535731164,
          "bugs": 4.0139254519502625
        },
        "cyclomatic_complexity": 5,
        "lcom": 0,
        "cbo": 13,
        "fan_in": 0,
        "fan_out": 5,
        "lines_of_code": 260,
        "effective_lines": 118,
        "comment_ratio": 0.4461538461538462,
        "method_count": 21,
        "field_count": 1,
        "import_count": 17
      },
      "elements": {
        "imports": [
          "org.openmrs.CodedOrFreeText",
          "org.openmrs.Diagnosis",
          "org.openmrs.DiagnosisAttribute",
          "org.openmrs.DiagnosisAttributeType",
          "org.openmrs.Encounter",
          "org.openmrs.Patient",
          "org.openmrs.Visit",
          "org.openmrs.api.APIException",
          "org.openmrs.api.DiagnosisService",
          "org.openmrs.api.OpenmrsService",
          "org.openmrs.api.context.Context",
          "org.openmrs.api.db.DiagnosisDAO",
          "org.springframework.transaction.annotation.Transactional",
          "java.util.Date",
          "java.util.List",
          "java.util.Set",
          "java.util.HashSet"
        ],
        "class_name": "DiagnosisServiceImpl",
        "methods": [
          "save",
          "voidDiagnosis",
          "getDiagnosisByUuid",
          "getDiagnoses",
          "getDiagnosesByEncounter",
          "getDiagnosesByVisit",
          "getPrimaryDiagnoses",
          "getUniqueDiagnoses",
          "getDiagnosis",
          "unvoidDiagnosis",
          "purgeDiagnosis",
          "getDiagnosisDAO",
          "setDiagnosisDAO",
          "getAllDiagnosisAttributeTypes",
          "getDiagnosisAttributeTypeById",
          "getDiagnosisAttributeTypeByUuid",
          "saveDiagnosisAttributeType",
          "retireDiagnosisAttributeType",
          "unretireDiagnosisAttributeType",
          "purgeDiagnosisAttributeType",
          "getDiagnosisAttributeByUuid"
        ],
        "fields": [
          "diagnosisDAO"
        ],
        "method_calls": [
          [
            "diagnosisDAO",
            "saveDiagnosis"
          ],
          [
            "Context",
            "getDiagnosisService"
          ],
          [
            "diagnosisDAO",
            "getDiagnosisByUuid"
          ],
          [
            "diagnosisDAO",
            "getActiveDiagnoses"
          ],
          [
            "diagnosisDAO",
            "getDiagnosesByEncounter"
          ],
          [
            "diagnosisDAO",
            "getDiagnosesByVisit"
          ],
          [
            "diagnosisDAO",
            "getDiagnosesByEncounter"
          ],
          [
            "diagnoses",
            "removeIf"
          ],
          [
            "answers",
            "add"
          ],
          [
            "diagnosis",
            "getDiagnosis"
          ],
          [
            "diagnosisDAO",
            "getDiagnosisById"
          ],
          [
            "Context",
            "getDiagnosisService"
          ],
          [
            "diagnosisDAO",
            "deleteDiagnosis"
          ],
          [
            "diagnosisDAO",
            "getAllDiagnosisAttributeTypes"
          ],
          [
            "diagnosisDAO",
            "getDiagnosisAttributeTypeById"
          ],
          [
            "diagnosisDAO",
            "getDiagnosisAttributeTypeByUuid"
          ],
          [
            "diagnosisDAO",
            "saveDiagnosisAttributeType"
          ],
          [
            "Context",
            "getDiagnosisService"
          ],
          [
            "Context",
            "getDiagnosisService"
          ],
          [
            "diagnosisDAO",
            "deleteDiagnosisAttributeType"
          ],
          [
            "diagnosisDAO",
            "getDiagnosisAttributeByUuid"
          ]
        ],
        "annotations": [
          "Transactional",
          "param",
          "return",
          "Override",
          "param",
          "param",
          "return",
          "Override",
          "param",
          "return",
          "Override",
          "param",
          "param",
          "return",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "param",
          "return",
          "Override",
          "Transactional",
          "param",
          "param",
          "return",
          "Override",
          "Transactional",
          "param",
          "return",
          "Override",
          "Transactional",
          "param",
          "return",
          "throws",
          "Override",
          "param",
          "throws",
          "see",
          "Override",
          "return",
          "param",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "see",
          "Override",
          "see",
          "Override",
          "see",
          "Override",
          "see",
          "Override",
          "Transactional"
        ],
        "extends": "BaseOpenmrsService",
        "implements": [
          "DiagnosisService"
        ],
        "lines_of_code": 260,
        "comment_lines": 116,
        "blank_lines": 26
      }
    },
    "ConditionServiceImpl": {
      "file_path": "/Users/shashivelur/Projects/openmrs-core/api/src/main/java/org/openmrs/api/impl/ConditionServiceImpl.java",
      "class_name": "ConditionServiceImpl",
      "type": "implementation",
      "metrics": {
        "halstead": {
          "vocabulary": 245,
          "length": 1098,
          "volume": 8714.428457024824,
          "difficulty": 43.24065420560748,
          "effort": 376817.58750971593,
          "time": 20934.31041720644,
          "bugs": 2.9048094856749413
        },
        "cyclomatic_complexity": 14,
        "lcom": 0,
        "cbo": 9,
        "fan_in": 0,
        "fan_out": 7,
        "lines_of_code": 183,
        "effective_lines": 91,
        "comment_ratio": 0.3825136612021858,
        "method_count": 11,
        "field_count": 1,
        "import_count": 12
      },
      "elements": {
        "imports": [
          "org.apache.commons.lang3.BooleanUtils",
          "org.apache.commons.lang3.StringUtils",
          "org.openmrs.Condition",
          "org.openmrs.Encounter",
          "org.openmrs.Patient",
          "org.openmrs.User",
          "org.openmrs.api.APIException",
          "org.openmrs.api.ConditionService",
          "org.openmrs.api.context.Context",
          "org.openmrs.api.db.ConditionDAO",
          "org.springframework.transaction.annotation.Transactional",
          "java.util.List"
        ],
        "class_name": "ConditionServiceImpl",
        "methods": [
          "setConditionDAO",
          "getConditionDAO",
          "getConditionByUuid",
          "getCondition",
          "getActiveConditions",
          "getAllConditions",
          "getConditionsByEncounter",
          "saveCondition",
          "voidCondition",
          "unvoidCondition",
          "purgeCondition"
        ],
        "fields": [
          "conditionDAO"
        ],
        "method_calls": [
          [
            "conditionDAO",
            "getConditionByUuid"
          ],
          [
            "conditionDAO",
            "getCondition"
          ],
          [
            "conditionDAO",
            "getActiveConditions"
          ],
          [
            "conditionDAO",
            "getAllConditions"
          ],
          [
            "conditionDAO",
            "getConditionsByEncounter"
          ],
          [
            "condition",
            "getConditionId"
          ],
          [
            "conditionDAO",
            "saveCondition"
          ],
          [
            "Condition",
            "newInstance"
          ],
          [
            "Context",
            "refreshEntity"
          ],
          [
            "newCondition",
            "matches"
          ],
          [
            "BooleanUtils",
            "isTrue"
          ],
          [
            "condition",
            "getVoided"
          ],
          [
            "BooleanUtils",
            "isTrue"
          ],
          [
            "newCondition",
            "getVoided"
          ],
          [
            "Context",
            "getAuthenticatedUser"
          ],
          [
            "newCondition",
            "getUuid"
          ],
          [
            "condition",
            "setVoided"
          ],
          [
            "condition",
            "setVoidedBy"
          ],
          [
            "newCondition",
            "getVoidedBy"
          ],
          [
            "newCondition",
            "getVoidedBy"
          ],
          [
            "condition",
            "setVoidReason"
          ],
          [
            "newCondition",
            "getVoidReason"
          ],
          [
            "newCondition",
            "getVoidReason"
          ],
          [
            "conditionDAO",
            "saveCondition"
          ],
          [
            "newCondition",
            "setPreviousVersion"
          ],
          [
            "conditionDAO",
            "saveCondition"
          ],
          [
            "StringUtils",
            "isBlank"
          ],
          [
            "conditionDAO",
            "saveCondition"
          ],
          [
            "conditionDAO",
            "saveCondition"
          ],
          [
            "conditionDAO",
            "deleteCondition"
          ]
        ],
        "annotations": [
          "link",
          "since",
          "Transactional",
          "param",
          "return",
          "Override",
          "Transactional",
          "param",
          "return",
          "Override",
          "Transactional",
          "param",
          "return",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "param",
          "return",
          "Override",
          "param",
          "param",
          "return",
          "Override",
          "param",
          "return",
          "Override",
          "param",
          "Override"
        ],
        "extends": "BaseOpenmrsService",
        "implements": [
          "ConditionService"
        ],
        "lines_of_code": 183,
        "comment_lines": 70,
        "blank_lines": 22
      }
    },
    "UserServiceImpl": {
      "file_path": "/Users/shashivelur/Projects/openmrs-core/api/src/main/java/org/openmrs/api/impl/UserServiceImpl.java",
      "class_name": "UserServiceImpl",
      "type": "implementation",
      "metrics": {
        "halstead": {
          "vocabulary": 527,
          "length": 5541,
          "volume": 50099.833359221804,
          "difficulty": 100.68621399176955,
          "effort": 5044362.542558601,
          "time": 280242.36347547785,
          "bugs": 16.699944453073936
        },
        "cyclomatic_complexity": 79,
        "lcom": 0,
        "cbo": 25,
        "fan_in": 0,
        "fan_out": 37,
        "lines_of_code": 822,
        "effective_lines": 523,
        "comment_ratio": 0.22141119221411193,
        "method_count": 57,
        "field_count": 5,
        "import_count": 42
      },
      "elements": {
        "imports": [
          "java.util.ArrayList",
          "java.util.Collection",
          "java.util.Date",
          "java.util.HashSet",
          "java.util.List",
          "java.util.Locale",
          "java.util.Map",
          "java.util.Objects",
          "java.util.Optional",
          "java.util.Properties",
          "java.util.Set",
          "java.util.stream.Collectors",
          "org.apache.commons.lang.RandomStringUtils",
          "org.apache.commons.lang3.StringUtils",
          "org.openmrs.Person",
          "org.openmrs.Privilege",
          "org.openmrs.Role",
          "org.openmrs.User",
          "org.openmrs.annotation.Authorized",
          "org.openmrs.annotation.Logging",
          "org.openmrs.api.APIException",
          "org.openmrs.api.AdministrationService",
          "org.openmrs.api.CannotDeleteRoleWithChildrenException",
          "org.openmrs.api.InvalidActivationKeyException",
          "org.openmrs.api.UserService",
          "org.openmrs.api.context.Context",
          "org.openmrs.api.db.DAOException",
          "org.openmrs.api.db.LoginCredential",
          "org.openmrs.api.db.UserDAO",
          "org.openmrs.messagesource.MessageSourceService",
          "org.openmrs.notification.MessageException",
          "org.openmrs.patient.impl.LuhnIdentifierValidator",
          "org.openmrs.util.LocaleUtility",
          "org.openmrs.util.OpenmrsConstants",
          "org.openmrs.util.OpenmrsUtil",
          "org.openmrs.util.PrivilegeConstants",
          "org.openmrs.util.RoleConstants",
          "org.openmrs.util.Security",
          "org.slf4j.Logger",
          "org.slf4j.LoggerFactory",
          "org.springframework.cache.annotation.CacheEvict",
          "org.springframework.transaction.annotation.Transactional"
        ],
        "class_name": "UserServiceImpl",
        "methods": [
          "UserServiceImpl",
          "setUserDAO",
          "getValidTime",
          "createUser",
          "getUser",
          "getUserByUsername",
          "hasDuplicateUsername",
          "getUsersByRole",
          "saveUser",
          "voidUser",
          "retireUser",
          "unvoidUser",
          "unretireUser",
          "getAllUsers",
          "getAllPrivileges",
          "getPrivilege",
          "purgePrivilege",
          "savePrivilege",
          "getAllRoles",
          "getRole",
          "purgeRole",
          "saveRole",
          "changePassword",
          "changeHashedPassword",
          "changeQuestionAnswer",
          "changeQuestionAnswer",
          "isSecretAnswer",
          "getUsersByName",
          "getUsersByPerson",
          "getUsers",
          "checkPrivileges",
          "checkSuperUserPrivilege",
          "setUserProperty",
          "removeUserProperty",
          "generateSystemId",
          "purgeUser",
          "purgeUser",
          "checkPrivileges",
          "getPrivilegeByUuid",
          "getRoleByUuid",
          "getUserByUuid",
          "getCountOfUsers",
          "getUsers",
          "saveUserProperty",
          "saveUserProperties",
          "changePassword",
          "changePassword",
          "updatePassword",
          "changePasswordUsingSecretAnswer",
          "getSecretQuestion",
          "getUserByUsernameOrEmail",
          "getUserByActivationKey",
          "setUserActivationKey",
          "copyHostURLGlobalPropertyToPasswordResetGlobalProperty",
          "getDefaultLocaleForUser",
          "changePasswordUsingActivationKey",
          "getLastLoginTime"
        ],
        "fields": [
          "log",
          "dao",
          "MAX_VALID_TIME",
          "MIN_VALID_TIME",
          "DEFAULT_VALID_TIME"
        ],
        "method_calls": [
          [
            "LoggerFactory",
            "getLogger"
          ],
          [
            "Context",
            "getAdministrationService"
          ],
          [
            "StringUtils",
            "isBlank"
          ],
          [
            "Integer",
            "parseInt"
          ],
          [
            "user",
            "getUserId"
          ],
          [
            "Context",
            "requirePrivilege"
          ],
          [
            "password",
            "length"
          ],
          [
            "user",
            "getUsername"
          ],
          [
            "user",
            "getSystemId"
          ],
          [
            "OpenmrsUtil",
            "validatePassword"
          ],
          [
            "user",
            "getUsername"
          ],
          [
            "user",
            "getSystemId"
          ],
          [
            "dao",
            "saveUser"
          ],
          [
            "dao",
            "getUser"
          ],
          [
            "dao",
            "getUserByUsername"
          ],
          [
            "dao",
            "hasDuplicateUsername"
          ],
          [
            "user",
            "getUsername"
          ],
          [
            "user",
            "getSystemId"
          ],
          [
            "user",
            "getUserId"
          ],
          [
            "roles",
            "add"
          ],
          [
            "Context",
            "getUserService"
          ],
          [
            "user",
            "getUserId"
          ],
          [
            "Context",
            "requirePrivilege"
          ],
          [
            "user",
            "getUsername"
          ],
          [
            "user",
            "getSystemId"
          ],
          [
            "dao",
            "saveUser"
          ],
          [
            "Context",
            "getUserService"
          ],
          [
            "user",
            "setRetired"
          ],
          [
            "user",
            "setRetireReason"
          ],
          [
            "user",
            "setRetiredBy"
          ],
          [
            "Context",
            "getAuthenticatedUser"
          ],
          [
            "user",
            "setDateRetired"
          ],
          [
            "Context",
            "getUserService"
          ],
          [
            "user",
            "setRetired"
          ],
          [
            "user",
            "setRetireReason"
          ],
          [
            "user",
            "setRetiredBy"
          ],
          [
            "user",
            "setDateRetired"
          ],
          [
            "dao",
            "getAllUsers"
          ],
          [
            "dao",
            "getAllPrivileges"
          ],
          [
            "dao",
            "getPrivilege"
          ],
          [
            "OpenmrsUtil",
            "getCorePrivileges"
          ],
          [
            "privilege",
            "getPrivilege"
          ],
          [
            "dao",
            "deletePrivilege"
          ],
          [
            "dao",
            "savePrivilege"
          ],
          [
            "dao",
            "getAllRoles"
          ],
          [
            "dao",
            "getRole"
          ],
          [
            "role",
            "getRole"
          ],
          [
            "OpenmrsUtil",
            "getCoreRoles"
          ],
          [
            "role",
            "getRole"
          ],
          [
            "role",
            "hasChildRoles"
          ],
          [
            "dao",
            "deleteRole"
          ],
          [
            "role",
            "getAllParentRoles"
          ],
          [
            "dao",
            "saveRole"
          ],
          [
            "Context",
            "getAuthenticatedUser"
          ],
          [
            "dao",
            "changeHashedPassword"
          ],
          [
            "dao",
            "changeQuestionAnswer"
          ],
          [
            "dao",
            "changeQuestionAnswer"
          ],
          [
            "dao",
            "isSecretAnswer"
          ],
          [
            "dao",
            "getUsersByName"
          ],
          [
            "dao",
            "getUsersByPerson"
          ],
          [
            "Context",
            "getUserService"
          ],
          [
            "user",
            "getAllRoles"
          ],
          [
            "Context",
            "hasPrivilege"
          ],
          [
            "Collectors",
            "toList"
          ],
          [
            "requiredPrivs",
            "size"
          ],
          [
            "requiredPrivs",
            "get"
          ],
          [
            "requiredPrivs",
            "size"
          ],
          [
            "String",
            "join"
          ],
          [
            "r",
            "getRole"
          ],
          [
            "Context",
            "hasPrivilege"
          ],
          [
            "Context",
            "hasPrivilege"
          ],
          [
            "user",
            "equals"
          ],
          [
            "Context",
            "getAuthenticatedUser"
          ],
          [
            "user",
            "getUserId"
          ],
          [
            "user",
            "setUserProperty"
          ],
          [
            "Context",
            "addProxyPrivilege"
          ],
          [
            "Context",
            "getUserService"
          ],
          [
            "Context",
            "removeProxyPrivilege"
          ],
          [
            "Context",
            "hasPrivilege"
          ],
          [
            "user",
            "equals"
          ],
          [
            "Context",
            "getAuthenticatedUser"
          ],
          [
            "user",
            "getUserId"
          ],
          [
            "user",
            "removeUserProperty"
          ],
          [
            "Context",
            "addProxyPrivilege"
          ],
          [
            "Context",
            "getUserService"
          ],
          [
            "Context",
            "removeProxyPrivilege"
          ],
          [
            "dao",
            "generateSystemId"
          ],
          [
            "generatedId",
            "toString"
          ],
          [
            "liv",
            "getValidIdentifier"
          ],
          [
            "log",
            "error"
          ],
          [
            "dao",
            "hasDuplicateUsername"
          ],
          [
            "dao",
            "deleteUser"
          ],
          [
            "dao",
            "deleteUser"
          ],
          [
            "Optional",
            "ofNullable"
          ],
          [
            "role",
            "getPrivileges"
          ],
          [
            "p",
            "stream"
          ],
          [
            "Context",
            "hasPrivilege"
          ],
          [
            "pr",
            "getPrivilege"
          ],
          [
            "Collectors",
            "joining"
          ],
          [
            "StringUtils",
            "isNotBlank"
          ],
          [
            "dao",
            "getPrivilegeByUuid"
          ],
          [
            "dao",
            "getRoleByUuid"
          ],
          [
            "dao",
            "getUserByUuid"
          ],
          [
            "StringUtils",
            "replace"
          ],
          [
            "roles",
            "contains"
          ],
          [
            "dao",
            "getCountOfUsers"
          ],
          [
            "dao",
            "getCountOfUsers"
          ],
          [
            "StringUtils",
            "replace"
          ],
          [
            "roles",
            "contains"
          ],
          [
            "dao",
            "getUsers"
          ],
          [
            "allRoles",
            "add"
          ],
          [
            "allRoles",
            "addAll"
          ],
          [
            "r",
            "getAllChildRoles"
          ],
          [
            "dao",
            "getUsers"
          ],
          [
            "Context",
            "getAuthenticatedUser"
          ],
          [
            "user",
            "setUserProperty"
          ],
          [
            "dao",
            "saveUser"
          ],
          [
            "Context",
            "getAuthenticatedUser"
          ],
          [
            "user",
            "getUserProperties"
          ],
          [
            "properties",
            "entrySet"
          ],
          [
            "user",
            "setUserProperty"
          ],
          [
            "entry",
            "getKey"
          ],
          [
            "entry",
            "getValue"
          ],
          [
            "dao",
            "saveUser"
          ],
          [
            "user",
            "getUserId"
          ],
          [
            "Context",
            "hasPrivilege"
          ],
          [
            "dao",
            "getLoginCredential"
          ],
          [
            "oldPassword",
            "equals"
          ],
          [
            "user",
            "getSystemId"
          ],
          [
            "user",
            "getUsername"
          ],
          [
            "Boolean",
            "parseBoolean"
          ],
          [
            "Context",
            "getRuntimeProperties"
          ],
          [
            "OpenmrsUtil",
            "validatePassword"
          ],
          [
            "user",
            "getUsername"
          ],
          [
            "user",
            "getSystemId"
          ],
          [
            "dao",
            "changePassword"
          ],
          [
            "Context",
            "getAuthenticatedUser"
          ],
          [
            "user",
            "getUserId"
          ],
          [
            "dao",
            "getLoginCredential"
          ],
          [
            "loginCredential",
            "getSecretQuestion"
          ],
          [
            "StringUtils",
            "isNotBlank"
          ],
          [
            "dao",
            "getUserByEmail"
          ],
          [
            "dao",
            "getLoginCredentialByActivationKey"
          ],
          [
            "loginCred",
            "getActivationKey"
          ],
          [
            "System",
            "currentTimeMillis"
          ],
          [
            "Long",
            "parseLong"
          ],
          [
            "loginCred",
            "getUserId"
          ],
          [
            "RandomStringUtils",
            "randomAlphanumeric"
          ],
          [
            "System",
            "currentTimeMillis"
          ],
          [
            "Security",
            "encodeString"
          ],
          [
            "dao",
            "getLoginCredential"
          ],
          [
            "credentials",
            "setActivationKey"
          ],
          [
            "dao",
            "setUserActivationKey"
          ],
          [
            "Context",
            "getMessageSourceService"
          ],
          [
            "Context",
            "getAdministrationService"
          ],
          [
            "adminService",
            "getGlobalProperty"
          ],
          [
            "Context",
            "getMailProperties"
          ],
          [
            "mailProperties",
            "getProperty"
          ],
          [
            "messages",
            "getMessage"
          ],
          [
            "messages",
            "getMessage"
          ],
          [
            "user",
            "getUsername"
          ],
          [
            "String",
            "valueOf"
          ],
          [
            "Context",
            "getMessageService"
          ],
          [
            "user",
            "getEmail"
          ],
          [
            "adminService",
            "getGlobalProperty"
          ],
          [
            "adminService",
            "getGlobalProperty"
          ],
          [
            "StringUtils",
            "isNotBlank"
          ],
          [
            "StringUtils",
            "isBlank"
          ],
          [
            "adminService",
            "setGlobalProperty"
          ],
          [
            "user",
            "getUserProperty"
          ],
          [
            "StringUtils",
            "isNotBlank"
          ],
          [
            "LocaleUtility",
            "fromSpecification"
          ],
          [
            "log",
            "warn"
          ],
          [
            "Context",
            "getLocale"
          ],
          [
            "dao",
            "getLastLoginTime"
          ]
        ],
        "annotations": [
          "see",
          "see",
          "Transactional",
          "return",
          "see",
          "Override",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "CacheEvict",
          "see",
          "Override",
          "see",
          "Override",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "see",
          "Override",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "see",
          "Override",
          "see",
          "Override",
          "see",
          "Override",
          "see",
          "Override",
          "see",
          "Override",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "param",
          "see",
          "Override",
          "see",
          "Override",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "see",
          "Override",
          "param",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "Override",
          "Override",
          "see",
          "Override",
          "Authorized",
          "Logging",
          "Override",
          "Override",
          "Override",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "throws",
          "throws",
          "see",
          "Override",
          "link",
          "link",
          "see",
          "Override",
          "see",
          "Override",
          "see"
        ],
        "extends": "BaseOpenmrsService",
        "implements": [
          "UserService"
        ],
        "lines_of_code": 822,
        "comment_lines": 182,
        "blank_lines": 117
      }
    },
    "EncounterServiceImpl": {
      "file_path": "/Users/shashivelur/Projects/openmrs-core/api/src/main/java/org/openmrs/api/impl/EncounterServiceImpl.java",
      "class_name": "EncounterServiceImpl",
      "type": "implementation",
      "metrics": {
        "halstead": {
          "vocabulary": 607,
          "length": 6723,
          "volume": 62157.85084415695,
          "difficulty": 100.6140350877193,
          "effort": 6253952.18581123,
          "time": 347441.7881006239,
          "bugs": 20.719283614718982
        },
        "cyclomatic_complexity": 116,
        "lcom": 0,
        "cbo": 32,
        "fan_in": 0,
        "fan_out": 33,
        "lines_of_code": 1004,
        "effective_lines": 606,
        "comment_ratio": 0.2739043824701195,
        "method_count": 57,
        "field_count": 1,
        "import_count": 41
      },
      "elements": {
        "imports": [
          "java.util.ArrayList",
          "java.util.Collection",
          "java.util.Date",
          "java.util.Iterator",
          "java.util.List",
          "java.util.Map",
          "java.util.Set",
          "org.apache.commons.collections.CollectionUtils",
          "org.apache.commons.lang3.StringUtils",
          "org.openmrs.Cohort",
          "org.openmrs.Encounter",
          "org.openmrs.EncounterRole",
          "org.openmrs.EncounterType",
          "org.openmrs.Form",
          "org.openmrs.Location",
          "org.openmrs.Obs",
          "org.openmrs.Order",
          "org.openmrs.OrderGroup",
          "org.openmrs.Patient",
          "org.openmrs.Privilege",
          "org.openmrs.Provider",
          "org.openmrs.User",
          "org.openmrs.Visit",
          "org.openmrs.VisitType",
          "org.openmrs.api.APIException",
          "org.openmrs.api.DiagnosisService",
          "org.openmrs.api.EncounterService",
          "org.openmrs.api.EncounterTypeLockedException",
          "org.openmrs.api.ObsService",
          "org.openmrs.api.OrderService",
          "org.openmrs.api.context.Context",
          "org.openmrs.api.db.EncounterDAO",
          "org.openmrs.api.handler.EncounterVisitHandler",
          "org.openmrs.parameter.EncounterSearchCriteria",
          "org.openmrs.parameter.EncounterSearchCriteriaBuilder",
          "org.openmrs.util.HandlerUtil",
          "org.openmrs.util.OpenmrsClassLoader",
          "org.openmrs.util.OpenmrsConstants",
          "org.openmrs.util.OpenmrsUtil",
          "org.openmrs.util.PrivilegeConstants",
          "org.springframework.transaction.annotation.Transactional"
        ],
        "class_name": "EncounterServiceImpl",
        "methods": [
          "setEncounterDAO",
          "getEncountersByPatient",
          "saveEncounter",
          "failIfDeniedToEdit",
          "createVisitForNewEncounter",
          "requirePrivilege",
          "removeGivenObsAndTheirGroupMembersFromEncounter",
          "addGivenObsAndTheirGroupMembersToEncounter",
          "getEncounter",
          "getEncountersByPatient",
          "getEncountersByPatient",
          "getEncountersByPatientId",
          "getEncountersByPatientIdentifier",
          "getEncounters",
          "getEncounters",
          "voidEncounter",
          "unvoidEncounter",
          "purgeEncounter",
          "purgeEncounter",
          "saveEncounterType",
          "getEncounterType",
          "getEncounterType",
          "getAllEncounterTypes",
          "getAllEncounterTypes",
          "findEncounterTypes",
          "retireEncounterType",
          "unretireEncounterType",
          "purgeEncounterType",
          "getEncounterByUuid",
          "getEncounterTypeByUuid",
          "getAllEncounters",
          "getEncounters",
          "getEncounters",
          "getCountOfEncounters",
          "getEncountersByVisit",
          "getEncounterVisitHandlers",
          "getActiveEncounterVisitHandler",
          "saveEncounterRole",
          "getEncounterRole",
          "purgeEncounterRole",
          "getAllEncounterRoles",
          "getEncounterRoleByUuid",
          "getEncounterRoleByName",
          "retireEncounterRole",
          "unretireEncounterRole",
          "getEncountersNotAssignedToAnyVisit",
          "getEncountersByVisitsAndPatient",
          "getEncountersByVisitsAndPatientCount",
          "filterEncountersByViewPermissions",
          "canViewAllEncounterTypes",
          "canEditAllEncounterTypes",
          "canEditEncounter",
          "canViewEncounter",
          "userHasEncounterPrivilege",
          "checkIfEncounterTypesAreLocked",
          "getEncounterRolesByName",
          "transferEncounter"
        ],
        "fields": [
          "dao"
        ],
        "method_calls": [
          [
            "Context",
            "getEncounterService"
          ],
          [
            "Context",
            "getEncounterService"
          ],
          [
            "dao",
            "getEncounters"
          ],
          [
            "encounter",
            "getPatient"
          ],
          [
            "dao",
            "getSavedEncounterDatetime"
          ],
          [
            "encounter",
            "getLocation"
          ],
          [
            "dao",
            "getSavedEncounterLocation"
          ],
          [
            "encounter",
            "getEncounterDatetime"
          ],
          [
            "encounter",
            "getLocation"
          ],
          [
            "encounter",
            "getAllFlattenedObs"
          ],
          [
            "OpenmrsUtil",
            "compare"
          ],
          [
            "OpenmrsUtil",
            "compare"
          ],
          [
            "obs",
            "getObsDatetime"
          ],
          [
            "obs",
            "setObsDatetime"
          ],
          [
            "OpenmrsUtil",
            "nullSafeEquals"
          ],
          [
            "obs",
            "getLocation"
          ],
          [
            "obs",
            "setLocation"
          ],
          [
            "obs",
            "getPerson"
          ],
          [
            "p",
            "getPatientId"
          ],
          [
            "obs",
            "setPerson"
          ],
          [
            "encounter",
            "getOrders"
          ],
          [
            "p",
            "equals"
          ],
          [
            "o",
            "getPatient"
          ],
          [
            "o",
            "setPatient"
          ],
          [
            "dao",
            "saveEncounter"
          ],
          [
            "encounter",
            "getOrderGroups"
          ],
          [
            "Context",
            "getOrderService"
          ],
          [
            "encounter",
            "getOrdersWithoutOrderGroups"
          ],
          [
            "o",
            "getOrderId"
          ],
          [
            "Context",
            "getOrderService"
          ],
          [
            "Context",
            "getMessageSourceService"
          ],
          [
            "Context",
            "getObsService"
          ],
          [
            "encounter",
            "getObsAtTopLevel"
          ],
          [
            "o",
            "getId"
          ],
          [
            "os",
            "saveObs"
          ],
          [
            "os",
            "saveObs"
          ],
          [
            "obsToRemove",
            "add"
          ],
          [
            "obsToAdd",
            "add"
          ],
          [
            "os",
            "getObs"
          ],
          [
            "o",
            "getId"
          ],
          [
            "obsToAdd",
            "add"
          ],
          [
            "encounter",
            "getConditions"
          ],
          [
            "Context",
            "getConditionService"
          ],
          [
            "encounter",
            "getAllergies"
          ],
          [
            "Context",
            "getPatientService"
          ],
          [
            "encounter",
            "getDiagnoses"
          ],
          [
            "diagnosis",
            "setPatient"
          ],
          [
            "diagnosis",
            "setEncounter"
          ],
          [
            "encounter",
            "getDiagnoses"
          ],
          [
            "Context",
            "getDiagnosisService"
          ],
          [
            "encounter",
            "getEncounterType"
          ],
          [
            "encounter",
            "getEncounterId"
          ],
          [
            "Context",
            "getEncounterService"
          ],
          [
            "Context",
            "getEncounterService"
          ],
          [
            "encounterVisitHandler",
            "beforeCreateEncounter"
          ],
          [
            "encounter",
            "getVisit"
          ],
          [
            "encounter",
            "getVisit"
          ],
          [
            "Context",
            "getVisitService"
          ],
          [
            "encounter",
            "getVisit"
          ],
          [
            "encounter",
            "getEncounterId"
          ],
          [
            "Context",
            "requirePrivilege"
          ],
          [
            "Context",
            "requirePrivilege"
          ],
          [
            "encounter",
            "removeObs"
          ],
          [
            "o",
            "getGroupMembers"
          ],
          [
            "CollectionUtils",
            "isNotEmpty"
          ],
          [
            "encounter",
            "addObs"
          ],
          [
            "o",
            "getGroupMembers"
          ],
          [
            "CollectionUtils",
            "isNotEmpty"
          ],
          [
            "dao",
            "getEncounter"
          ],
          [
            "encounter",
            "getEncounterType"
          ],
          [
            "Context",
            "getEncounterService"
          ],
          [
            "Context",
            "getEncounterService"
          ],
          [
            "Context",
            "getEncounterService"
          ],
          [
            "dao",
            "getEncountersByPatientId"
          ],
          [
            "Context",
            "getPatientService"
          ],
          [
            "encs",
            "addAll"
          ],
          [
            "Context",
            "getEncounterService"
          ],
          [
            "p",
            "getPatientId"
          ],
          [
            "Context",
            "getEncounterService"
          ],
          [
            "encounterSearchCriteriaBuilder",
            "createEncounterSearchCriteria"
          ],
          [
            "Context",
            "getEncounterService"
          ],
          [
            "dao",
            "getEncounters"
          ],
          [
            "encounter",
            "getEncounterType"
          ],
          [
            "Context",
            "getObsService"
          ],
          [
            "encounter",
            "getObsAtTopLevel"
          ],
          [
            "o",
            "getVoided"
          ],
          [
            "os",
            "voidObs"
          ],
          [
            "Context",
            "getOrderService"
          ],
          [
            "encounter",
            "getOrders"
          ],
          [
            "orderService",
            "voidOrder"
          ],
          [
            "encounter",
            "setVoided"
          ],
          [
            "encounter",
            "setVoidedBy"
          ],
          [
            "Context",
            "getAuthenticatedUser"
          ],
          [
            "encounter",
            "getDateVoided"
          ],
          [
            "encounter",
            "setDateVoided"
          ],
          [
            "encounter",
            "setVoidReason"
          ],
          [
            "Context",
            "getEncounterService"
          ],
          [
            "encounter",
            "getEncounterType"
          ],
          [
            "encounter",
            "getVoidReason"
          ],
          [
            "Context",
            "getObsService"
          ],
          [
            "encounter",
            "getObsAtTopLevel"
          ],
          [
            "voidReason",
            "equals"
          ],
          [
            "o",
            "getVoidReason"
          ],
          [
            "os",
            "unvoidObs"
          ],
          [
            "Context",
            "getOrderService"
          ],
          [
            "encounter",
            "getOrders"
          ],
          [
            "voidReason",
            "equals"
          ],
          [
            "o",
            "getVoidReason"
          ],
          [
            "orderService",
            "unvoidOrder"
          ],
          [
            "encounter",
            "setVoided"
          ],
          [
            "encounter",
            "setVoidedBy"
          ],
          [
            "encounter",
            "setDateVoided"
          ],
          [
            "encounter",
            "setVoidReason"
          ],
          [
            "Context",
            "getEncounterService"
          ],
          [
            "encounter",
            "getEncounterType"
          ],
          [
            "dao",
            "deleteEncounter"
          ],
          [
            "encounter",
            "getEncounterType"
          ],
          [
            "Context",
            "getObsService"
          ],
          [
            "justThisEncounter",
            "add"
          ],
          [
            "obsService",
            "getObservations"
          ],
          [
            "obsService",
            "purgeObs"
          ],
          [
            "encounter",
            "getOrders"
          ],
          [
            "Context",
            "getOrderService"
          ],
          [
            "Context",
            "getEncounterService"
          ],
          [
            "Context",
            "getEncounterService"
          ],
          [
            "dao",
            "saveEncounterType"
          ],
          [
            "dao",
            "getEncounterType"
          ],
          [
            "dao",
            "getEncounterType"
          ],
          [
            "dao",
            "getAllEncounterTypes"
          ],
          [
            "dao",
            "getAllEncounterTypes"
          ],
          [
            "dao",
            "findEncounterTypes"
          ],
          [
            "Context",
            "getEncounterService"
          ],
          [
            "encounterType",
            "setRetired"
          ],
          [
            "encounterType",
            "setRetireReason"
          ],
          [
            "Context",
            "getEncounterService"
          ],
          [
            "Context",
            "getEncounterService"
          ],
          [
            "encounterType",
            "setRetired"
          ],
          [
            "Context",
            "getEncounterService"
          ],
          [
            "Context",
            "getEncounterService"
          ],
          [
            "dao",
            "deleteEncounterType"
          ],
          [
            "dao",
            "getEncounterByUuid"
          ],
          [
            "dao",
            "getEncounterTypeByUuid"
          ],
          [
            "dao",
            "getAllEncounters"
          ],
          [
            "Context",
            "getEncounterService"
          ],
          [
            "dao",
            "getEncounters"
          ],
          [
            "Context",
            "getEncounterService"
          ],
          [
            "dao",
            "getEncounters"
          ],
          [
            "OpenmrsUtil",
            "convertToInteger"
          ],
          [
            "dao",
            "getCountOfEncounters"
          ],
          [
            "Context",
            "getEncounterService"
          ],
          [
            "dao",
            "getEncountersByVisit"
          ],
          [
            "HandlerUtil",
            "getHandlersForType"
          ],
          [
            "Context",
            "getAdministrationService"
          ],
          [
            "StringUtils",
            "isBlank"
          ],
          [
            "handlerGlobalValue",
            "startsWith"
          ],
          [
            "handlerGlobalValue",
            "substring"
          ],
          [
            "namePrefix",
            "length"
          ],
          [
            "Context",
            "getRegisteredComponent"
          ],
          [
            "OpenmrsClassLoader",
            "getInstance"
          ],
          [
            "dao",
            "saveEncounterRole"
          ],
          [
            "dao",
            "getEncounterRole"
          ],
          [
            "dao",
            "deleteEncounterRole"
          ],
          [
            "dao",
            "getAllEncounterRoles"
          ],
          [
            "dao",
            "getEncounterRoleByUuid"
          ],
          [
            "dao",
            "getEncounterRoleByName"
          ],
          [
            "Context",
            "getEncounterService"
          ],
          [
            "Context",
            "getEncounterService"
          ],
          [
            "Context",
            "getEncounterService"
          ],
          [
            "dao",
            "getEncountersNotAssignedToAnyVisit"
          ],
          [
            "Context",
            "getEncounterService"
          ],
          [
            "dao",
            "getEncountersByVisitsAndPatient"
          ],
          [
            "dao",
            "getEncountersByVisitsAndPatientCount"
          ],
          [
            "Context",
            "getAuthenticatedUser"
          ],
          [
            "encounters",
            "iterator"
          ],
          [
            "iterator",
            "hasNext"
          ],
          [
            "iterator",
            "next"
          ],
          [
            "encounter",
            "getEncounterType"
          ],
          [
            "et",
            "getViewPrivilege"
          ],
          [
            "iterator",
            "remove"
          ],
          [
            "Context",
            "getEncounterService"
          ],
          [
            "et",
            "getViewPrivilege"
          ],
          [
            "Context",
            "getEncounterService"
          ],
          [
            "et",
            "getEditPrivilege"
          ],
          [
            "encounter",
            "getEncounterType"
          ],
          [
            "Context",
            "getAuthenticatedUser"
          ],
          [
            "encounter",
            "getEncounterType"
          ],
          [
            "encounter",
            "getEncounterType"
          ],
          [
            "Context",
            "getAuthenticatedUser"
          ],
          [
            "encounter",
            "getEncounterType"
          ],
          [
            "user",
            "hasPrivilege"
          ],
          [
            "privilege",
            "getPrivilege"
          ],
          [
            "Context",
            "getAdministrationService"
          ],
          [
            "Boolean",
            "valueOf"
          ],
          [
            "dao",
            "getEncounterRolesByName"
          ],
          [
            "encounter",
            "copyAndAssignToAnotherPatient"
          ],
          [
            "patient",
            "getId"
          ],
          [
            "encounter",
            "getVisit"
          ],
          [
            "visit",
            "getEncounters"
          ],
          [
            "Context",
            "getVisitService"
          ]
        ],
        "annotations": [
          "link",
          "see",
          "see",
          "Transactional",
          "see",
          "Override",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "param",
          "throws",
          "param",
          "param",
          "param",
          "param",
          "param",
          "param",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "deprecated",
          "link",
          "Deprecated",
          "Override",
          "Transactional",
          "see",
          "Override",
          "see",
          "Override",
          "see",
          "Override",
          "see",
          "Override",
          "see",
          "Override",
          "see",
          "Override",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "see",
          "Override",
          "see",
          "Override",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "see",
          "Override",
          "see",
          "Override",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "see",
          "Override",
          "param",
          "param",
          "return",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Override"
        ],
        "extends": "BaseOpenmrsService",
        "implements": [
          "EncounterService"
        ],
        "lines_of_code": 1004,
        "comment_lines": 275,
        "blank_lines": 123
      }
    },
    "OrderSetServiceImpl": {
      "file_path": "/Users/shashivelur/Projects/openmrs-core/api/src/main/java/org/openmrs/api/impl/OrderSetServiceImpl.java",
      "class_name": "OrderSetServiceImpl",
      "type": "implementation",
      "metrics": {
        "halstead": {
          "vocabulary": 173,
          "length": 1225,
          "volume": 9107.419578854988,
          "difficulty": 53.779310344827586,
          "effort": 489790.74397180136,
          "time": 27210.5968873223,
          "bugs": 3.035806526284996
        },
        "cyclomatic_complexity": 14,
        "lcom": 0,
        "cbo": 10,
        "fan_in": 0,
        "fan_out": 7,
        "lines_of_code": 215,
        "effective_lines": 128,
        "comment_ratio": 0.2930232558139535,
        "method_count": 18,
        "field_count": 1,
        "import_count": 14
      },
      "elements": {
        "imports": [
          "java.util.Date",
          "java.util.List",
          "org.apache.commons.collections.CollectionUtils",
          "org.apache.commons.lang3.StringUtils",
          "org.openmrs.OrderSet",
          "org.openmrs.OrderSetAttribute",
          "org.openmrs.OrderSetAttributeType",
          "org.openmrs.OrderSetMember",
          "org.openmrs.api.APIException",
          "org.openmrs.api.OrderSetService",
          "org.openmrs.api.context.Context",
          "org.openmrs.api.db.OrderSetDAO",
          "org.openmrs.customdatatype.CustomDatatypeUtil",
          "org.springframework.transaction.annotation.Transactional"
        ],
        "class_name": "OrderSetServiceImpl",
        "methods": [
          "setOrderSetDAO",
          "saveOrderSet",
          "retireOrderSet",
          "unretireOrderSet",
          "saveOrderSetInternal",
          "getOrderSets",
          "getOrderSet",
          "getOrderSetByUuid",
          "getOrderSetMemberByUuid",
          "getAllOrderSetAttributeTypes",
          "getOrderSetAttributeType",
          "getOrderSetAttributeTypeByUuid",
          "saveOrderSetAttributeType",
          "retireOrderSetAttributeType",
          "unretireOrderSetAttributeType",
          "purgeOrderSetAttributeType",
          "getOrderSetAttributeTypeByName",
          "getOrderSetAttributeByUuid"
        ],
        "fields": [
          "dao"
        ],
        "method_calls": [
          [
            "StringUtils",
            "isBlank"
          ],
          [
            "orderSet",
            "getOrderSetMembers"
          ],
          [
            "orderSet",
            "retireOrderSetMember"
          ],
          [
            "CollectionUtils",
            "isEmpty"
          ],
          [
            "orderSet",
            "getOrderSetMembers"
          ],
          [
            "CustomDatatypeUtil",
            "saveAttributesIfNecessary"
          ],
          [
            "dao",
            "save"
          ],
          [
            "orderSet",
            "getOrderSetMembers"
          ],
          [
            "orderSetMember",
            "getOrderSet"
          ],
          [
            "orderSetMember",
            "setOrderSet"
          ],
          [
            "orderSet",
            "getOrderSetMembers"
          ],
          [
            "orderSetMember",
            "getRetired"
          ],
          [
            "orderSetMember",
            "setRetiredBy"
          ],
          [
            "Context",
            "getAuthenticatedUser"
          ],
          [
            "orderSetMember",
            "setDateRetired"
          ],
          [
            "CustomDatatypeUtil",
            "saveAttributesIfNecessary"
          ],
          [
            "dao",
            "save"
          ],
          [
            "dao",
            "getOrderSets"
          ],
          [
            "dao",
            "getOrderSetById"
          ],
          [
            "dao",
            "getOrderSetByUniqueUuid"
          ],
          [
            "dao",
            "getOrderSetMemberByUuid"
          ],
          [
            "dao",
            "getAllOrderSetAttributeTypes"
          ],
          [
            "dao",
            "getOrderSetAttributeType"
          ],
          [
            "dao",
            "getOrderSetAttributeTypeByUuid"
          ],
          [
            "dao",
            "saveOrderSetAttributeType"
          ],
          [
            "dao",
            "saveOrderSetAttributeType"
          ],
          [
            "Context",
            "getOrderSetService"
          ],
          [
            "dao",
            "deleteOrderSetAttributeType"
          ],
          [
            "dao",
            "getOrderSetAttributeTypeByName"
          ],
          [
            "dao",
            "getOrderSetAttributeByUuid"
          ]
        ],
        "annotations": [
          "see",
          "Override",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional"
        ],
        "extends": "BaseOpenmrsService",
        "implements": [
          "OrderSetService"
        ],
        "lines_of_code": 215,
        "comment_lines": 63,
        "blank_lines": 24
      }
    },
    "VisitServiceImpl": {
      "file_path": "/Users/shashivelur/Projects/openmrs-core/api/src/main/java/org/openmrs/api/impl/VisitServiceImpl.java",
      "class_name": "VisitServiceImpl",
      "type": "implementation",
      "metrics": {
        "halstead": {
          "vocabulary": 272,
          "length": 2572,
          "volume": 20800.954427695873,
          "difficulty": 75.06666666666666,
          "effort": 1561458.3123723702,
          "time": 86747.68402068723,
          "bugs": 6.933651475898625
        },
        "cyclomatic_complexity": 19,
        "lcom": 0,
        "cbo": 17,
        "fan_in": 0,
        "fan_out": 15,
        "lines_of_code": 421,
        "effective_lines": 252,
        "comment_ratio": 0.2755344418052256,
        "method_count": 36,
        "field_count": 1,
        "import_count": 25
      },
      "elements": {
        "imports": [
          "java.util.ArrayList",
          "java.util.Collection",
          "java.util.Collections",
          "java.util.Date",
          "java.util.List",
          "java.util.Map",
          "org.apache.commons.lang3.ArrayUtils",
          "org.apache.commons.lang3.StringUtils",
          "org.openmrs.Concept",
          "org.openmrs.Location",
          "org.openmrs.Patient",
          "org.openmrs.Visit",
          "org.openmrs.VisitAttribute",
          "org.openmrs.VisitAttributeType",
          "org.openmrs.VisitType",
          "org.openmrs.api.APIException",
          "org.openmrs.api.VisitService",
          "org.openmrs.api.context.Context",
          "org.openmrs.api.db.VisitDAO",
          "org.openmrs.customdatatype.CustomDatatypeUtil",
          "org.openmrs.parameter.VisitSearchCriteria",
          "org.openmrs.util.OpenmrsConstants",
          "org.openmrs.util.PrivilegeConstants",
          "org.openmrs.validator.ValidateUtil",
          "org.springframework.transaction.annotation.Transactional"
        ],
        "class_name": "VisitServiceImpl",
        "methods": [
          "setVisitDAO",
          "getVisitDAO",
          "getAllVisitTypes",
          "getAllVisitTypes",
          "getVisitType",
          "getVisitTypeByUuid",
          "getVisitTypes",
          "saveVisitType",
          "retireVisitType",
          "unretireVisitType",
          "purgeVisitType",
          "getAllVisits",
          "getVisit",
          "getVisitByUuid",
          "saveVisit",
          "endVisit",
          "voidVisit",
          "unvoidVisit",
          "purgeVisit",
          "getVisits",
          "getVisits",
          "getVisitsByPatient",
          "getActiveVisitsByPatient",
          "getVisitsByPatient",
          "getAllVisitAttributeTypes",
          "getVisitAttributeType",
          "getVisitAttributeTypeByUuid",
          "saveVisitAttributeType",
          "retireVisitAttributeType",
          "unretireVisitAttributeType",
          "purgeVisitAttributeType",
          "getVisitAttributeByUuid",
          "stopVisits",
          "getVisitTypesToStop",
          "getVisitTypeNamesFromGlobalPropertyValue",
          "getVisitTypesFromVisitTypeNames"
        ],
        "fields": [
          "dao"
        ],
        "method_calls": [
          [
            "dao",
            "getAllVisitTypes"
          ],
          [
            "ValidateUtil",
            "validate"
          ],
          [
            "Context",
            "getVisitService"
          ],
          [
            "Context",
            "getVisitService"
          ],
          [
            "dao",
            "getVisits"
          ],
          [
            "dao",
            "getVisit"
          ],
          [
            "dao",
            "getVisitByUuid"
          ],
          [
            "visit",
            "getVisitId"
          ],
          [
            "Context",
            "requirePrivilege"
          ],
          [
            "Context",
            "requirePrivilege"
          ],
          [
            "CustomDatatypeUtil",
            "saveAttributesIfNecessary"
          ],
          [
            "dao",
            "saveVisit"
          ],
          [
            "visit",
            "setStopDatetime"
          ],
          [
            "Context",
            "getVisitService"
          ],
          [
            "dao",
            "saveVisit"
          ],
          [
            "Context",
            "getVisitService"
          ],
          [
            "visit",
            "getVisitId"
          ],
          [
            "Context",
            "getEncounterService"
          ],
          [
            "dao",
            "deleteVisit"
          ],
          [
            "CustomDatatypeUtil",
            "getValueReferences"
          ],
          [
            "dao",
            "getVisits"
          ],
          [
            "dao",
            "getVisits"
          ],
          [
            "patient",
            "getId"
          ],
          [
            "Collections",
            "emptyList"
          ],
          [
            "Context",
            "getVisitService"
          ],
          [
            "Collections",
            "singletonList"
          ],
          [
            "Context",
            "getVisitService"
          ],
          [
            "patient",
            "getId"
          ],
          [
            "Collections",
            "emptyList"
          ],
          [
            "dao",
            "getVisits"
          ],
          [
            "Collections",
            "singletonList"
          ],
          [
            "dao",
            "getAllVisitAttributeTypes"
          ],
          [
            "dao",
            "getVisitAttributeType"
          ],
          [
            "dao",
            "getVisitAttributeTypeByUuid"
          ],
          [
            "dao",
            "saveVisitAttributeType"
          ],
          [
            "dao",
            "saveVisitAttributeType"
          ],
          [
            "Context",
            "getVisitService"
          ],
          [
            "dao",
            "deleteVisitAttributeType"
          ],
          [
            "dao",
            "getVisitAttributeByUuid"
          ],
          [
            "visitTypesToStop",
            "isEmpty"
          ],
          [
            "dao",
            "getNextVisit"
          ],
          [
            "nextVisit",
            "setStopDatetime"
          ],
          [
            "dao",
            "saveVisit"
          ],
          [
            "Context",
            "flushSession"
          ],
          [
            "Context",
            "clearSession"
          ],
          [
            "dao",
            "getNextVisit"
          ],
          [
            "Context",
            "getAdministrationService"
          ],
          [
            "StringUtils",
            "isBlank"
          ],
          [
            "Collections",
            "emptyList"
          ],
          [
            "StringUtils",
            "split"
          ],
          [
            "commaSeparatedNames",
            "trim"
          ],
          [
            "currName",
            "trim"
          ],
          [
            "Context",
            "getVisitService"
          ],
          [
            "ArrayUtils",
            "contains"
          ],
          [
            "visitType",
            "getName"
          ],
          [
            "result",
            "add"
          ]
        ],
        "annotations": [
          "link",
          "since",
          "Transactional",
          "param",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "see",
          "Override",
          "see",
          "Override",
          "see",
          "Override",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "see",
          "Override",
          "see",
          "Override",
          "see",
          "Override",
          "see",
          "Override",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "see",
          "Override",
          "see",
          "Override",
          "see",
          "Override",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override"
        ],
        "extends": "BaseOpenmrsService",
        "implements": [
          "VisitService"
        ],
        "lines_of_code": 421,
        "comment_lines": 116,
        "blank_lines": 53
      }
    },
    "ConceptServiceImpl": {
      "file_path": "/Users/shashivelur/Projects/openmrs-core/api/src/main/java/org/openmrs/api/impl/ConceptServiceImpl.java",
      "class_name": "ConceptServiceImpl",
      "type": "implementation",
      "metrics": {
        "halstead": {
          "vocabulary": 882,
          "length": 13062,
          "volume": 127806.90035267234,
          "difficulty": 141.8,
          "effort": 18123018.47000894,
          "time": 1006834.359444941,
          "bugs": 42.60230011755745
        },
        "cyclomatic_complexity": 167,
        "lcom": 0,
        "cbo": 42,
        "fan_in": 0,
        "fan_out": 54,
        "lines_of_code": 2156,
        "effective_lines": 1340,
        "comment_ratio": 0.26762523191094617,
        "method_count": 169,
        "field_count": 7,
        "import_count": 65
      },
      "elements": {
        "imports": [
          "java.lang.reflect.Field",
          "java.lang.reflect.InvocationTargetException",
          "java.util.ArrayList",
          "java.util.Collection",
          "java.util.Collections",
          "java.util.Date",
          "java.util.HashMap",
          "java.util.HashSet",
          "java.util.Iterator",
          "java.util.List",
          "java.util.Locale",
          "java.util.Map",
          "java.util.Set",
          "java.util.UUID",
          "org.apache.commons.beanutils.BeanUtils",
          "org.apache.commons.collections.CollectionUtils",
          "org.apache.commons.lang3.StringUtils",
          "org.apache.commons.lang3.math.NumberUtils",
          "org.hibernate.Hibernate",
          "org.openmrs.Concept",
          "org.openmrs.ConceptAnswer",
          "org.openmrs.ConceptAttribute",
          "org.openmrs.ConceptAttributeType",
          "org.openmrs.ConceptClass",
          "org.openmrs.ConceptComplex",
          "org.openmrs.ConceptDatatype",
          "org.openmrs.ConceptDescription",
          "org.openmrs.ConceptMap",
          "org.openmrs.ConceptMapType",
          "org.openmrs.ConceptName",
          "org.openmrs.ConceptNameTag",
          "org.openmrs.ConceptNumeric",
          "org.openmrs.ConceptProposal",
          "org.openmrs.ConceptReferenceRange",
          "org.openmrs.ConceptReferenceTerm",
          "org.openmrs.ConceptReferenceTermMap",
          "org.openmrs.ConceptSearchResult",
          "org.openmrs.ConceptSet",
          "org.openmrs.ConceptSource",
          "org.openmrs.ConceptStopWord",
          "org.openmrs.Drug",
          "org.openmrs.DrugIngredient",
          "org.openmrs.Obs",
          "org.openmrs.Patient",
          "org.openmrs.Person",
          "org.openmrs.api.APIException",
          "org.openmrs.api.AdministrationService",
          "org.openmrs.api.ConceptInUseException",
          "org.openmrs.api.ConceptNameInUseException",
          "org.openmrs.api.ConceptService",
          "org.openmrs.api.ConceptStopWordException",
          "org.openmrs.api.ConceptsLockedException",
          "org.openmrs.api.context.Context",
          "org.openmrs.api.db.ConceptDAO",
          "org.openmrs.api.db.DAOException",
          "org.openmrs.customdatatype.CustomDatatypeUtil",
          "org.openmrs.util.OpenmrsConstants",
          "org.openmrs.util.OpenmrsUtil",
          "org.openmrs.validator.ObsValidator",
          "org.openmrs.validator.ValidateUtil",
          "org.slf4j.Logger",
          "org.slf4j.LoggerFactory",
          "org.springframework.cache.annotation.CacheEvict",
          "org.springframework.cache.annotation.Cacheable",
          "org.springframework.transaction.annotation.Transactional"
        ],
        "class_name": "ConceptServiceImpl",
        "methods": [
          "setConceptDAO",
          "saveConcept",
          "ensureConceptMapTypeIsSet",
          "makeVoidedNameSynonym",
          "makeLocaleNotPreferred",
          "ensurePreferredNameForLocale",
          "logConceptChangedData",
          "saveDrug",
          "purgeConcept",
          "retireConcept",
          "retireDrug",
          "unretireDrug",
          "purgeDrug",
          "getConcept",
          "getConceptByReference",
          "getConceptName",
          "getConceptAnswer",
          "getDrug",
          "getConceptNumeric",
          "getConceptComplex",
          "getAllConcepts",
          "getAllConcepts",
          "getConceptsByName",
          "getConceptByName",
          "getConcept",
          "getConcepts",
          "getDrug",
          "getAllDrugs",
          "getAllDrugs",
          "getDrugsByConcept",
          "getDrugs",
          "getConceptsByClass",
          "getAllConceptClasses",
          "getConceptClass",
          "getConceptClassByName",
          "getAllConceptClasses",
          "saveConceptClass",
          "purgeConceptClass",
          "purgeConceptNameTag",
          "getAllConceptDatatypes",
          "getAllConceptDatatypes",
          "getConceptDatatype",
          "getConceptDatatypeByName",
          "getConceptSetsByConcept",
          "getConceptsByConceptSet",
          "getSetsContainingConcept",
          "getConceptProposal",
          "getAllConceptProposals",
          "getConceptProposals",
          "getProposedConcepts",
          "saveConceptProposal",
          "purgeConceptProposal",
          "mapConceptProposalToConcept",
          "mapConceptProposalToConcept",
          "getConceptsByAnswer",
          "getPrevConcept",
          "getNextConcept",
          "checkIfLocked",
          "getConceptsWithDrugsInFormulary",
          "getMaxConceptId",
          "explodeConceptSetHelper",
          "getConceptNameTagByName",
          "getLocalesOfConceptNames",
          "getConceptSource",
          "getAllConceptSources",
          "purgeConceptSource",
          "retireConceptSource",
          "saveConceptSource",
          "saveConceptNameTag",
          "conceptIterator",
          "getConceptByUuid",
          "getConceptClassByUuid",
          "getConceptAnswerByUuid",
          "getConceptNameByUuid",
          "getConceptSetByUuid",
          "getConceptSourceByUuid",
          "getConceptDatatypeByUuid",
          "getConceptNumericByUuid",
          "getConceptProposalByUuid",
          "getDrugByUuid",
          "getDrugIngredientByUuid",
          "getConceptDescriptionByUuid",
          "getConceptNameTagByUuid",
          "getAllConceptNameTags",
          "getConceptNameTag",
          "getConceptByMapping",
          "getConceptByMapping",
          "getConceptsByMapping",
          "getConceptsByMapping",
          "getConceptIdsByMapping",
          "getFalseConcept",
          "getTrueConcept",
          "getUnknownConcept",
          "setStaticUnknownConcept",
          "setBooleanConcepts",
          "initializeLazyPropertiesForConcept",
          "getConceptSourceByName",
          "getConceptSourceByUniqueId",
          "getConceptSourceByHL7Code",
          "checkIfDatatypeCanBeChanged",
          "hasDatatypeChanged",
          "hasAnyObservation",
          "convertBooleanConceptToCoded",
          "hasAnyObservation",
          "hasNameChanged",
          "cloneConceptName",
          "findConceptAnswers",
          "getConceptStopWords",
          "saveConceptStopWord",
          "deleteConceptStopWord",
          "getAllConceptStopWords",
          "getConcepts",
          "updateConceptIndex",
          "updateConceptIndexes",
          "getCountOfConcepts",
          "getCountOfDrugs",
          "getDrugs",
          "getConcepts",
          "getDrugsByIngredient",
          "getConceptMappingsToSource",
          "getActiveConceptMapTypes",
          "getConceptMapTypes",
          "getConceptMapType",
          "getConceptMapTypeByUuid",
          "getConceptMapTypeByName",
          "saveConceptMapType",
          "retireConceptMapType",
          "unretireConceptMapType",
          "purgeConceptMapType",
          "getAllConceptReferenceTerms",
          "getConceptReferenceTerms",
          "getConceptReferenceTerm",
          "getConceptReferenceTermByUuid",
          "getConceptReferenceTermByName",
          "getConceptReferenceTermByCode",
          "getConceptReferenceTermByCode",
          "saveConceptReferenceTerm",
          "retireConceptReferenceTerm",
          "unretireConceptReferenceTerm",
          "purgeConceptReferenceTerm",
          "getConceptReferenceTerms",
          "getCountOfConceptReferenceTerms",
          "getReferenceTermMappingsTo",
          "getConceptsByName",
          "getDefaultConceptMapType",
          "isConceptNameDuplicate",
          "getDrugs",
          "getDrugsByMapping",
          "getDrugByMapping",
          "getOrderableConcepts",
          "getAllConceptAttributeTypes",
          "saveConceptAttributeType",
          "getConceptAttributeType",
          "getConceptAttributeTypeByUuid",
          "purgeConceptAttributeType",
          "getConceptAttributeTypes",
          "getConceptAttributeTypeByName",
          "retireConceptAttributeType",
          "unretireConceptAttributeType",
          "getConceptAttributeByUuid",
          "hasAnyConceptAttribute",
          "saveConceptReferenceRange",
          "getConceptReferenceRangesByConceptId",
          "getConceptReferenceRangeByUuid",
          "getConceptReferenceRange",
          "isValidUuidFormat",
          "evaluateStaticConstant",
          "getConceptClassesOfOrderTypes",
          "purgeConceptReferenceRange"
        ],
        "fields": [
          "log",
          "dao",
          "trueConcept",
          "falseConcept",
          "unknownConcept",
          "ERROR_MESSAGE",
          "CONCEPT_IDS_BY_MAPPING_CACHE_NAME"
        ],
        "method_calls": [
          [
            "LoggerFactory",
            "getLogger"
          ],
          [
            "CustomDatatypeUtil",
            "saveAttributesIfNecessary"
          ],
          [
            "concept",
            "getConceptId"
          ],
          [
            "concept",
            "getNames"
          ],
          [
            "conceptName",
            "getConceptNameId"
          ],
          [
            "clone",
            "setConceptNameId"
          ],
          [
            "uuidClonedConceptNameMap",
            "put"
          ],
          [
            "conceptName",
            "getUuid"
          ],
          [
            "changedConceptNames",
            "add"
          ],
          [
            "clone",
            "setConceptNameId"
          ],
          [
            "conceptName",
            "getConceptNameId"
          ],
          [
            "BeanUtils",
            "copyProperties"
          ],
          [
            "log",
            "error"
          ],
          [
            "CollectionUtils",
            "isNotEmpty"
          ],
          [
            "changedName",
            "setVoided"
          ],
          [
            "changedName",
            "setDateVoided"
          ],
          [
            "changedName",
            "setVoidedBy"
          ],
          [
            "Context",
            "getAuthenticatedUser"
          ],
          [
            "changedName",
            "setVoidReason"
          ],
          [
            "Context",
            "getMessageSourceService"
          ],
          [
            "uuidClonedConceptNameMap",
            "get"
          ],
          [
            "changedName",
            "getUuid"
          ],
          [
            "clone",
            "setUuid"
          ],
          [
            "UUID",
            "randomUUID"
          ],
          [
            "clone",
            "setDateCreated"
          ],
          [
            "clone",
            "setCreator"
          ],
          [
            "concept",
            "addName"
          ],
          [
            "concept",
            "getSet"
          ],
          [
            "concept",
            "getSetMembers"
          ],
          [
            "concept",
            "setSet"
          ],
          [
            "dao",
            "saveConcept"
          ],
          [
            "concept",
            "getConceptMappings"
          ],
          [
            "map",
            "getConceptMapType"
          ],
          [
            "Context",
            "getConceptService"
          ],
          [
            "map",
            "setConceptMapType"
          ],
          [
            "conceptName",
            "isSynonym"
          ],
          [
            "conceptName",
            "setConceptNameType"
          ],
          [
            "conceptName",
            "getLocalePreferred"
          ],
          [
            "conceptName",
            "setLocalePreferred"
          ],
          [
            "concept",
            "getNames"
          ],
          [
            "n",
            "getLocale"
          ],
          [
            "checkedLocales",
            "contains"
          ],
          [
            "concept",
            "getPreferredName"
          ],
          [
            "concept",
            "getFullySpecifiedName"
          ],
          [
            "concept",
            "getFullySpecifiedName"
          ],
          [
            "CollectionUtils",
            "isEmpty"
          ],
          [
            "concept",
            "getSynonyms"
          ],
          [
            "concept",
            "getSynonyms"
          ],
          [
            "possiblePreferredName",
            "setLocalePreferred"
          ],
          [
            "checkedLocales",
            "add"
          ],
          [
            "concept",
            "setDateChanged"
          ],
          [
            "concept",
            "setChangedBy"
          ],
          [
            "Context",
            "getAuthenticatedUser"
          ],
          [
            "dao",
            "saveDrug"
          ],
          [
            "concept",
            "getConceptId"
          ],
          [
            "concept",
            "getNames"
          ],
          [
            "concept",
            "getConceptId"
          ],
          [
            "conceptName",
            "getName"
          ],
          [
            "dao",
            "purgeConcept"
          ],
          [
            "StringUtils",
            "isBlank"
          ],
          [
            "Context",
            "getMessageSourceService"
          ],
          [
            "concept",
            "getRetired"
          ],
          [
            "concept",
            "setRetired"
          ],
          [
            "concept",
            "setRetireReason"
          ],
          [
            "Context",
            "getConceptService"
          ],
          [
            "dao",
            "saveDrug"
          ],
          [
            "Context",
            "getConceptService"
          ],
          [
            "dao",
            "purgeDrug"
          ],
          [
            "dao",
            "getConcept"
          ],
          [
            "StringUtils",
            "isBlank"
          ],
          [
            "Context",
            "getConceptService"
          ],
          [
            "conceptRef",
            "indexOf"
          ],
          [
            "conceptRef",
            "length"
          ],
          [
            "conceptRef",
            "substring"
          ],
          [
            "conceptRef",
            "substring"
          ],
          [
            "Context",
            "getConceptService"
          ],
          [
            "NumberUtils",
            "toInt"
          ],
          [
            "Context",
            "getConceptService"
          ],
          [
            "Context",
            "getConceptService"
          ],
          [
            "conceptRef",
            "contains"
          ],
          [
            "log",
            "warn"
          ],
          [
            "dao",
            "getConceptName"
          ],
          [
            "dao",
            "getConceptAnswer"
          ],
          [
            "dao",
            "getDrug"
          ],
          [
            "dao",
            "getConceptNumeric"
          ],
          [
            "dao",
            "getConceptComplex"
          ],
          [
            "Context",
            "getConceptService"
          ],
          [
            "dao",
            "getAllConcepts"
          ],
          [
            "Context",
            "getLocale"
          ],
          [
            "StringUtils",
            "isBlank"
          ],
          [
            "dao",
            "getConceptByName"
          ],
          [
            "Integer",
            "valueOf"
          ],
          [
            "Context",
            "getConceptService"
          ],
          [
            "Context",
            "getConceptService"
          ],
          [
            "dao",
            "getConcepts"
          ],
          [
            "Integer",
            "valueOf"
          ],
          [
            "Context",
            "getConceptService"
          ],
          [
            "dao",
            "getDrugs"
          ],
          [
            "drugs",
            "size"
          ],
          [
            "log",
            "warn"
          ],
          [
            "drugs",
            "isEmpty"
          ],
          [
            "drugs",
            "get"
          ],
          [
            "Context",
            "getConceptService"
          ],
          [
            "dao",
            "getDrugs"
          ],
          [
            "dao",
            "getDrugs"
          ],
          [
            "Integer",
            "parseInt"
          ],
          [
            "Context",
            "getConceptService"
          ],
          [
            "drugs",
            "add"
          ],
          [
            "Integer",
            "parseInt"
          ],
          [
            "Context",
            "getConceptService"
          ],
          [
            "drugs",
            "addAll"
          ],
          [
            "Context",
            "getConceptService"
          ],
          [
            "drugs",
            "addAll"
          ],
          [
            "dao",
            "getDrugs"
          ],
          [
            "dao",
            "getConceptsByClass"
          ],
          [
            "dao",
            "getAllConceptClasses"
          ],
          [
            "dao",
            "getConceptClass"
          ],
          [
            "dao",
            "getConceptClasses"
          ],
          [
            "ccList",
            "size"
          ],
          [
            "log",
            "warn"
          ],
          [
            "ccList",
            "size"
          ],
          [
            "ccList",
            "get"
          ],
          [
            "Context",
            "getConceptService"
          ],
          [
            "dao",
            "saveConceptClass"
          ],
          [
            "dao",
            "purgeConceptClass"
          ],
          [
            "dao",
            "deleteConceptNameTag"
          ],
          [
            "Context",
            "getConceptService"
          ],
          [
            "dao",
            "getAllConceptDatatypes"
          ],
          [
            "dao",
            "getConceptDatatype"
          ],
          [
            "dao",
            "getConceptDatatypeByName"
          ],
          [
            "dao",
            "getConceptSetsByConcept"
          ],
          [
            "concept",
            "getConceptId"
          ],
          [
            "Collections",
            "emptyList"
          ],
          [
            "dao",
            "getSetsContainingConcept"
          ],
          [
            "dao",
            "getConceptProposal"
          ],
          [
            "dao",
            "getAllConceptProposals"
          ],
          [
            "dao",
            "getConceptProposals"
          ],
          [
            "dao",
            "getProposedConcepts"
          ],
          [
            "dao",
            "saveConceptProposal"
          ],
          [
            "dao",
            "purgeConceptProposal"
          ],
          [
            "cp",
            "getState"
          ],
          [
            "cp",
            "rejectConceptProposal"
          ],
          [
            "Context",
            "getConceptService"
          ],
          [
            "cp",
            "getState"
          ],
          [
            "StringUtils",
            "isBlank"
          ],
          [
            "cp",
            "getFinalText"
          ],
          [
            "cp",
            "setState"
          ],
          [
            "cp",
            "setFinalText"
          ],
          [
            "cp",
            "getState"
          ],
          [
            "cp",
            "getFinalText"
          ],
          [
            "conceptName",
            "setConcept"
          ],
          [
            "conceptName",
            "setLocale"
          ],
          [
            "Context",
            "getLocale"
          ],
          [
            "conceptName",
            "setDateCreated"
          ],
          [
            "conceptName",
            "setCreator"
          ],
          [
            "Context",
            "getAuthenticatedUser"
          ],
          [
            "conceptName",
            "getUuid"
          ],
          [
            "conceptName",
            "setUuid"
          ],
          [
            "UUID",
            "randomUUID"
          ],
          [
            "mappedConcept",
            "addName"
          ],
          [
            "mappedConcept",
            "setChangedBy"
          ],
          [
            "Context",
            "getAuthenticatedUser"
          ],
          [
            "mappedConcept",
            "setDateChanged"
          ],
          [
            "ValidateUtil",
            "validate"
          ],
          [
            "Context",
            "getConceptService"
          ],
          [
            "cp",
            "setMappedConcept"
          ],
          [
            "cp",
            "getObsConcept"
          ],
          [
            "ob",
            "setEncounter"
          ],
          [
            "cp",
            "getEncounter"
          ],
          [
            "ob",
            "setConcept"
          ],
          [
            "cp",
            "getObsConcept"
          ],
          [
            "ob",
            "setValueCoded"
          ],
          [
            "cp",
            "getMappedConcept"
          ],
          [
            "cp",
            "getState"
          ],
          [
            "ob",
            "setValueCodedName"
          ],
          [
            "ob",
            "setCreator"
          ],
          [
            "Context",
            "getAuthenticatedUser"
          ],
          [
            "ob",
            "setDateCreated"
          ],
          [
            "ob",
            "setObsDatetime"
          ],
          [
            "cp",
            "getEncounter"
          ],
          [
            "ob",
            "setLocation"
          ],
          [
            "cp",
            "getEncounter"
          ],
          [
            "ob",
            "setPerson"
          ],
          [
            "cp",
            "getEncounter"
          ],
          [
            "ob",
            "getUuid"
          ],
          [
            "ob",
            "setUuid"
          ],
          [
            "UUID",
            "randomUUID"
          ],
          [
            "Context",
            "getObsService"
          ],
          [
            "cp",
            "setObs"
          ],
          [
            "Context",
            "getConceptService"
          ],
          [
            "concept",
            "getConceptId"
          ],
          [
            "Collections",
            "emptyList"
          ],
          [
            "dao",
            "getConceptsByAnswer"
          ],
          [
            "dao",
            "getPrevConcept"
          ],
          [
            "dao",
            "getNextConcept"
          ],
          [
            "Context",
            "getAdministrationService"
          ],
          [
            "dao",
            "getConceptsWithDrugsInFormulary"
          ],
          [
            "dao",
            "getMaxConceptId"
          ],
          [
            "alreadySeen",
            "contains"
          ],
          [
            "concept",
            "getConceptId"
          ],
          [
            "alreadySeen",
            "add"
          ],
          [
            "concept",
            "getConceptId"
          ],
          [
            "set",
            "getConcept"
          ],
          [
            "c",
            "getSet"
          ],
          [
            "ret",
            "add"
          ],
          [
            "ret",
            "add"
          ],
          [
            "dao",
            "getConceptNameTagByName"
          ],
          [
            "dao",
            "getLocalesOfConceptNames"
          ],
          [
            "dao",
            "getConceptSource"
          ],
          [
            "dao",
            "getAllConceptSources"
          ],
          [
            "dao",
            "deleteConceptSource"
          ],
          [
            "Context",
            "getConceptService"
          ],
          [
            "dao",
            "saveConceptSource"
          ],
          [
            "dao",
            "saveConceptNameTag"
          ],
          [
            "dao",
            "conceptIterator"
          ],
          [
            "dao",
            "getConceptByUuid"
          ],
          [
            "dao",
            "getConceptClassByUuid"
          ],
          [
            "dao",
            "getConceptAnswerByUuid"
          ],
          [
            "dao",
            "getConceptNameByUuid"
          ],
          [
            "dao",
            "getConceptSetByUuid"
          ],
          [
            "dao",
            "getConceptSourceByUuid"
          ],
          [
            "dao",
            "getConceptDatatypeByUuid"
          ],
          [
            "dao",
            "getConceptNumericByUuid"
          ],
          [
            "dao",
            "getConceptProposalByUuid"
          ],
          [
            "dao",
            "getDrugByUuid"
          ],
          [
            "dao",
            "getDrugIngredientByUuid"
          ],
          [
            "dao",
            "getConceptDescriptionByUuid"
          ],
          [
            "dao",
            "getConceptNameTagByUuid"
          ],
          [
            "dao",
            "getAllConceptNameTags"
          ],
          [
            "dao",
            "getConceptNameTag"
          ],
          [
            "Context",
            "getConceptService"
          ],
          [
            "Context",
            "getConceptService"
          ],
          [
            "concepts",
            "isEmpty"
          ],
          [
            "concepts",
            "size"
          ],
          [
            "concepts",
            "get"
          ],
          [
            "concepts",
            "get"
          ],
          [
            "Context",
            "getConceptService"
          ],
          [
            "Context",
            "getConceptService"
          ],
          [
            "concepts",
            "add"
          ],
          [
            "dao",
            "getConceptIdsByMapping"
          ],
          [
            "Context",
            "getConceptService"
          ],
          [
            "Integer",
            "parseInt"
          ],
          [
            "Context",
            "getAdministrationService"
          ],
          [
            "ConceptServiceImpl",
            "setStaticUnknownConcept"
          ],
          [
            "log",
            "warn"
          ],
          [
            "Context",
            "getConceptService"
          ],
          [
            "Integer",
            "parseInt"
          ],
          [
            "Context",
            "getAdministrationService"
          ],
          [
            "Context",
            "getConceptService"
          ],
          [
            "Integer",
            "parseInt"
          ],
          [
            "Context",
            "getAdministrationService"
          ],
          [
            "log",
            "warn"
          ],
          [
            "Hibernate",
            "initialize"
          ],
          [
            "concept",
            "getRetiredBy"
          ],
          [
            "Hibernate",
            "initialize"
          ],
          [
            "concept",
            "getCreator"
          ],
          [
            "Hibernate",
            "initialize"
          ],
          [
            "concept",
            "getChangedBy"
          ],
          [
            "Hibernate",
            "initialize"
          ],
          [
            "concept",
            "getNames"
          ],
          [
            "Hibernate",
            "initialize"
          ],
          [
            "concept",
            "getAnswers"
          ],
          [
            "Hibernate",
            "initialize"
          ],
          [
            "concept",
            "getConceptSets"
          ],
          [
            "Hibernate",
            "initialize"
          ],
          [
            "concept",
            "getDescriptions"
          ],
          [
            "Hibernate",
            "initialize"
          ],
          [
            "concept",
            "getConceptMappings"
          ],
          [
            "Hibernate",
            "initialize"
          ],
          [
            "concept",
            "getAttributes"
          ],
          [
            "dao",
            "getConceptSourceByName"
          ],
          [
            "dao",
            "getConceptSourceByUniqueId"
          ],
          [
            "dao",
            "getConceptSourceByHL7Code"
          ],
          [
            "concept",
            "getId"
          ],
          [
            "dao",
            "getSavedConceptDatatype"
          ],
          [
            "concept",
            "getDatatype"
          ],
          [
            "log",
            "debug"
          ],
          [
            "concept",
            "getConceptId"
          ],
          [
            "dao",
            "getSavedConceptDatatype"
          ],
          [
            "oldConceptDatatype",
            "equals"
          ],
          [
            "concept",
            "getDatatype"
          ],
          [
            "concepts",
            "add"
          ],
          [
            "Context",
            "getObsService"
          ],
          [
            "conceptToChange",
            "getDatatype"
          ],
          [
            "conceptToChange",
            "setDatatype"
          ],
          [
            "conceptToChange",
            "addAnswer"
          ],
          [
            "conceptToChange",
            "addAnswer"
          ],
          [
            "Context",
            "getConceptService"
          ],
          [
            "conceptNames",
            "add"
          ],
          [
            "Context",
            "getObsService"
          ],
          [
            "conceptName",
            "getName"
          ],
          [
            "dao",
            "getSavedConceptName"
          ],
          [
            "oldName",
            "equalsIgnoreCase"
          ],
          [
            "BeanUtils",
            "cloneBean"
          ],
          [
            "log",
            "warn"
          ],
          [
            "Collections",
            "singletonList"
          ],
          [
            "dao",
            "getConceptStopWords"
          ],
          [
            "dao",
            "saveConceptStopWord"
          ],
          [
            "e",
            "getMessage"
          ],
          [
            "dao",
            "deleteConceptStopWord"
          ],
          [
            "StringUtils",
            "contains"
          ],
          [
            "e",
            "getMessage"
          ],
          [
            "dao",
            "getAllConceptStopWords"
          ],
          [
            "dao",
            "getConcepts"
          ],
          [
            "Context",
            "updateSearchIndexForObject"
          ],
          [
            "Context",
            "updateSearchIndexForType"
          ],
          [
            "dao",
            "getCountOfConcepts"
          ],
          [
            "OpenmrsUtil",
            "convertToInteger"
          ],
          [
            "dao",
            "getCountOfDrugs"
          ],
          [
            "dao",
            "getDrugs"
          ],
          [
            "locales",
            "add"
          ],
          [
            "Context",
            "getConceptService"
          ],
          [
            "dao",
            "getDrugsByIngredient"
          ],
          [
            "dao",
            "getConceptMapsBySource"
          ],
          [
            "Context",
            "getConceptService"
          ],
          [
            "dao",
            "getConceptMapTypes"
          ],
          [
            "dao",
            "getConceptMapType"
          ],
          [
            "dao",
            "getConceptMapTypeByUuid"
          ],
          [
            "dao",
            "getConceptMapTypeByName"
          ],
          [
            "dao",
            "saveConceptMapType"
          ],
          [
            "StringUtils",
            "isBlank"
          ],
          [
            "Context",
            "getMessageSourceService"
          ],
          [
            "conceptMapType",
            "setRetireReason"
          ],
          [
            "dao",
            "saveConceptMapType"
          ],
          [
            "Context",
            "getConceptService"
          ],
          [
            "dao",
            "isConceptMapTypeInUse"
          ],
          [
            "dao",
            "deleteConceptMapType"
          ],
          [
            "Context",
            "getConceptService"
          ],
          [
            "dao",
            "getConceptReferenceTerms"
          ],
          [
            "dao",
            "getConceptReferenceTerm"
          ],
          [
            "dao",
            "getConceptReferenceTermByUuid"
          ],
          [
            "StringUtils",
            "isBlank"
          ],
          [
            "dao",
            "getConceptReferenceTermByName"
          ],
          [
            "dao",
            "getConceptReferenceTermByCode"
          ],
          [
            "dao",
            "getConceptReferenceTermByCode"
          ],
          [
            "dao",
            "saveConceptReferenceTerm"
          ],
          [
            "StringUtils",
            "isBlank"
          ],
          [
            "Context",
            "getMessageSourceService"
          ],
          [
            "conceptReferenceTerm",
            "setRetireReason"
          ],
          [
            "Context",
            "getConceptService"
          ],
          [
            "Context",
            "getConceptService"
          ],
          [
            "dao",
            "isConceptReferenceTermInUse"
          ],
          [
            "dao",
            "deleteConceptReferenceTerm"
          ],
          [
            "dao",
            "getConceptReferenceTerms"
          ],
          [
            "OpenmrsUtil",
            "convertToInteger"
          ],
          [
            "dao",
            "getCountOfConceptReferenceTerms"
          ],
          [
            "dao",
            "getReferenceTermMappingsTo"
          ],
          [
            "dao",
            "getConceptsByName"
          ],
          [
            "dao",
            "getDefaultConceptMapType"
          ],
          [
            "dao",
            "isConceptNameDuplicate"
          ],
          [
            "dao",
            "getDrugs"
          ],
          [
            "Collections",
            "emptyList"
          ],
          [
            "dao",
            "getDrugsByMapping"
          ],
          [
            "Collections",
            "emptyList"
          ],
          [
            "dao",
            "getDrugByMapping"
          ],
          [
            "mappedClasses",
            "isEmpty"
          ],
          [
            "Collections",
            "emptyList"
          ],
          [
            "tmpLocales",
            "add"
          ],
          [
            "Context",
            "getLocale"
          ],
          [
            "dao",
            "getConcepts"
          ],
          [
            "Collections",
            "emptyList"
          ],
          [
            "Collections",
            "emptyList"
          ],
          [
            "Collections",
            "emptyList"
          ],
          [
            "dao",
            "getAllConceptAttributeTypes"
          ],
          [
            "dao",
            "saveConceptAttributeType"
          ],
          [
            "dao",
            "getConceptAttributeType"
          ],
          [
            "dao",
            "getConceptAttributeTypeByUuid"
          ],
          [
            "dao",
            "deleteConceptAttributeType"
          ],
          [
            "dao",
            "getConceptAttributeTypes"
          ],
          [
            "dao",
            "getConceptAttributeTypeByName"
          ],
          [
            "dao",
            "saveConceptAttributeType"
          ],
          [
            "Context",
            "getConceptService"
          ],
          [
            "dao",
            "getConceptAttributeByUuid"
          ],
          [
            "dao",
            "getConceptAttributeCount"
          ],
          [
            "dao",
            "saveConceptReferenceRange"
          ],
          [
            "dao",
            "getConceptReferenceRangesByConceptId"
          ],
          [
            "dao",
            "getConceptReferenceRangeByUuid"
          ],
          [
            "uuid",
            "length"
          ],
          [
            "uuid",
            "length"
          ],
          [
            "uuid",
            "contains"
          ],
          [
            "uuid",
            "contains"
          ],
          [
            "fqn",
            "lastIndexOf"
          ],
          [
            "fqn",
            "substring"
          ],
          [
            "fqn",
            "substring"
          ],
          [
            "Context",
            "loadClass"
          ],
          [
            "clazz",
            "getDeclaredField"
          ],
          [
            "constantField",
            "setAccessible"
          ],
          [
            "constantField",
            "get"
          ],
          [
            "String",
            "valueOf"
          ],
          [
            "Context",
            "getAdministrationService"
          ],
          [
            "administrationService",
            "executeSQL"
          ],
          [
            "mappedClasses",
            "add"
          ],
          [
            "this",
            "getConceptClass"
          ],
          [
            "dao",
            "purgeConceptReferenceRange"
          ]
        ],
        "annotations": [
          "see",
          "Transactional",
          "see",
          "Override",
          "see",
          "Override",
          "CacheEvict",
          "see",
          "Override",
          "see",
          "Override",
          "see",
          "Override",
          "see",
          "throws",
          "Override",
          "see",
          "Override",
          "see",
          "throws",
          "Override",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "param",
          "param",
          "param",
          "return",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "see",
          "Override",
          "see",
          "Override",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "see",
          "Override",
          "see",
          "Override",
          "see",
          "Override",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "param",
          "param",
          "param",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "CacheEvict",
          "see",
          "Override",
          "see",
          "Override",
          "CacheEvict",
          "see",
          "Override",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "Override",
          "Transactional",
          "Override",
          "Transactional",
          "Override",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "Cacheable",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "param",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "param",
          "throws",
          "param",
          "return",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "see",
          "Override",
          "Transactional",
          "param",
          "return",
          "param",
          "return",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "see",
          "Override",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "see",
          "Override",
          "CacheEvict",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "see",
          "Override",
          "see",
          "Override",
          "see",
          "Override",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "Override",
          "Transactional",
          "see",
          "Override",
          "CacheEvict",
          "see",
          "Override",
          "see",
          "Override",
          "see",
          "Override",
          "CacheEvict",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "see",
          "Override",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "see",
          "Override",
          "Transactional",
          "Override",
          "Override",
          "param",
          "return",
          "see",
          "Override"
        ],
        "extends": "BaseOpenmrsService",
        "implements": [
          "ConceptService"
        ],
        "lines_of_code": 2156,
        "comment_lines": 577,
        "blank_lines": 239
      }
    },
    "SerializationServiceImpl": {
      "file_path": "/Users/shashivelur/Projects/openmrs-core/api/src/main/java/org/openmrs/api/impl/SerializationServiceImpl.java",
      "class_name": "SerializationServiceImpl",
      "type": "implementation",
      "metrics": {
        "halstead": {
          "vocabulary": 211,
          "length": 1039,
          "volume": 8022.222057066765,
          "difficulty": 49.641618497109825,
          "effort": 398236.0868560079,
          "time": 22124.227047555996,
          "bugs": 2.674074019022255
        },
        "cyclomatic_complexity": 27,
        "lcom": 0,
        "cbo": 8,
        "fan_in": 0,
        "fan_out": 9,
        "lines_of_code": 155,
        "effective_lines": 96,
        "comment_ratio": 0.25806451612903225,
        "method_count": 7,
        "field_count": 2,
        "import_count": 15
      },
      "elements": {
        "imports": [
          "java.util.ArrayList",
          "java.util.LinkedHashMap",
          "java.util.List",
          "java.util.Map",
          "org.apache.commons.lang3.StringUtils",
          "org.openmrs.api.APIException",
          "org.openmrs.api.SerializationService",
          "org.openmrs.api.context.Context",
          "org.openmrs.serialization.OpenmrsSerializer",
          "org.openmrs.serialization.SerializationException",
          "org.openmrs.serialization.SimpleXStreamSerializer",
          "org.openmrs.util.OpenmrsConstants",
          "org.slf4j.Logger",
          "org.slf4j.LoggerFactory",
          "org.springframework.transaction.annotation.Transactional"
        ],
        "class_name": "SerializationServiceImpl",
        "methods": [
          "getSerializer",
          "getDefaultSerializer",
          "serialize",
          "deserialize",
          "getSerializers",
          "setSerializerMap",
          "setSerializers"
        ],
        "fields": [
          "log",
          "serializerMap"
        ],
        "method_calls": [
          [
            "LoggerFactory",
            "getLogger"
          ],
          [
            "serializerMap",
            "get"
          ],
          [
            "Context",
            "getAdministrationService"
          ],
          [
            "StringUtils",
            "isNotEmpty"
          ],
          [
            "Context",
            "loadClass"
          ],
          [
            "class",
            "isAssignableFrom"
          ],
          [
            "clazz",
            "newInstance"
          ],
          [
            "log",
            "info"
          ],
          [
            "log",
            "info"
          ],
          [
            "serializerMap",
            "get"
          ],
          [
            "serializer",
            "serialize"
          ],
          [
            "serializer",
            "deserialize"
          ],
          [
            "serializerMap",
            "values"
          ],
          [
            "serializerMap",
            "put"
          ],
          [
            "s",
            "getClass"
          ]
        ],
        "annotations": [
          "Transactional",
          "see",
          "Override",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "see",
          "Override",
          "return",
          "Override",
          "param"
        ],
        "extends": "BaseOpenmrsService",
        "implements": [
          "SerializationService"
        ],
        "lines_of_code": 155,
        "comment_lines": 40,
        "blank_lines": 19
      }
    },
    "ProgramWorkflowServiceImpl": {
      "file_path": "/Users/shashivelur/Projects/openmrs-core/api/src/main/java/org/openmrs/api/impl/ProgramWorkflowServiceImpl.java",
      "class_name": "ProgramWorkflowServiceImpl",
      "type": "implementation",
      "metrics": {
        "halstead": {
          "vocabulary": 397,
          "length": 4292,
          "volume": 37052.815386137576,
          "difficulty": 93.78272980501393,
          "effort": 3474914.1738732033,
          "time": 193050.7874374002,
          "bugs": 12.350938462045859
        },
        "cyclomatic_complexity": 66,
        "lcom": 0,
        "cbo": 18,
        "fan_in": 0,
        "fan_out": 17,
        "lines_of_code": 639,
        "effective_lines": 401,
        "comment_ratio": 0.2597809076682316,
        "method_count": 50,
        "field_count": 2,
        "import_count": 26
      },
      "elements": {
        "imports": [
          "java.util.ArrayList",
          "java.util.Set",
          "java.util.Collection",
          "java.util.Date",
          "java.util.List",
          "java.util.Map",
          "org.openmrs.Cohort",
          "org.openmrs.Concept",
          "org.openmrs.ConceptAnswer",
          "org.openmrs.ConceptStateConversion",
          "org.openmrs.Patient",
          "org.openmrs.PatientProgram",
          "org.openmrs.PatientProgramAttribute",
          "org.openmrs.PatientState",
          "org.openmrs.Program",
          "org.openmrs.ProgramAttributeType",
          "org.openmrs.ProgramWorkflow",
          "org.openmrs.ProgramWorkflowState",
          "org.openmrs.api.APIException",
          "org.openmrs.api.ProgramNameDuplicatedException",
          "org.openmrs.api.ProgramWorkflowService",
          "org.openmrs.api.context.Context",
          "org.openmrs.api.db.ProgramWorkflowDAO",
          "org.slf4j.Logger",
          "org.slf4j.LoggerFactory",
          "org.springframework.transaction.annotation.Transactional"
        ],
        "class_name": "ProgramWorkflowServiceImpl",
        "methods": [
          "ProgramWorkflowServiceImpl",
          "setProgramWorkflowDAO",
          "saveProgram",
          "ensureProgramIsSet",
          "ensureProgramWorkflowIsSet",
          "getProgram",
          "getProgram",
          "getProgramByName",
          "getAllPrograms",
          "getAllPrograms",
          "getPrograms",
          "purgeProgram",
          "purgeProgram",
          "retireProgram",
          "unretireProgram",
          "savePatientProgram",
          "getPatientProgram",
          "getPatientPrograms",
          "getPatientPrograms",
          "purgePatientProgram",
          "purgePatientProgram",
          "voidPatientProgram",
          "unvoidPatientProgram",
          "getPossibleOutcomes",
          "saveConceptStateConversion",
          "getConceptStateConversion",
          "getAllConceptStateConversions",
          "purgeConceptStateConversion",
          "purgeConceptStateConversion",
          "triggerStateConversion",
          "getConceptStateConversion",
          "getProgramsByConcept",
          "getProgramWorkflowsByConcept",
          "getProgramWorkflowStatesByConcept",
          "getConceptStateConversionByUuid",
          "getPatientProgramByUuid",
          "getProgramByUuid",
          "getState",
          "getStateByUuid",
          "getPatientStateByUuid",
          "getWorkflow",
          "getWorkflowByUuid",
          "getAllProgramAttributeTypes",
          "getProgramAttributeType",
          "getProgramAttributeTypeByUuid",
          "saveProgramAttributeType",
          "purgeProgramAttributeType",
          "getPatientProgramAttributeByUuid",
          "getPatientProgramAttributeByAttributeName",
          "getPatientProgramByAttributeNameAndValue"
        ],
        "fields": [
          "log",
          "dao"
        ],
        "method_calls": [
          [
            "LoggerFactory",
            "getLogger"
          ],
          [
            "program",
            "getConcept"
          ],
          [
            "program",
            "getAllWorkflows"
          ],
          [
            "workflow",
            "getConcept"
          ],
          [
            "workflow",
            "getStates"
          ],
          [
            "state",
            "getConcept"
          ],
          [
            "state",
            "getInitial"
          ],
          [
            "state",
            "getTerminal"
          ],
          [
            "dao",
            "saveProgram"
          ],
          [
            "workflow",
            "getProgram"
          ],
          [
            "workflow",
            "setProgram"
          ],
          [
            "workflow",
            "getProgram"
          ],
          [
            "workflow",
            "getProgram"
          ],
          [
            "state",
            "getProgramWorkflow"
          ],
          [
            "state",
            "setProgramWorkflow"
          ],
          [
            "state",
            "getProgramWorkflow"
          ],
          [
            "workflow",
            "getProgram"
          ],
          [
            "dao",
            "getProgram"
          ],
          [
            "Context",
            "getProgramWorkflowService"
          ],
          [
            "dao",
            "getProgramsByName"
          ],
          [
            "programs",
            "isEmpty"
          ],
          [
            "dao",
            "getProgramsByName"
          ],
          [
            "programs",
            "size"
          ],
          [
            "programs",
            "isEmpty"
          ],
          [
            "programs",
            "get"
          ],
          [
            "Context",
            "getProgramWorkflowService"
          ],
          [
            "dao",
            "getAllPrograms"
          ],
          [
            "dao",
            "findPrograms"
          ],
          [
            "Context",
            "getProgramWorkflowService"
          ],
          [
            "program",
            "getAllWorkflows"
          ],
          [
            "Context",
            "getProgramWorkflowService"
          ],
          [
            "dao",
            "deleteProgram"
          ],
          [
            "program",
            "setRetired"
          ],
          [
            "program",
            "getWorkflows"
          ],
          [
            "workflow",
            "setRetired"
          ],
          [
            "workflow",
            "getStates"
          ],
          [
            "state",
            "setRetired"
          ],
          [
            "program",
            "getDateChanged"
          ],
          [
            "program",
            "setRetired"
          ],
          [
            "program",
            "getAllWorkflows"
          ],
          [
            "lastModifiedDate",
            "equals"
          ],
          [
            "workflow",
            "getDateChanged"
          ],
          [
            "workflow",
            "setRetired"
          ],
          [
            "workflow",
            "getStates"
          ],
          [
            "lastModifiedDate",
            "equals"
          ],
          [
            "state",
            "getDateChanged"
          ],
          [
            "state",
            "setRetired"
          ],
          [
            "patientProgram",
            "getPatient"
          ],
          [
            "patientProgram",
            "getProgram"
          ],
          [
            "patientProgram",
            "getStates"
          ],
          [
            "state",
            "getState"
          ],
          [
            "state",
            "getPatientProgram"
          ],
          [
            "state",
            "setPatientProgram"
          ],
          [
            "state",
            "getPatientProgram"
          ],
          [
            "state",
            "getPatientProgram"
          ],
          [
            "patientProgram",
            "getVoided"
          ],
          [
            "state",
            "getVoided"
          ],
          [
            "state",
            "setVoided"
          ],
          [
            "state",
            "getVoidReason"
          ],
          [
            "patientProgram",
            "getVoidReason"
          ],
          [
            "state",
            "setVoidReason"
          ],
          [
            "patientProgram",
            "getVoidReason"
          ],
          [
            "patientProgram",
            "getDateCompleted"
          ],
          [
            "patientProgram",
            "getMostRecentStateInEachWorkflow"
          ],
          [
            "state",
            "getEndDate"
          ],
          [
            "state",
            "setEndDate"
          ],
          [
            "patientProgram",
            "getDateCompleted"
          ],
          [
            "dao",
            "savePatientProgram"
          ],
          [
            "dao",
            "getPatientProgram"
          ],
          [
            "dao",
            "getPatientPrograms"
          ],
          [
            "cohort",
            "getMemberIds"
          ],
          [
            "dao",
            "getPatientPrograms"
          ],
          [
            "dao",
            "getPatientPrograms"
          ],
          [
            "Context",
            "getProgramWorkflowService"
          ],
          [
            "patientProgram",
            "getStates"
          ],
          [
            "dao",
            "deletePatientProgram"
          ],
          [
            "patientProgram",
            "setVoided"
          ],
          [
            "patientProgram",
            "setVoidReason"
          ],
          [
            "Context",
            "getProgramWorkflowService"
          ],
          [
            "patientProgram",
            "getDateVoided"
          ],
          [
            "patientProgram",
            "setVoided"
          ],
          [
            "patientProgram",
            "getStates"
          ],
          [
            "voidDate",
            "equals"
          ],
          [
            "state",
            "getDateVoided"
          ],
          [
            "state",
            "setVoided"
          ],
          [
            "state",
            "setVoidedBy"
          ],
          [
            "state",
            "setDateVoided"
          ],
          [
            "state",
            "setVoidReason"
          ],
          [
            "Context",
            "getProgramWorkflowService"
          ],
          [
            "Context",
            "getProgramWorkflowService"
          ],
          [
            "program",
            "getOutcomesConcept"
          ],
          [
            "outcomesConcept",
            "getAnswers"
          ],
          [
            "outcomesConcept",
            "getAnswers"
          ],
          [
            "possibleOutcomes",
            "add"
          ],
          [
            "conceptAnswer",
            "getAnswerConcept"
          ],
          [
            "outcomesConcept",
            "getSetMembers"
          ],
          [
            "outcomesConcept",
            "getSetMembers"
          ],
          [
            "csc",
            "getConcept"
          ],
          [
            "csc",
            "getProgramWorkflow"
          ],
          [
            "csc",
            "getProgramWorkflowState"
          ],
          [
            "dao",
            "saveConceptStateConversion"
          ],
          [
            "dao",
            "getConceptStateConversion"
          ],
          [
            "dao",
            "getAllConceptStateConversions"
          ],
          [
            "Context",
            "getProgramWorkflowService"
          ],
          [
            "dao",
            "deleteConceptStateConversion"
          ],
          [
            "patientProgram",
            "getDateCompleted"
          ],
          [
            "patientProgram",
            "getProgram"
          ],
          [
            "patientProgram",
            "getCurrentState"
          ],
          [
            "patientState",
            "getState"
          ],
          [
            "workflow",
            "getState"
          ],
          [
            "log",
            "debug"
          ],
          [
            "log",
            "debug"
          ],
          [
            "workflow",
            "isLegalTransition"
          ],
          [
            "patientProgram",
            "transitionToState"
          ],
          [
            "log",
            "debug"
          ],
          [
            "Context",
            "getProgramWorkflowService"
          ],
          [
            "dao",
            "getConceptStateConversion"
          ],
          [
            "dao",
            "getProgramsByConcept"
          ],
          [
            "dao",
            "getProgramWorkflowsByConcept"
          ],
          [
            "dao",
            "getProgramWorkflowStatesByConcept"
          ],
          [
            "dao",
            "getConceptStateConversionByUuid"
          ],
          [
            "dao",
            "getPatientProgramByUuid"
          ],
          [
            "dao",
            "getProgramByUuid"
          ],
          [
            "dao",
            "getState"
          ],
          [
            "dao",
            "getStateByUuid"
          ],
          [
            "dao",
            "getPatientStateByUuid"
          ],
          [
            "dao",
            "getWorkflow"
          ],
          [
            "dao",
            "getWorkflowByUuid"
          ],
          [
            "dao",
            "getAllProgramAttributeTypes"
          ],
          [
            "dao",
            "getProgramAttributeType"
          ],
          [
            "dao",
            "getProgramAttributeTypeByUuid"
          ],
          [
            "dao",
            "saveProgramAttributeType"
          ],
          [
            "dao",
            "purgeProgramAttributeType"
          ],
          [
            "dao",
            "getPatientProgramAttributeByUuid"
          ],
          [
            "dao",
            "getPatientProgramAttributeByAttributeName"
          ],
          [
            "dao",
            "getPatientProgramByAttributeNameAndValue"
          ]
        ],
        "annotations": [
          "see",
          "Transactional",
          "see",
          "Override",
          "see",
          "Override",
          "see",
          "Override",
          "Transactional",
          "see",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "see",
          "Override",
          "see",
          "Override",
          "see",
          "Override",
          "see",
          "Override",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "see",
          "Override",
          "see",
          "Override",
          "see",
          "Override",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "see",
          "Override",
          "see",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "Override",
          "Override",
          "Override",
          "Override",
          "Override",
          "Override",
          "Override",
          "Override"
        ],
        "extends": "BaseOpenmrsService",
        "implements": [
          "ProgramWorkflowService"
        ],
        "lines_of_code": 639,
        "comment_lines": 166,
        "blank_lines": 72
      }
    },
    "DatatypeServiceImpl": {
      "file_path": "/Users/shashivelur/Projects/openmrs-core/api/src/main/java/org/openmrs/api/impl/DatatypeServiceImpl.java",
      "class_name": "DatatypeServiceImpl",
      "type": "implementation",
      "metrics": {
        "halstead": {
          "vocabulary": 205,
          "length": 1479,
          "volume": 11357.951067168555,
          "difficulty": 65.74107142857143,
          "effort": 746683.872388947,
          "time": 41482.4373549415,
          "bugs": 3.785983689056185
        },
        "cyclomatic_complexity": 57,
        "lcom": 0,
        "cbo": 8,
        "fan_in": 0,
        "fan_out": 12,
        "lines_of_code": 237,
        "effective_lines": 159,
        "comment_ratio": 0.22362869198312235,
        "method_count": 13,
        "field_count": 4,
        "import_count": 16
      },
      "elements": {
        "imports": [
          "java.lang.reflect.ParameterizedType",
          "java.lang.reflect.Type",
          "java.util.ArrayList",
          "java.util.LinkedHashMap",
          "java.util.LinkedHashSet",
          "java.util.List",
          "java.util.Map",
          "java.util.Set",
          "org.openmrs.api.DatatypeService",
          "org.openmrs.api.context.Context",
          "org.openmrs.api.db.ClobDatatypeStorage",
          "org.openmrs.api.db.DatatypeDAO",
          "org.openmrs.customdatatype.CustomDatatype",
          "org.openmrs.customdatatype.CustomDatatypeException",
          "org.openmrs.customdatatype.CustomDatatypeHandler",
          "org.springframework.transaction.annotation.Transactional"
        ],
        "class_name": "DatatypeServiceImpl",
        "methods": [
          "setDao",
          "getAllDatatypeClasses",
          "getAllHandlerClasses",
          "populateBeanListsFromContext",
          "getDatatype",
          "getHandlerClasses",
          "datatypeClassHandled",
          "getHandler",
          "prioritizeHandlers",
          "getClobDatatypeStorage",
          "getClobDatatypeStorageByUuid",
          "saveClobDatatypeStorage",
          "deleteClobDatatypeStorage"
        ],
        "fields": [
          "datatypeClasses",
          "handlerClasses",
          "prioritizedHandlerClasses",
          "dao"
        ],
        "method_calls": [
          [
            "Context",
            "getRegisteredComponents"
          ],
          [
            "datatypeClasses",
            "add"
          ],
          [
            "dt",
            "getClass"
          ],
          [
            "Context",
            "getRegisteredComponents"
          ],
          [
            "handlerClasses",
            "add"
          ],
          [
            "h",
            "getClass"
          ],
          [
            "clazz",
            "newInstance"
          ],
          [
            "dt",
            "setConfiguration"
          ],
          [
            "ret",
            "add"
          ],
          [
            "pt",
            "getActualTypeArguments"
          ],
          [
            "class",
            "isAssignableFrom"
          ],
          [
            "pt",
            "getRawType"
          ],
          [
            "prioritizedHandlerClasses",
            "get"
          ],
          [
            "datatype",
            "getClass"
          ],
          [
            "clazz",
            "newInstance"
          ],
          [
            "ret",
            "setHandlerConfiguration"
          ],
          [
            "handlerClasses",
            "isEmpty"
          ],
          [
            "prioritizedHandlerClasses",
            "put"
          ],
          [
            "prioritizedHandlerClasses",
            "put"
          ],
          [
            "handlerClasses",
            "get"
          ],
          [
            "dao",
            "getClobDatatypeStorage"
          ],
          [
            "dao",
            "getClobDatatypeStorageByUuid"
          ],
          [
            "dao",
            "saveClobDatatypeStorage"
          ],
          [
            "dao",
            "deleteClobDatatypeStorage"
          ]
        ],
        "annotations": [
          "link",
          "since",
          "Transactional",
          "param",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "param",
          "return",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "see",
          "Override"
        ],
        "extends": "BaseOpenmrsService",
        "implements": [
          "DatatypeService"
        ],
        "lines_of_code": 237,
        "comment_lines": 53,
        "blank_lines": 25
      }
    },
    "TimerSchedulerServiceImpl": {
      "file_path": "/Users/shashivelur/Projects/openmrs-core/api/src/main/java/org/openmrs/scheduler/timer/TimerSchedulerServiceImpl.java",
      "class_name": "TimerSchedulerServiceImpl",
      "type": "implementation",
      "metrics": {
        "halstead": {
          "vocabulary": 505,
          "length": 3323,
          "volume": 29841.00381649492,
          "difficulty": 69.67274678111588,
          "effort": 2079104.702600963,
          "time": 115505.81681116461,
          "bugs": 9.947001272164973
        },
        "cyclomatic_complexity": 67,
        "lcom": 0,
        "cbo": 11,
        "fan_in": 0,
        "fan_out": 19,
        "lines_of_code": 553,
        "effective_lines": 314,
        "comment_ratio": 0.30198915009041594,
        "method_count": 25,
        "field_count": 5,
        "import_count": 27
      },
      "elements": {
        "imports": [
          "java.util.ArrayList",
          "java.util.Collection",
          "java.util.Date",
          "java.util.HashMap",
          "java.util.HashSet",
          "java.util.List",
          "java.util.Map",
          "java.util.Set",
          "java.util.SortedMap",
          "java.util.Timer",
          "java.util.TreeMap",
          "java.util.WeakHashMap",
          "org.openmrs.api.APIException",
          "org.openmrs.api.impl.BaseOpenmrsService",
          "org.openmrs.scheduler.SchedulerConstants",
          "org.openmrs.scheduler.SchedulerException",
          "org.openmrs.scheduler.SchedulerService",
          "org.openmrs.scheduler.SchedulerUtil",
          "org.openmrs.scheduler.Task",
          "org.openmrs.scheduler.TaskDefinition",
          "org.openmrs.scheduler.TaskFactory",
          "org.openmrs.scheduler.db.SchedulerDAO",
          "org.openmrs.util.OpenmrsMemento",
          "org.slf4j.Logger",
          "org.slf4j.LoggerFactory",
          "org.springframework.orm.ObjectRetrievalFailureException",
          "org.springframework.transaction.annotation.Transactional"
        ],
        "class_name": "TimerSchedulerServiceImpl",
        "methods": [
          "getSchedulerDAO",
          "setSchedulerDAO",
          "onStartup",
          "setScheduledTasks",
          "onShutdown",
          "cancelAllTimers",
          "shutdownAllTasks",
          "getTimer",
          "scheduleTask",
          "shutdownTask",
          "rescheduleAllTasks",
          "rescheduleTask",
          "registerTask",
          "getScheduledTasks",
          "getRegisteredTasks",
          "getTask",
          "getTaskByName",
          "saveTaskDefinition",
          "deleteTask",
          "getSystemVariables",
          "saveToMemento",
          "restoreFromMemento",
          "getStatus",
          "scheduleIfNotRunning",
          "getTaskByUuid"
        ],
        "fields": [
          "log",
          "registeredTasks",
          "scheduledTasks",
          "taskDefinitionTimerMap",
          "schedulerDAO"
        ],
        "method_calls": [
          [
            "LoggerFactory",
            "getLogger"
          ],
          [
            "log",
            "debug"
          ],
          [
            "taskDefinition",
            "getStartOnStartup"
          ],
          [
            "log",
            "error"
          ],
          [
            "taskDefinition",
            "getTaskClass"
          ],
          [
            "log",
            "debug"
          ],
          [
            "log",
            "error"
          ],
          [
            "taskDefinitionTimerMap",
            "values"
          ],
          [
            "timer",
            "cancel"
          ],
          [
            "log",
            "error"
          ],
          [
            "task",
            "getTaskClass"
          ],
          [
            "log",
            "error"
          ],
          [
            "task",
            "getTaskClass"
          ],
          [
            "taskDefinitionTimerMap",
            "containsKey"
          ],
          [
            "taskDefinitionTimerMap",
            "get"
          ],
          [
            "taskDefinitionTimerMap",
            "put"
          ],
          [
            "scheduledTasks",
            "get"
          ],
          [
            "taskDefinition",
            "getId"
          ],
          [
            "log",
            "info"
          ],
          [
            "schedulerTask",
            "shutdown"
          ],
          [
            "TaskFactory",
            "getInstance"
          ],
          [
            "taskDefinition",
            "setTaskInstance"
          ],
          [
            "taskDefinition",
            "getRepeatInterval"
          ],
          [
            "taskDefinition",
            "getRepeatInterval"
          ],
          [
            "taskDefinition",
            "getStartTime"
          ],
          [
            "SchedulerUtil",
            "getNextExecution"
          ],
          [
            "log",
            "info"
          ],
          [
            "log",
            "info"
          ],
          [
            "log",
            "info"
          ],
          [
            "log",
            "debug"
          ],
          [
            "taskDefinition",
            "getId"
          ],
          [
            "scheduledTasks",
            "put"
          ],
          [
            "taskDefinition",
            "getId"
          ],
          [
            "taskDefinition",
            "setStarted"
          ],
          [
            "log",
            "error"
          ],
          [
            "taskDefinition",
            "getName"
          ],
          [
            "scheduledTasks",
            "remove"
          ],
          [
            "taskDefinition",
            "getId"
          ],
          [
            "schedulerTask",
            "shutdown"
          ],
          [
            "taskDefinition",
            "setStarted"
          ],
          [
            "log",
            "error"
          ],
          [
            "task",
            "getName"
          ],
          [
            "registeredTasks",
            "add"
          ],
          [
            "scheduledTasks",
            "keySet"
          ],
          [
            "log",
            "debug"
          ],
          [
            "task",
            "getRepeatInterval"
          ],
          [
            "list",
            "add"
          ],
          [
            "log",
            "debug"
          ],
          [
            "log",
            "debug"
          ],
          [
            "log",
            "warn"
          ],
          [
            "task",
            "getId"
          ],
          [
            "task",
            "getStarted"
          ],
          [
            "systemVariables",
            "put"
          ],
          [
            "String",
            "valueOf"
          ],
          [
            "tasks",
            "add"
          ],
          [
            "task",
            "getId"
          ],
          [
            "log",
            "debug"
          ],
          [
            "task",
            "getName"
          ],
          [
            "memento",
            "saveErrorTasks"
          ],
          [
            "timerMemento",
            "getState"
          ],
          [
            "log",
            "debug"
          ],
          [
            "timerMemento",
            "addErrorTask"
          ],
          [
            "scheduledTasks",
            "get"
          ],
          [
            "scheduledTask",
            "scheduledExecutionTime"
          ],
          [
            "scheduledTask",
            "scheduledExecutionTime"
          ],
          [
            "taskDef",
            "getTaskInstance"
          ],
          [
            "log",
            "error"
          ],
          [
            "task",
            "isExecuting"
          ],
          [
            "log",
            "error"
          ]
        ],
        "annotations": [
          "Transactional",
          "see",
          "Override",
          "Override",
          "link",
          "link",
          "link",
          "link",
          "param",
          "link",
          "return",
          "link",
          "link",
          "param",
          "Override",
          "param",
          "see",
          "Override",
          "Override",
          "see",
          "Override",
          "param",
          "return",
          "Override",
          "return",
          "Override",
          "Transactional",
          "param",
          "Override",
          "Transactional",
          "param",
          "Override",
          "Transactional",
          "param",
          "Override",
          "param",
          "Override",
          "Override",
          "return",
          "Override",
          "Override",
          "SuppressWarnings",
          "see",
          "Override",
          "Override",
          "see",
          "Override",
          "Transactional"
        ],
        "extends": "BaseOpenmrsService",
        "implements": [
          "SchedulerService"
        ],
        "lines_of_code": 553,
        "comment_lines": 167,
        "blank_lines": 72
      }
    },
    "MessageSourceServiceImpl": {
      "file_path": "/Users/shashivelur/Projects/openmrs-core/api/src/main/java/org/openmrs/messagesource/impl/MessageSourceServiceImpl.java",
      "class_name": "MessageSourceServiceImpl",
      "type": "implementation",
      "metrics": {
        "halstead": {
          "vocabulary": 210,
          "length": 1243,
          "volume": 9588.80717845899,
          "difficulty": 49.25,
          "effort": 472248.75353910524,
          "time": 26236.041863283623,
          "bugs": 3.19626905948633
        },
        "cyclomatic_complexity": 7,
        "lcom": 0,
        "cbo": 4,
        "fan_in": 0,
        "fan_out": 7,
        "lines_of_code": 211,
        "effective_lines": 101,
        "comment_ratio": 0.38388625592417064,
        "method_count": 17,
        "field_count": 3,
        "import_count": 14
      },
      "elements": {
        "imports": [
          "java.util.Collection",
          "java.util.HashSet",
          "java.util.Locale",
          "java.util.Set",
          "org.apache.commons.lang3.StringUtils",
          "org.openmrs.api.context.Context",
          "org.openmrs.messagesource.MessageSourceService",
          "org.openmrs.messagesource.MutableMessageSource",
          "org.openmrs.messagesource.PresentationMessage",
          "org.slf4j.Logger",
          "org.slf4j.LoggerFactory",
          "org.springframework.context.MessageSource",
          "org.springframework.context.MessageSourceResolvable",
          "org.springframework.context.NoSuchMessageException"
        ],
        "class_name": "MessageSourceServiceImpl",
        "methods": [
          "getMessage",
          "getActiveMessageSource",
          "setActiveMessageSource",
          "getLocales",
          "getPresentations",
          "getMessage",
          "getMessage",
          "getMessage",
          "addPresentation",
          "removePresentation",
          "getMessageSources",
          "setMessageSources",
          "merge",
          "getPresentation",
          "getPresentationsInLocale",
          "getParentMessageSource",
          "setParentMessageSource"
        ],
        "fields": [
          "log",
          "availableMessageSources",
          "activeMessageSource"
        ],
        "method_calls": [
          [
            "LoggerFactory",
            "getLogger"
          ],
          [
            "Context",
            "getMessageSourceService"
          ],
          [
            "Context",
            "getLocale"
          ],
          [
            "log",
            "debug"
          ],
          [
            "availableMessageSources",
            "add"
          ],
          [
            "activeMessageSource",
            "getLocales"
          ],
          [
            "activeMessageSource",
            "getPresentations"
          ],
          [
            "resolvable",
            "getCodes"
          ],
          [
            "activeMessageSource",
            "getMessage"
          ],
          [
            "resolvable",
            "getCodes"
          ],
          [
            "resolvable",
            "getCodes"
          ],
          [
            "activeMessageSource",
            "getMessage"
          ],
          [
            "StringUtils",
            "isBlank"
          ],
          [
            "activeMessageSource",
            "getMessage"
          ],
          [
            "StringUtils",
            "isBlank"
          ],
          [
            "StringUtils",
            "isBlank"
          ],
          [
            "activeMessageSource",
            "getMessage"
          ],
          [
            "activeMessageSource",
            "addPresentation"
          ],
          [
            "activeMessageSource",
            "removePresentation"
          ],
          [
            "availableMessageSources",
            "addAll"
          ],
          [
            "activeMessageSource",
            "merge"
          ],
          [
            "activeMessageSource",
            "getPresentation"
          ],
          [
            "activeMessageSource",
            "getPresentationsInLocale"
          ],
          [
            "activeMessageSource",
            "getParentMessageSource"
          ],
          [
            "activeMessageSource",
            "setParentMessageSource"
          ]
        ],
        "annotations": [
          "see",
          "Override",
          "return",
          "Override",
          "param",
          "Override",
          "see",
          "Override",
          "see",
          "Override",
          "see",
          "Override",
          "see",
          "Override",
          "see",
          "Override",
          "see",
          "Override",
          "see",
          "Override",
          "return",
          "Override",
          "param",
          "Override",
          "see",
          "Override",
          "see",
          "Override",
          "see",
          "Override",
          "see",
          "Override",
          "see",
          "Override"
        ],
        "extends": "",
        "implements": [
          "MessageSourceService"
        ],
        "lines_of_code": 211,
        "comment_lines": 81,
        "blank_lines": 29
      }
    },
    "DefaultMessageSourceServiceImpl": {
      "file_path": "/Users/shashivelur/Projects/openmrs-core/api/src/main/java/org/openmrs/messagesource/impl/DefaultMessageSourceServiceImpl.java",
      "class_name": "DefaultMessageSourceServiceImpl",
      "type": "implementation",
      "metrics": {
        "halstead": {
          "vocabulary": 165,
          "length": 660,
          "volume": 4861.772661402239,
          "difficulty": 30.676258992805757,
          "effort": 149140.99732531758,
          "time": 8285.610962517643,
          "bugs": 1.6205908871340795
        },
        "cyclomatic_complexity": 3,
        "lcom": 0,
        "cbo": 5,
        "fan_in": 0,
        "fan_out": 3,
        "lines_of_code": 152,
        "effective_lines": 96,
        "comment_ratio": 0.14473684210526316,
        "method_count": 20,
        "field_count": 2,
        "import_count": 13
      },
      "elements": {
        "imports": [
          "java.io.InputStream",
          "java.util.Collection",
          "java.util.Locale",
          "java.util.Properties",
          "java.util.Set",
          "org.openmrs.messagesource.MessageSourceService",
          "org.openmrs.messagesource.MutableMessageSource",
          "org.openmrs.messagesource.PresentationMessage",
          "org.openmrs.util.OpenmrsClassLoader",
          "org.openmrs.util.OpenmrsUtil",
          "org.springframework.context.MessageSource",
          "org.springframework.context.MessageSourceResolvable",
          "org.springframework.context.NoSuchMessageException"
        ],
        "class_name": "DefaultMessageSourceServiceImpl",
        "methods": [
          "DefaultMessageSourceServiceImplHolder",
          "getInstance",
          "DefaultMessageSourceServiceImpl",
          "getMessage",
          "getMessage",
          "getMessage",
          "getLocales",
          "getPresentations",
          "getPresentationsInLocale",
          "addPresentation",
          "getPresentation",
          "removePresentation",
          "merge",
          "getMessage",
          "setParentMessageSource",
          "getParentMessageSource",
          "getActiveMessageSource",
          "setActiveMessageSource",
          "getMessageSources",
          "setMessageSources"
        ],
        "fields": [
          "props",
          "INSTANCE"
        ],
        "method_calls": [
          [
            "OpenmrsClassLoader",
            "getInstance"
          ],
          [
            "OpenmrsUtil",
            "loadProperties"
          ],
          [
            "props",
            "get"
          ]
        ],
        "annotations": [
          "link",
          "return",
          "Override",
          "Override",
          "Override",
          "Override",
          "Override",
          "Override",
          "Override",
          "Override",
          "Override",
          "Override",
          "Override",
          "Override",
          "Override",
          "Override",
          "Override",
          "Override",
          "Override"
        ],
        "extends": "",
        "implements": [
          "MessageSourceService"
        ],
        "lines_of_code": 152,
        "comment_lines": 22,
        "blank_lines": 34
      }
    },
    "MessageServiceImpl": {
      "file_path": "/Users/shashivelur/Projects/openmrs-core/api/src/main/java/org/openmrs/notification/impl/MessageServiceImpl.java",
      "class_name": "MessageServiceImpl",
      "type": "implementation",
      "metrics": {
        "halstead": {
          "vocabulary": 267,
          "length": 1892,
          "volume": 15250.836702752853,
          "difficulty": 63.54430379746835,
          "effort": 969103.8006053078,
          "time": 53839.10003362821,
          "bugs": 5.083612234250951
        },
        "cyclomatic_complexity": 10,
        "lcom": 0,
        "cbo": 11,
        "fan_in": 0,
        "fan_out": 11,
        "lines_of_code": 305,
        "effective_lines": 161,
        "comment_ratio": 0.3639344262295082,
        "method_count": 22,
        "field_count": 4,
        "import_count": 18
      },
      "elements": {
        "imports": [
          "java.util.Collection",
          "java.util.List",
          "java.util.ArrayList",
          "java.util.Map",
          "org.openmrs.Role",
          "org.openmrs.User",
          "org.openmrs.api.context.Context",
          "org.openmrs.api.db.TemplateDAO",
          "org.openmrs.notification.Message",
          "org.openmrs.notification.MessageException",
          "org.openmrs.notification.MessagePreparator",
          "org.openmrs.notification.MessageSender",
          "org.openmrs.notification.MessageService",
          "org.openmrs.notification.Template",
          "org.openmrs.util.OpenmrsConstants",
          "org.slf4j.Logger",
          "org.slf4j.LoggerFactory",
          "org.springframework.transaction.annotation.Transactional"
        ],
        "class_name": "MessageServiceImpl",
        "methods": [
          "setTemplateDAO",
          "MessageServiceImpl",
          "setMessagePreparator",
          "getMessagePreparator",
          "setMessageSender",
          "getMessageSender",
          "sendMessage",
          "createMessage",
          "createMessage",
          "createMessage",
          "createMessage",
          "sendMessage",
          "sendMessage",
          "sendMessage",
          "sendMessage",
          "sendMessage",
          "sendMessage",
          "prepareMessage",
          "prepareMessage",
          "getAllTemplates",
          "getTemplate",
          "getTemplatesByName"
        ],
        "fields": [
          "log",
          "templateDAO",
          "messageSender",
          "messagePreparator"
        ],
        "method_calls": [
          [
            "LoggerFactory",
            "getLogger"
          ],
          [
            "messageSender",
            "send"
          ],
          [
            "log",
            "error"
          ],
          [
            "e",
            "getMessage"
          ],
          [
            "Context",
            "getMessageService"
          ],
          [
            "Context",
            "getMessageService"
          ],
          [
            "Context",
            "getMessageService"
          ],
          [
            "message",
            "setRecipients"
          ],
          [
            "message",
            "setSender"
          ],
          [
            "message",
            "setContent"
          ],
          [
            "message",
            "setSubject"
          ],
          [
            "message",
            "setAttachment"
          ],
          [
            "message",
            "setAttachmentContentType"
          ],
          [
            "message",
            "setAttachmentFileName"
          ],
          [
            "Context",
            "getMessageService"
          ],
          [
            "log",
            "debug"
          ],
          [
            "Context",
            "getUserService"
          ],
          [
            "message",
            "addRecipient"
          ],
          [
            "user",
            "getUserProperty"
          ],
          [
            "Context",
            "getMessageService"
          ],
          [
            "log",
            "debug"
          ],
          [
            "user",
            "getUserProperty"
          ],
          [
            "message",
            "addRecipient"
          ],
          [
            "Context",
            "getMessageService"
          ],
          [
            "log",
            "debug"
          ],
          [
            "user",
            "getUserProperty"
          ],
          [
            "message",
            "addRecipient"
          ],
          [
            "Context",
            "getMessageService"
          ],
          [
            "log",
            "debug"
          ],
          [
            "Context",
            "getUserService"
          ],
          [
            "Context",
            "getMessageService"
          ],
          [
            "log",
            "debug"
          ],
          [
            "log",
            "debug"
          ],
          [
            "Context",
            "getUserService"
          ],
          [
            "roles",
            "add"
          ],
          [
            "Context",
            "getUserService"
          ],
          [
            "log",
            "debug"
          ],
          [
            "Context",
            "getMessageService"
          ],
          [
            "messagePreparator",
            "prepare"
          ],
          [
            "template",
            "setData"
          ],
          [
            "Context",
            "getMessageService"
          ],
          [
            "templateDAO",
            "getTemplates"
          ],
          [
            "templateDAO",
            "getTemplate"
          ],
          [
            "templateDAO",
            "getTemplatesByName"
          ]
        ],
        "annotations": [
          "Transactional",
          "param",
          "Override",
          "Override",
          "param",
          "Override",
          "Override",
          "param",
          "see",
          "Override",
          "param",
          "param",
          "param",
          "param",
          "Override",
          "param",
          "param",
          "param",
          "Override",
          "param",
          "param",
          "Override",
          "see",
          "Override",
          "Override",
          "param",
          "param",
          "Override",
          "param",
          "param",
          "Override",
          "Override",
          "Override",
          "Override",
          "param",
          "return",
          "Override",
          "param",
          "param",
          "return",
          "Override",
          "Transactional",
          "return",
          "Override",
          "Transactional",
          "param",
          "return",
          "Override",
          "Transactional",
          "param",
          "return",
          "Override",
          "Transactional"
        ],
        "extends": "",
        "implements": [
          "MessageService"
        ],
        "lines_of_code": 305,
        "comment_lines": 111,
        "blank_lines": 33
      }
    },
    "AlertServiceImpl": {
      "file_path": "/Users/shashivelur/Projects/openmrs-core/api/src/main/java/org/openmrs/notification/impl/AlertServiceImpl.java",
      "class_name": "AlertServiceImpl",
      "type": "implementation",
      "metrics": {
        "halstead": {
          "vocabulary": 252,
          "length": 1415,
          "volume": 11287.851091752382,
          "difficulty": 46.640271493212666,
          "effort": 526468.4394942881,
          "time": 29248.24663857156,
          "bugs": 3.7626170305841273
        },
        "cyclomatic_complexity": 24,
        "lcom": 0,
        "cbo": 12,
        "fan_in": 0,
        "fan_out": 11,
        "lines_of_code": 208,
        "effective_lines": 121,
        "comment_ratio": 0.2644230769230769,
        "method_count": 11,
        "field_count": 3,
        "import_count": 17
      },
      "elements": {
        "imports": [
          "java.io.Serializable",
          "java.util.Date",
          "java.util.List",
          "org.openmrs.Role",
          "org.openmrs.User",
          "org.openmrs.api.APIException",
          "org.openmrs.api.context.Context",
          "org.openmrs.api.context.Daemon",
          "org.openmrs.api.impl.BaseOpenmrsService",
          "org.openmrs.notification.Alert",
          "org.openmrs.notification.AlertRecipient",
          "org.openmrs.notification.AlertService",
          "org.openmrs.notification.db.AlertDAO",
          "org.openmrs.util.RoleConstants",
          "org.slf4j.Logger",
          "org.slf4j.LoggerFactory",
          "org.springframework.transaction.annotation.Transactional"
        ],
        "class_name": "AlertServiceImpl",
        "methods": [
          "AlertServiceImpl",
          "setAlertDAO",
          "saveAlert",
          "getAlert",
          "purgeAlert",
          "getAllActiveAlerts",
          "getAlertsByUser",
          "getAlerts",
          "getAllAlerts",
          "getAllAlerts",
          "notifySuperUsers"
        ],
        "fields": [
          "serialVersionUID",
          "log",
          "dao"
        ],
        "method_calls": [
          [
            "LoggerFactory",
            "getLogger"
          ],
          [
            "log",
            "debug"
          ],
          [
            "alert",
            "getCreator"
          ],
          [
            "alert",
            "setCreator"
          ],
          [
            "Context",
            "getAuthenticatedUser"
          ],
          [
            "alert",
            "getDateCreated"
          ],
          [
            "alert",
            "setDateCreated"
          ],
          [
            "alert",
            "getAlertId"
          ],
          [
            "alert",
            "setChangedBy"
          ],
          [
            "Context",
            "getAuthenticatedUser"
          ],
          [
            "alert",
            "setDateChanged"
          ],
          [
            "alert",
            "getRecipients"
          ],
          [
            "alert",
            "getRecipients"
          ],
          [
            "alert",
            "equals"
          ],
          [
            "recipient",
            "getAlert"
          ],
          [
            "recipient",
            "setAlert"
          ],
          [
            "dao",
            "saveAlert"
          ],
          [
            "dao",
            "getAlert"
          ],
          [
            "dao",
            "deleteAlert"
          ],
          [
            "log",
            "debug"
          ],
          [
            "Context",
            "getAlertService"
          ],
          [
            "log",
            "debug"
          ],
          [
            "Context",
            "isAuthenticated"
          ],
          [
            "Context",
            "getAuthenticatedUser"
          ],
          [
            "Context",
            "getAlertService"
          ],
          [
            "log",
            "debug"
          ],
          [
            "dao",
            "getAlerts"
          ],
          [
            "log",
            "debug"
          ],
          [
            "Context",
            "getAlertService"
          ],
          [
            "log",
            "debug"
          ],
          [
            "dao",
            "getAllAlerts"
          ],
          [
            "Context",
            "getMessageSourceService"
          ],
          [
            "Context",
            "getLocale"
          ],
          [
            "cause",
            "getStackTrace"
          ],
          [
            "stackTrace",
            "append"
          ],
          [
            "stackTrace",
            "append"
          ],
          [
            "stackTrace",
            "length"
          ],
          [
            "message",
            "substring"
          ],
          [
            "Math",
            "min"
          ],
          [
            "message",
            "length"
          ],
          [
            "Context",
            "getUserService"
          ],
          [
            "alert",
            "setSatisfiedByAny"
          ],
          [
            "alert",
            "getCreator"
          ],
          [
            "Context",
            "getUserService"
          ],
          [
            "Daemon",
            "getDaemonUserUuid"
          ],
          [
            "alert",
            "setCreator"
          ],
          [
            "Context",
            "getAlertService"
          ]
        ],
        "annotations": [
          "see",
          "Transactional",
          "see",
          "Override",
          "see",
          "Override",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override",
          "Transactional",
          "see",
          "Override"
        ],
        "extends": "BaseOpenmrsService",
        "implements": [
          "Serializable",
          "AlertService"
        ],
        "lines_of_code": 208,
        "comment_lines": 55,
        "blank_lines": 32
      }
    }
  },
  "summary": {
    "total_services": 60,
    "total_interfaces": 34,
    "total_implementations": 26,
    "average_complexity": 47.95,
    "average_coupling": 12.433333333333334,
    "average_lcom": 0.0,
    "average_halstead_volume": 30844.50441344507,
    "average_lines_of_code": 491.9166666666667,
    "highest_complexity": {
      "halstead": {
        "vocabulary": 962,
        "length": 11535,
        "volume": 114310.61672128743,
        "difficulty": 117.50869565217391,
        "effort": 13432491.470114067,
        "time": 746249.5261174482,
        "bugs": 38.10353890709581
      },
      "cyclomatic_complexity": 240,
      "lcom": 0,
      "cbo": 49,
      "fan_in": 0,
      "fan_out": 87,
      "lines_of_code": 1640,
      "effective_lines": 1085,
      "comment_ratio": 0.21646341463414634,
      "method_count": 82,
      "field_count": 3,
      "import_count": 63
    },
    "highest_coupling": {
      "halstead": {
        "vocabulary": 962,
        "length": 11535,
        "volume": 114310.61672128743,
        "difficulty": 117.50869565217391,
        "effort": 13432491.470114067,
        "time": 746249.5261174482,
        "bugs": 38.10353890709581
      },
      "cyclomatic_complexity": 240,
      "lcom": 0,
      "cbo": 49,
      "fan_in": 0,
      "fan_out": 87,
      "lines_of_code": 1640,
      "effective_lines": 1085,
      "comment_ratio": 0.21646341463414634,
      "method_count": 82,
      "field_count": 3,
      "import_count": 63
    },
    "most_complex_halstead": {
      "halstead": {
        "vocabulary": 890,
        "length": 15905,
        "volume": 155831.80656870405,
        "difficulty": 169.5256111757858,
        "effort": 26417482.249186385,
        "time": 1467637.902732577,
        "bugs": 51.94393552290135
      },
      "cyclomatic_complexity": 190,
      "lcom": 0,
      "cbo": 27,
      "fan_in": 0,
      "fan_out": 4,
      "lines_of_code": 2052,
      "effective_lines": 351,
      "comment_ratio": 0.7524366471734892,
      "method_count": 21,
      "field_count": 94,
      "import_count": 32
    }
  }
}