{
  "service_metrics": {
    "Slf4JLogService": {
      "class_name": "Slf4JLogService",
      "file_type": "implementation",
      "total_lines": 37,
      "code_lines": 30,
      "comment_lines": 4,
      "method_count": 2,
      "field_count": 1,
      "import_count": 4,
      "openmrs_import_count": 0,
      "service_dependencies": [],
      "dependency_count": 0,
      "cyclomatic_complexity": 3,
      "comment_ratio": 0.10810810810810811,
      "methods": [
        "getPriority",
        "getLog"
      ],
      "fields": [
        "loggers"
      ]
    },
    "AlertService": {
      "class_name": "AlertService",
      "file_type": "interface",
      "total_lines": 140,
      "code_lines": 126,
      "comment_lines": 24,
      "method_count": 0,
      "field_count": 8,
      "import_count": 7,
      "openmrs_import_count": 6,
      "service_dependencies": [
        "AlertService"
      ],
      "dependency_count": 1,
      "cyclomatic_complexity": 14,
      "comment_ratio": 0.17142857142857143,
      "methods": [],
      "fields": [
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException"
      ]
    },
    "MessageService": {
      "class_name": "MessageService",
      "file_type": "interface",
      "total_lines": 91,
      "code_lines": 57,
      "comment_lines": 16,
      "method_count": 0,
      "field_count": 15,
      "import_count": 5,
      "openmrs_import_count": 2,
      "service_dependencies": [],
      "dependency_count": 0,
      "cyclomatic_complexity": 4,
      "comment_ratio": 0.17582417582417584,
      "methods": [],
      "fields": [
        "MessageException",
        "MessageException",
        "MessageException",
        "MessageException",
        "MessageException",
        "MessageException",
        "MessageException",
        "MessageException",
        "MessageException",
        "MessageException",
        "MessageException",
        "MessageException",
        "MessageException",
        "MessageException",
        "MessageException"
      ]
    },
    "LogicService": {
      "class_name": "LogicService",
      "file_type": "interface",
      "total_lines": 367,
      "code_lines": 333,
      "comment_lines": 60,
      "method_count": 2,
      "field_count": 13,
      "import_count": 8,
      "openmrs_import_count": 5,
      "service_dependencies": [
        "PatientService",
        "LogicService"
      ],
      "dependency_count": 2,
      "cyclomatic_complexity": 44,
      "comment_ratio": 0.16348773841961853,
      "methods": [
        "addRule",
        "eval"
      ],
      "fields": [
        "LogicException",
        "LogicException",
        "LogicException",
        "LogicException",
        "LogicException",
        "LogicException",
        "LogicException",
        "LogicException",
        "LogicException",
        "LogicException",
        "LogicException",
        "LogicException",
        "LogicException"
      ]
    },
    "MessageSourceService": {
      "class_name": "MessageSourceService",
      "file_type": "interface",
      "total_lines": 53,
      "code_lines": 44,
      "comment_lines": 14,
      "method_count": 0,
      "field_count": 0,
      "import_count": 1,
      "openmrs_import_count": 0,
      "service_dependencies": [],
      "dependency_count": 0,
      "cyclomatic_complexity": 2,
      "comment_ratio": 0.2641509433962264,
      "methods": [],
      "fields": []
    },
    "SchedulerService": {
      "class_name": "SchedulerService",
      "file_type": "interface",
      "total_lines": 171,
      "code_lines": 148,
      "comment_lines": 40,
      "method_count": 4,
      "field_count": 4,
      "import_count": 6,
      "openmrs_import_count": 4,
      "service_dependencies": [],
      "dependency_count": 0,
      "cyclomatic_complexity": 5,
      "comment_ratio": 0.23391812865497075,
      "methods": [
        "shutdownTask",
        "scheduleTask",
        "rescheduleTask",
        "rescheduleAllTasks"
      ],
      "fields": [
        "SchedulerException",
        "SchedulerException",
        "SchedulerException",
        "SchedulerException"
      ]
    },
    "VisitService": {
      "class_name": "VisitService",
      "file_type": "interface",
      "total_lines": 397,
      "code_lines": 362,
      "comment_lines": 66,
      "method_count": 3,
      "field_count": 11,
      "import_count": 15,
      "openmrs_import_count": 11,
      "service_dependencies": [],
      "dependency_count": 0,
      "cyclomatic_complexity": 28,
      "comment_ratio": 0.16624685138539042,
      "methods": [
        "getAllVisits",
        "saveVisit",
        "endVisit"
      ],
      "fields": [
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException"
      ]
    },
    "DiagnosisService": {
      "class_name": "DiagnosisService",
      "file_type": "interface",
      "total_lines": 246,
      "code_lines": 219,
      "comment_lines": 42,
      "method_count": 0,
      "field_count": 0,
      "import_count": 10,
      "openmrs_import_count": 8,
      "service_dependencies": [],
      "dependency_count": 0,
      "cyclomatic_complexity": 15,
      "comment_ratio": 0.17073170731707318,
      "methods": [],
      "fields": []
    },
    "FormService": {
      "class_name": "FormService",
      "file_type": "interface",
      "total_lines": 645,
      "code_lines": 590,
      "comment_lines": 106,
      "method_count": 2,
      "field_count": 46,
      "import_count": 12,
      "openmrs_import_count": 10,
      "service_dependencies": [],
      "dependency_count": 0,
      "cyclomatic_complexity": 41,
      "comment_ratio": 0.16434108527131783,
      "methods": [
        "saveForm",
        "getForm"
      ],
      "fields": [
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "FormsLockedException"
      ]
    },
    "SerializationService": {
      "class_name": "SerializationService",
      "file_type": "interface",
      "total_lines": 93,
      "code_lines": 84,
      "comment_lines": 14,
      "method_count": 1,
      "field_count": 1,
      "import_count": 5,
      "openmrs_import_count": 4,
      "service_dependencies": [],
      "dependency_count": 0,
      "cyclomatic_complexity": 11,
      "comment_ratio": 0.15053763440860216,
      "methods": [
        "serialize"
      ],
      "fields": [
        "SerializationException"
      ]
    },
    "AdministrationService": {
      "class_name": "AdministrationService",
      "file_type": "interface",
      "total_lines": 424,
      "code_lines": 385,
      "comment_lines": 68,
      "method_count": 0,
      "field_count": 2,
      "import_count": 16,
      "openmrs_import_count": 10,
      "service_dependencies": [
        "AdministrationService"
      ],
      "dependency_count": 1,
      "cyclomatic_complexity": 56,
      "comment_ratio": 0.16037735849056603,
      "methods": [],
      "fields": [
        "GP_SUFFIX_SERIALIZER_WHITELIST_TYPES",
        "GP_SERIALIZER_WHITELIST_HIERARCHY_TYPES_PREFIX"
      ]
    },
    "UserService": {
      "class_name": "UserService",
      "file_type": "interface",
      "total_lines": 609,
      "code_lines": 557,
      "comment_lines": 98,
      "method_count": 25,
      "field_count": 37,
      "import_count": 12,
      "openmrs_import_count": 9,
      "service_dependencies": [
        "UserService"
      ],
      "dependency_count": 1,
      "cyclomatic_complexity": 59,
      "comment_ratio": 0.16091954022988506,
      "methods": [
        "createUser",
        "changePassword",
        "getUser",
        "getUserByUuid",
        "hasDuplicateUsername",
        "getUsersByRole",
        "saveUser",
        "retireUser",
        "unretireUser",
        "purgeUser",
        "purgeUser",
        "saveRole",
        "purgeRole",
        "savePrivilege",
        "purgePrivilege",
        "getAllUsers",
        "changePassword",
        "changePassword",
        "changeHashedPassword",
        "changeQuestionAnswer",
        "isSecretAnswer",
        "getUsers",
        "getUsersByName",
        "getUsersByPerson",
        "getUsers"
      ],
      "fields": [
        "ADMIN_PASSWORD_LOCKED_PROPERTY",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "MessageException"
      ]
    },
    "PatientService": {
      "class_name": "PatientService",
      "file_type": "interface",
      "total_lines": 858,
      "code_lines": 800,
      "comment_lines": 112,
      "method_count": 40,
      "field_count": 35,
      "import_count": 18,
      "openmrs_import_count": 15,
      "service_dependencies": [
        "PatientService"
      ],
      "dependency_count": 1,
      "cyclomatic_complexity": 78,
      "comment_ratio": 0.13053613053613053,
      "methods": [
        "savePatient",
        "getPatient",
        "getPatientByUuid",
        "getPatientIdentifierByUuid",
        "getAllPatients",
        "getAllPatients",
        "getPatients",
        "voidPatient",
        "unvoidPatient",
        "purgePatient",
        "getPatientIdentifiers",
        "savePatientIdentifierType",
        "getAllPatientIdentifierTypes",
        "getAllPatientIdentifierTypes",
        "getPatientIdentifierTypes",
        "getPatientIdentifierType",
        "getPatientIdentifierTypeByUuid",
        "getPatientIdentifierTypeByName",
        "retirePatientIdentifierType",
        "unretirePatientIdentifierType",
        "purgePatientIdentifierType",
        "checkPatientIdentifiers",
        "getPatients",
        "getPatients",
        "getPatients",
        "getPatientByExample",
        "getDuplicatePatientsByAttributes",
        "mergePatients",
        "processDeath",
        "saveCauseOfDeathObs",
        "getPatientIdentifier",
        "voidPatientIdentifier",
        "savePatientIdentifier",
        "purgePatientIdentifier",
        "getAllergy",
        "getAllergyByUuid",
        "saveAllergy",
        "removeAllergy",
        "voidAllergy",
        "getPatients"
      ],
      "fields": [
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "PatientIdentifierException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "SerializationException",
        "SerializationException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "PatientIdentifierTypeLockedException"
      ]
    },
    "ProviderService": {
      "class_name": "ProviderService",
      "file_type": "interface",
      "total_lines": 364,
      "code_lines": 328,
      "comment_lines": 66,
      "method_count": 1,
      "field_count": 1,
      "import_count": 11,
      "openmrs_import_count": 8,
      "service_dependencies": [],
      "dependency_count": 0,
      "cyclomatic_complexity": 38,
      "comment_ratio": 0.1813186813186813,
      "methods": [
        "isProviderIdentifierUnique"
      ],
      "fields": [
        "APIException"
      ]
    },
    "CohortService": {
      "class_name": "CohortService",
      "file_type": "interface",
      "total_lines": 294,
      "code_lines": 268,
      "comment_lines": 48,
      "method_count": 11,
      "field_count": 13,
      "import_count": 9,
      "openmrs_import_count": 7,
      "service_dependencies": [],
      "dependency_count": 0,
      "cyclomatic_complexity": 20,
      "comment_ratio": 0.16326530612244897,
      "methods": [
        "saveCohort",
        "voidCohort",
        "getCohort",
        "getCohortByName",
        "getCohort",
        "getAllCohorts",
        "getAllCohorts",
        "getCohortsContainingPatient",
        "getCohortsContainingPatientId",
        "addPatientToCohort",
        "removePatientFromCohort"
      ],
      "fields": [
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException"
      ]
    },
    "OrderSetService": {
      "class_name": "OrderSetService",
      "file_type": "interface",
      "total_lines": 216,
      "code_lines": 193,
      "comment_lines": 38,
      "method_count": 0,
      "field_count": 0,
      "import_count": 8,
      "openmrs_import_count": 7,
      "service_dependencies": [],
      "dependency_count": 0,
      "cyclomatic_complexity": 8,
      "comment_ratio": 0.17592592592592593,
      "methods": [],
      "fields": []
    },
    "ObsService": {
      "class_name": "ObsService",
      "file_type": "interface",
      "total_lines": 541,
      "code_lines": 510,
      "comment_lines": 58,
      "method_count": 3,
      "field_count": 17,
      "import_count": 16,
      "openmrs_import_count": 13,
      "service_dependencies": [
        "ObsService"
      ],
      "dependency_count": 1,
      "cyclomatic_complexity": 44,
      "comment_ratio": 0.10720887245841035,
      "methods": [
        "getObs",
        "saveObs",
        "getComplexObs"
      ],
      "fields": [
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException"
      ]
    },
    "PersonService": {
      "class_name": "PersonService",
      "file_type": "interface",
      "total_lines": 845,
      "code_lines": 770,
      "comment_lines": 140,
      "method_count": 50,
      "field_count": 51,
      "import_count": 18,
      "openmrs_import_count": 14,
      "service_dependencies": [
        "PersonService"
      ],
      "dependency_count": 1,
      "cyclomatic_complexity": 55,
      "comment_ratio": 0.16568047337278108,
      "methods": [
        "getSimilarPeople",
        "getPeople",
        "getPeople",
        "savePersonAttributeType",
        "retirePersonAttributeType",
        "retireRelationshipType",
        "purgePersonAttributeType",
        "unretirePersonAttributeType",
        "voidPerson",
        "unvoidPerson",
        "getAllPersonAttributeTypes",
        "getAllPersonAttributeTypes",
        "getPersonAttributeTypes",
        "getPersonAttributeType",
        "getPersonAttribute",
        "getPersonAttributeTypeByName",
        "getRelationship",
        "getRelationshipByUuid",
        "getAllRelationships",
        "getAllRelationships",
        "getRelationshipsByPerson",
        "getRelationshipsByPerson",
        "getRelationships",
        "getRelationships",
        "getRelationships",
        "getAllRelationshipTypes",
        "getAllRelationshipTypes",
        "getRelationshipType",
        "getRelationshipTypeByUuid",
        "getRelationshipTypeByName",
        "getRelationshipTypes",
        "getRelationshipTypes",
        "saveRelationship",
        "purgeRelationship",
        "voidRelationship",
        "unvoidRelationship",
        "savePerson",
        "purgePerson",
        "getPersonByUuid",
        "getPersonAddressByUuid",
        "getPersonAttributeByUuid",
        "getPersonNameByUuid",
        "getPerson",
        "saveRelationshipType",
        "purgeRelationshipType",
        "unvoidPersonName",
        "parsePersonName",
        "getRelationshipMap",
        "savePersonMergeLog",
        "unvoidPersonAddress"
      ],
      "fields": [
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "SerializationException",
        "SerializationException",
        "SerializationException",
        "APIException",
        "PersonAttributeTypeLockedException"
      ]
    },
    "OpenmrsService": {
      "class_name": "OpenmrsService",
      "file_type": "interface",
      "total_lines": 36,
      "code_lines": 30,
      "comment_lines": 8,
      "method_count": 0,
      "field_count": 0,
      "import_count": 2,
      "openmrs_import_count": 2,
      "service_dependencies": [],
      "dependency_count": 0,
      "cyclomatic_complexity": 1,
      "comment_ratio": 0.2222222222222222,
      "methods": [],
      "fields": []
    },
    "OrderService": {
      "class_name": "OrderService",
      "file_type": "interface",
      "total_lines": 1101,
      "code_lines": 1017,
      "comment_lines": 162,
      "method_count": 8,
      "field_count": 19,
      "import_count": 23,
      "openmrs_import_count": 20,
      "service_dependencies": [],
      "dependency_count": 0,
      "cyclomatic_complexity": 175,
      "comment_ratio": 0.14713896457765668,
      "methods": [
        "saveOrder",
        "purgeOrder",
        "purgeOrder",
        "unvoidOrder",
        "saveOrderFrequency",
        "getOrderGroupByUuid",
        "saveOrderGroup",
        "saveOrderGroup"
      ],
      "fields": [
        "PARALLEL_ORDERS",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException"
      ]
    },
    "LocationService": {
      "class_name": "LocationService",
      "file_type": "interface",
      "total_lines": 503,
      "code_lines": 459,
      "comment_lines": 84,
      "method_count": 28,
      "field_count": 27,
      "import_count": 11,
      "openmrs_import_count": 9,
      "service_dependencies": [
        "LocationService"
      ],
      "dependency_count": 1,
      "cyclomatic_complexity": 48,
      "comment_ratio": 0.16699801192842942,
      "methods": [
        "saveLocation",
        "getLocation",
        "getLocation",
        "getDefaultLocation",
        "getLocationByUuid",
        "getLocationTagByUuid",
        "getAllLocations",
        "getAllLocations",
        "getLocations",
        "getLocations",
        "getLocationsByTag",
        "getLocationsHavingAllTags",
        "getLocationsHavingAnyTag",
        "retireLocation",
        "unretireLocation",
        "purgeLocation",
        "saveLocationTag",
        "getLocationTag",
        "getLocationTagByName",
        "getAllLocationTags",
        "getAllLocationTags",
        "getLocationTags",
        "retireLocationTag",
        "unretireLocationTag",
        "purgeLocationTag",
        "getPossibleAddressValues",
        "getAddressTemplate",
        "saveAddressTemplate"
      ],
      "fields": [
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException"
      ]
    },
    "DatatypeService": {
      "class_name": "DatatypeService",
      "file_type": "interface",
      "total_lines": 95,
      "code_lines": 81,
      "comment_lines": 22,
      "method_count": 0,
      "field_count": 0,
      "import_count": 6,
      "openmrs_import_count": 4,
      "service_dependencies": [],
      "dependency_count": 0,
      "cyclomatic_complexity": 17,
      "comment_ratio": 0.23157894736842105,
      "methods": [],
      "fields": []
    },
    "EncounterService": {
      "class_name": "EncounterService",
      "file_type": "interface",
      "total_lines": 730,
      "code_lines": 674,
      "comment_lines": 106,
      "method_count": 33,
      "field_count": 29,
      "import_count": 20,
      "openmrs_import_count": 16,
      "service_dependencies": [],
      "dependency_count": 0,
      "cyclomatic_complexity": 88,
      "comment_ratio": 0.14520547945205478,
      "methods": [
        "saveEncounter",
        "getEncounter",
        "getEncounterByUuid",
        "getEncountersByPatientId",
        "getEncountersByPatientIdentifier",
        "unvoidEncounter",
        "purgeEncounter",
        "purgeEncounter",
        "saveEncounterType",
        "getEncounterType",
        "getEncounterTypeByUuid",
        "getEncounterType",
        "getAllEncounterTypes",
        "getAllEncounterTypes",
        "findEncounterTypes",
        "retireEncounterType",
        "unretireEncounterType",
        "purgeEncounterType",
        "getEncountersByPatient",
        "getEncountersByPatient",
        "getEncounters",
        "getEncounters",
        "getActiveEncounterVisitHandler",
        "saveEncounterRole",
        "getEncounterRole",
        "purgeEncounterRole",
        "getEncounterRoleByUuid",
        "retireEncounterRole",
        "unretireEncounterRole",
        "getEncountersNotAssignedToAnyVisit",
        "getEncountersByVisitsAndPatient",
        "getEncountersByVisitsAndPatientCount",
        "checkIfEncounterTypesAreLocked"
      ],
      "fields": [
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "EncounterTypeLockedException"
      ]
    },
    "MedicationDispenseService": {
      "class_name": "MedicationDispenseService",
      "file_type": "interface",
      "total_lines": 82,
      "code_lines": 71,
      "comment_lines": 18,
      "method_count": 0,
      "field_count": 0,
      "import_count": 5,
      "openmrs_import_count": 4,
      "service_dependencies": [],
      "dependency_count": 0,
      "cyclomatic_complexity": 6,
      "comment_ratio": 0.21951219512195122,
      "methods": [],
      "fields": []
    },
    "ConditionService": {
      "class_name": "ConditionService",
      "file_type": "interface",
      "total_lines": 120,
      "code_lines": 107,
      "comment_lines": 22,
      "method_count": 0,
      "field_count": 0,
      "import_count": 6,
      "openmrs_import_count": 5,
      "service_dependencies": [],
      "dependency_count": 0,
      "cyclomatic_complexity": 10,
      "comment_ratio": 0.18333333333333332,
      "methods": [],
      "fields": []
    },
    "StorageService": {
      "class_name": "StorageService",
      "file_type": "interface",
      "total_lines": 176,
      "code_lines": 159,
      "comment_lines": 28,
      "method_count": 0,
      "field_count": 0,
      "import_count": 7,
      "openmrs_import_count": 2,
      "service_dependencies": [],
      "dependency_count": 0,
      "cyclomatic_complexity": 19,
      "comment_ratio": 0.1590909090909091,
      "methods": [],
      "fields": []
    },
    "ConceptService": {
      "class_name": "ConceptService",
      "file_type": "interface",
      "total_lines": 2052,
      "code_lines": 1895,
      "comment_lines": 308,
      "method_count": 21,
      "field_count": 94,
      "import_count": 32,
      "openmrs_import_count": 27,
      "service_dependencies": [
        "ConceptService"
      ],
      "dependency_count": 1,
      "cyclomatic_complexity": 190,
      "comment_ratio": 0.15009746588693956,
      "methods": [
        "saveConcept",
        "saveDrug",
        "purgeConcept",
        "saveConceptProposal",
        "getAllConceptSources",
        "getConceptByMapping",
        "getConceptByMapping",
        "getConceptsByMapping",
        "getConceptsByMapping",
        "getConceptIdsByMapping",
        "getConceptSourceByName",
        "convertBooleanConceptToCoded",
        "updateConceptIndex",
        "updateConceptIndexes",
        "saveConceptStopWord",
        "getConceptReferenceTerms",
        "getReferenceTermMappingsTo",
        "getDefaultConceptMapType",
        "getDrugsByMapping",
        "getDrugByMapping",
        "getConceptAttributeTypes"
      ],
      "fields": [
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "ConceptsLockedException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException"
      ]
    },
    "ProgramWorkflowService": {
      "class_name": "ProgramWorkflowService",
      "file_type": "interface",
      "total_lines": 566,
      "code_lines": 505,
      "comment_lines": 87,
      "method_count": 22,
      "field_count": 20,
      "import_count": 19,
      "openmrs_import_count": 14,
      "service_dependencies": [
        "ProgramWorkflowService"
      ],
      "dependency_count": 1,
      "cyclomatic_complexity": 47,
      "comment_ratio": 0.15371024734982333,
      "methods": [
        "saveProgram",
        "getProgram",
        "getProgramByName",
        "getAllPrograms",
        "getAllPrograms",
        "getPrograms",
        "purgeProgram",
        "purgeProgram",
        "retireProgram",
        "unretireProgram",
        "savePatientProgram",
        "getPatientProgram",
        "getPatientPrograms",
        "purgePatientProgram",
        "purgePatientProgram",
        "voidPatientProgram",
        "unvoidPatientProgram",
        "saveConceptStateConversion",
        "getConceptStateConversion",
        "getAllConceptStateConversions",
        "purgeConceptStateConversion",
        "purgeConceptStateConversion"
      ],
      "fields": [
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException"
      ]
    },
    "HL7Service": {
      "class_name": "HL7Service",
      "file_type": "interface",
      "total_lines": 522,
      "code_lines": 470,
      "comment_lines": 96,
      "method_count": 10,
      "field_count": 41,
      "import_count": 16,
      "openmrs_import_count": 7,
      "service_dependencies": [],
      "dependency_count": 0,
      "cyclomatic_complexity": 34,
      "comment_ratio": 0.1839080459770115,
      "methods": [
        "saveHL7Source",
        "purgeHL7Source",
        "saveHL7InQueue",
        "saveHL7InArchive",
        "getHL7InArchiveByUuid",
        "saveHL7InError",
        "processHL7InQueue",
        "parseHL7String",
        "processHL7Message",
        "migrateHl7InArchivesToFileSystem"
      ],
      "fields": [
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "APIException",
        "HL7Exception",
        "HL7Exception",
        "HL7Exception",
        "HL7Exception",
        "HL7Exception",
        "HL7Exception",
        "HL7Exception",
        "HL7Exception",
        "APIException",
        "HL7Exception",
        "HL7Exception",
        "APIException",
        "APIException",
        "APIException"
      ]
    },
    "HL7ServiceImpl": {
      "class_name": "HL7ServiceImpl",
      "file_type": "implementation",
      "total_lines": 1187,
      "code_lines": 980,
      "comment_lines": 181,
      "method_count": 54,
      "field_count": 4,
      "import_count": 64,
      "openmrs_import_count": 27,
      "service_dependencies": [
        "AdministrationService",
        "PatientService",
        "HL7Service",
        "PersonService",
        "LocationService",
        "UserService"
      ],
      "dependency_count": 6,
      "cyclomatic_complexity": 174,
      "comment_ratio": 0.15248525695029486,
      "methods": [
        "setHL7DAO",
        "setParser",
        "setRouter",
        "saveHL7Source",
        "purgeHL7Source",
        "retireHL7Source",
        "getHL7Source",
        "getAllHL7Sources",
        "getHL7SourceByName",
        "getAllHL7InQueues",
        "getHL7InQueueBatch",
        "getHL7InErrorBatch",
        "getHL7InArchiveBatch",
        "countHL7InQueue",
        "countHL7InError",
        "countHL7InArchive",
        "purgeHL7InQueue",
        "saveHL7InQueue",
        "getHL7InQueue",
        "getHL7InQueueByUuid",
        "getNextHL7InQueue",
        "getHL7InArchiveByState",
        "getHL7InQueueByState",
        "getAllHL7InArchives",
        "purgeHL7InArchive",
        "saveHL7InArchive",
        "getHL7InArchive",
        "getHL7InArchivesToMigrate",
        "getAllHL7InErrors",
        "purgeHL7InError",
        "saveHL7InError",
        "getHL7InError",
        "getHL7InErrorByUuid",
        "getFindingUserErrorMessage",
        "resolveUserId",
        "resolvePersonId",
        "resolveLocationId",
        "resolvePatientId",
        "resolvePersonFromIdentifiers",
        "garbageCollect",
        "processHL7InQueue",
        "setFatalError",
        "parseHL7String",
        "getHL7InArchiveByUuid",
        "processHL7Message",
        "setHL7Handlers",
        "createPersonFromNK1",
        "getUuidFromIdentifiers",
        "loadHL7InArchiveData",
        "loadHL7InArchiveData",
        "migrateHl7InArchivesToFileSystem",
        "migrateHL7InArchive",
        "writeHL7InArchiveToFileSystem",
        "getHl7QueueItemByUuid"
      ],
      "fields": [
        "log",
        "dao",
        "parser",
        "router"
      ]
    },
    "PatientServiceImpl": {
      "class_name": "PatientServiceImpl",
      "file_type": "implementation",
      "total_lines": 1640,
      "code_lines": 1353,
      "comment_lines": 213,
      "method_count": 82,
      "field_count": 3,
      "import_count": 63,
      "openmrs_import_count": 48,
      "service_dependencies": [
        "AdministrationService",
        "PatientService",
        "MessageSourceService",
        "ProgramWorkflowService",
        "ConceptService",
        "PersonService",
        "LocationService",
        "OrderService",
        "VisitService",
        "EncounterService",
        "UserService",
        "ObsService"
      ],
      "dependency_count": 12,
      "cyclomatic_complexity": 240,
      "comment_ratio": 0.1298780487804878,
      "methods": [
        "setPatientDAO",
        "onShutdown",
        "savePatient",
        "requireAppropriatePatientModificationPrivilege",
        "setPreferredPatientIdentifier",
        "setPreferredPatientName",
        "setPreferredPatientAddress",
        "getPatient",
        "getPatientOrPromotePerson",
        "getAllPatients",
        "getAllPatients",
        "getPatients",
        "checkPatientIdentifiers",
        "checkForMissingRequiredIdentifiers",
        "voidPatient",
        "unvoidPatient",
        "purgePatient",
        "getPatientIdentifiers",
        "savePatientIdentifierType",
        "getAllPatientIdentifierTypes",
        "getAllPatientIdentifierTypes",
        "getPatientIdentifierTypes",
        "getPatientIdentifierType",
        "getPatientIdentifierTypeByName",
        "retirePatientIdentifierType",
        "unretirePatientIdentifierType",
        "purgePatientIdentifierType",
        "getPatients",
        "getPatientByExample",
        "getDuplicatePatientsByAttributes",
        "relationshipHash",
        "mergePatients",
        "requireNoActiveOrderOfSameType",
        "mergeProgramEnrolments",
        "mergeVisits",
        "mergeEncounters",
        "mergeRelationships",
        "mergeObservationsNotContainedInEncounters",
        "mergeIdentifiers",
        "mergeDateOfDeath",
        "mergeDateOfBirth",
        "mergePersonAttributes",
        "mergeGenderInformation",
        "mergeNames",
        "constructTemporaryName",
        "mergeAddresses",
        "changeUserAssociations",
        "exitFromCare",
        "saveReasonForExitObs",
        "processDeath",
        "saveCauseOfDeathObs",
        "getPatientByUuid",
        "getPatientIdentifierByUuid",
        "getPatientIdentifierTypeByUuid",
        "getDefaultIdentifierValidator",
        "getIdentifierValidator",
        "getIdentifierValidators",
        "setIdentifierValidators",
        "setStaticIdentifierValidators",
        "getAllIdentifierValidators",
        "getIdentifierValidator",
        "isIdentifierInUseByAnotherPatient",
        "getPatientIdentifier",
        "voidPatientIdentifier",
        "mergePatients",
        "savePatientIdentifier",
        "purgePatientIdentifier",
        "getAllergies",
        "setAllergies",
        "voidAllergy",
        "getAllergy",
        "getAllergyByUuid",
        "saveAllergy",
        "removeAllergy",
        "voidAllergy",
        "getCountOfPatients",
        "getCountOfPatients",
        "getPatients",
        "getPatients",
        "getPatients",
        "checkIfPatientIdentifierTypesAreLocked",
        "getPatientIdentifiersByPatientProgram"
      ],
      "fields": [
        "log",
        "dao",
        "identifierValidators"
      ]
    },
    "FormServiceImpl": {
      "class_name": "FormServiceImpl",
      "file_type": "implementation",
      "total_lines": 796,
      "code_lines": 678,
      "comment_lines": 129,
      "method_count": 55,
      "field_count": 3,
      "import_count": 36,
      "openmrs_import_count": 23,
      "service_dependencies": [
        "AdministrationService",
        "FormService",
        "ObsService"
      ],
      "dependency_count": 3,
      "cyclomatic_complexity": 71,
      "comment_ratio": 0.1620603015075377,
      "methods": [
        "FormServiceImpl",
        "setFormDAO",
        "getForm",
        "duplicateForm",
        "retireForm",
        "unretireForm",
        "getAllFieldTypes",
        "getAllFieldTypes",
        "getFieldType",
        "getField",
        "getFormField",
        "getFormField",
        "getFieldByUuid",
        "getFieldAnswerByUuid",
        "getFieldTypeByUuid",
        "getFieldTypeByName",
        "getFormByUuid",
        "getFormFieldByUuid",
        "getAllFields",
        "getAllFields",
        "getAllFormFields",
        "getAllForms",
        "getAllForms",
        "getFields",
        "getForm",
        "getForm",
        "getForms",
        "getForms",
        "getFormCount",
        "getPublishedForms",
        "purgeField",
        "purgeField",
        "purgeForm",
        "purgeForm",
        "purgeFormField",
        "retireField",
        "saveField",
        "saveForm",
        "saveFormField",
        "unretireField",
        "getFields",
        "getFieldsByConcept",
        "getFormsContainingConcept",
        "purgeFieldType",
        "saveFieldType",
        "mergeDuplicateFields",
        "fieldsAreSimilar",
        "getFormResource",
        "getFormResourceByUuid",
        "getFormResource",
        "saveFormResource",
        "purgeFormResource",
        "getFormResourcesForForm",
        "duplicateFormResources",
        "checkIfFormsAreLocked"
      ],
      "fields": [
        "dao",
        "formValidator",
        "formValidator"
      ]
    },
    "ProviderServiceImpl": {
      "class_name": "ProviderServiceImpl",
      "file_type": "implementation",
      "total_lines": 335,
      "code_lines": 295,
      "comment_lines": 68,
      "method_count": 32,
      "field_count": 1,
      "import_count": 16,
      "openmrs_import_count": 12,
      "service_dependencies": [
        "ProviderService",
        "AdministrationService"
      ],
      "dependency_count": 2,
      "cyclomatic_complexity": 4,
      "comment_ratio": 0.20298507462686566,
      "methods": [
        "setProviderDAO",
        "getAllProviders",
        "getAllProviders",
        "retireProvider",
        "unretireProvider",
        "purgeProvider",
        "getProvider",
        "saveProvider",
        "getProviderByUuid",
        "getProvidersByPerson",
        "getProvidersByPerson",
        "getCountOfProviders",
        "getCountOfProviders",
        "getProviders",
        "getProviders",
        "getAllProviderAttributeTypes",
        "getAllProviderAttributeTypes",
        "getProviderAttributeType",
        "getProviderAttributeTypeByUuid",
        "getProviderAttributeTypeByName",
        "getProviderAttribute",
        "getProviderAttributeByUuid",
        "saveProviderAttributeType",
        "retireProviderAttributeType",
        "unretireProviderAttributeType",
        "purgeProviderAttributeType",
        "isProviderIdentifierUnique",
        "getProviderByIdentifier",
        "getUnknownProvider",
        "getProviderRole",
        "getProviderRoleByUuid",
        "getProvidersByRoles"
      ],
      "fields": [
        "dao"
      ]
    },
    "BaseOpenmrsService": {
      "class_name": "BaseOpenmrsService",
      "file_type": "implementation",
      "total_lines": 40,
      "code_lines": 34,
      "comment_lines": 8,
      "method_count": 2,
      "field_count": 0,
      "import_count": 1,
      "openmrs_import_count": 1,
      "service_dependencies": [],
      "dependency_count": 0,
      "cyclomatic_complexity": 3,
      "comment_ratio": 0.2,
      "methods": [
        "onShutdown",
        "onStartup"
      ],
      "fields": []
    },
    "OrderServiceImpl": {
      "class_name": "OrderServiceImpl",
      "file_type": "implementation",
      "total_lines": 1291,
      "code_lines": 1140,
      "comment_lines": 173,
      "method_count": 104,
      "field_count": 4,
      "import_count": 60,
      "openmrs_import_count": 44,
      "service_dependencies": [
        "AdministrationService",
        "ConceptService",
        "OrderService"
      ],
      "dependency_count": 3,
      "cyclomatic_complexity": 146,
      "comment_ratio": 0.13400464756003097,
      "methods": [
        "OrderServiceImpl",
        "setOrderDAO",
        "saveOrder",
        "saveOrderGroup",
        "saveOrderGroup",
        "saveRetrospectiveOrder",
        "saveOrder",
        "failOnExistingOrder",
        "ensureDateActivatedIsSet",
        "ensureConceptIsSet",
        "ensureDrugOrderAutoExpirationDateIsSet",
        "ensureOrderTypeIsSet",
        "ensureCareSettingIsSet",
        "failOnOrderTypeMismatch",
        "areDrugOrdersOfSameOrderableAndOverlappingSchedule",
        "isDrugOrder",
        "aMomentBefore",
        "saveOrderInternal",
        "setProperty",
        "getOrderNumberGenerator",
        "discontinueExistingOrdersIfNecessary",
        "getActualType",
        "purgeOrder",
        "purgeOrder",
        "voidOrder",
        "unvoidOrder",
        "updateOrderFulfillerStatus",
        "updateOrderFulfillerStatus",
        "getOrder",
        "getOrders",
        "getOrders",
        "getAllOrdersByPatient",
        "getOrders",
        "getOrderByUuid",
        "getDiscontinuationOrder",
        "getRevisionOrder",
        "getNewOrderNumber",
        "getOrderByOrderNumber",
        "getOrderHistoryByConcept",
        "getNextOrderNumberSeedSequenceValue",
        "getOrderHistoryByOrderNumber",
        "getActiveOrders",
        "getActiveOrders",
        "getCareSetting",
        "getCareSettingByUuid",
        "getCareSettingByName",
        "getCareSettings",
        "getOrderTypeByName",
        "getOrderFrequency",
        "getOrderFrequencyByUuid",
        "getOrderFrequencies",
        "getOrderFrequencies",
        "discontinueOrder",
        "discontinueOrder",
        "isDiscontinueOrReviseOrder",
        "stopOrder",
        "saveOrderFrequency",
        "retireOrderFrequency",
        "unretireOrderFrequency",
        "purgeOrderFrequency",
        "getOrderFrequencyByConcept",
        "supportsPropertyName",
        "globalPropertyChanged",
        "globalPropertyDeleted",
        "setOrderNumberGenerator",
        "getOrderType",
        "getOrderTypeByUuid",
        "getOrderTypes",
        "saveOrderType",
        "purgeOrderType",
        "retireOrderType",
        "unretireOrderType",
        "getSubtypes",
        "getOrderTypeByConceptClass",
        "getOrderTypeByConcept",
        "getDrugRoutes",
        "getDrugDosingUnits",
        "getDrugDispensingUnits",
        "getDurationUnits",
        "getTestSpecimenSources",
        "getNonCodedDrugConcept",
        "getOrderGroupByUuid",
        "getOrderGroup",
        "getSetMembersOfConceptSetFromGP",
        "getOrderGroupsByPatient",
        "getOrderGroupsByEncounter",
        "getAllOrderGroupAttributeTypes",
        "getOrderGroupAttributeType",
        "getOrderGroupAttributeTypeByUuid",
        "saveOrderGroupAttributeType",
        "retireOrderGroupAttributeType",
        "unretireOrderGroupAttributeType",
        "purgeOrderGroupAttributeType",
        "getOrderGroupAttributeTypeByName",
        "getOrderGroupAttributeByUuid",
        "getAllOrderAttributeTypes",
        "getOrderAttributeTypeById",
        "getOrderAttributeTypeByUuid",
        "saveOrderAttributeType",
        "retireOrderAttributeType",
        "unretireOrderAttributeType",
        "purgeOrderAttributeType",
        "getOrderAttributeTypeByName",
        "getOrderAttributeByUuid"
      ],
      "fields": [
        "log",
        "ORDER_NUMBER_PREFIX",
        "dao",
        "orderNumberGenerator"
      ]
    },
    "LocationServiceImpl": {
      "class_name": "LocationServiceImpl",
      "file_type": "implementation",
      "total_lines": 512,
      "code_lines": 438,
      "comment_lines": 90,
      "method_count": 42,
      "field_count": 1,
      "import_count": 19,
      "openmrs_import_count": 12,
      "service_dependencies": [
        "AdministrationService",
        "LocationService"
      ],
      "dependency_count": 2,
      "cyclomatic_complexity": 32,
      "comment_ratio": 0.17578125,
      "methods": [
        "setLocationDAO",
        "saveLocation",
        "getLocation",
        "getLocation",
        "getDefaultLocation",
        "getDefaultLocation",
        "getDefaultLocationFromSting",
        "getLocationByUuid",
        "getLocationTagByUuid",
        "getAllLocations",
        "getAllLocations",
        "getLocations",
        "getLocationsByTag",
        "getLocationsHavingAllTags",
        "getLocationsHavingAnyTag",
        "retireLocation",
        "unretireLocation",
        "purgeLocation",
        "saveLocationTag",
        "getLocationTag",
        "getLocationTagByName",
        "getAllLocationTags",
        "getAllLocationTags",
        "getLocationTags",
        "retireLocationTag",
        "unretireLocationTag",
        "purgeLocationTag",
        "getCountOfLocations",
        "getLocations",
        "getRootLocations",
        "getPossibleAddressValues",
        "getAllLocationAttributeTypes",
        "getLocationAttributeType",
        "getLocationAttributeTypeByUuid",
        "saveLocationAttributeType",
        "retireLocationAttributeType",
        "unretireLocationAttributeType",
        "purgeLocationAttributeType",
        "getLocationAttributeByUuid",
        "getAddressTemplate",
        "saveAddressTemplate",
        "getLocationAttributeTypeByName"
      ],
      "fields": [
        "dao"
      ]
    },
    "ObsServiceImpl": {
      "class_name": "ObsServiceImpl",
      "file_type": "implementation",
      "total_lines": 677,
      "code_lines": 563,
      "comment_lines": 97,
      "method_count": 42,
      "field_count": 2,
      "import_count": 28,
      "openmrs_import_count": 22,
      "service_dependencies": [
        "ConceptService",
        "EncounterService",
        "PatientService",
        "ObsService"
      ],
      "dependency_count": 4,
      "cyclomatic_complexity": 66,
      "comment_ratio": 0.1432791728212703,
      "methods": [
        "ObsServiceImpl",
        "setObsDAO",
        "onShutdown",
        "saveObs",
        "setPersonFromEncounter",
        "voidExistingObs",
        "saveExistingObs",
        "updateStatusIfNecessary",
        "unsetVoidedAndCreationProperties",
        "saveObsNotDirty",
        "saveNewOrVoidedObs",
        "evictObsAndChildren",
        "ensureRequirePrivilege",
        "saveObsGroup",
        "handleExistingObsWithComplexConcept",
        "getObs",
        "voidObs",
        "unvoidObs",
        "purgeObs",
        "purgeObs",
        "getObservations",
        "getObservations",
        "getObservations",
        "getObservationCount",
        "getObservationCount",
        "getObservationCount",
        "getObservations",
        "getObservationsByPerson",
        "getObservationsByPersonAndConcept",
        "getObsByUuid",
        "getRevisionObs",
        "getComplexObs",
        "purgeComplexData",
        "getHandler",
        "getHandler",
        "setHandlers",
        "setStaticHandlers",
        "getHandlers",
        "registerHandler",
        "registerHandler",
        "getObservationCount",
        "removeHandler"
      ],
      "fields": [
        "dao",
        "handlers"
      ]
    },
    "MedicationDispenseServiceImpl": {
      "class_name": "MedicationDispenseServiceImpl",
      "file_type": "interface",
      "total_lines": 87,
      "code_lines": 71,
      "comment_lines": 6,
      "method_count": 9,
      "field_count": 1,
      "import_count": 11,
      "openmrs_import_count": 6,
      "service_dependencies": [],
      "dependency_count": 0,
      "cyclomatic_complexity": 3,
      "comment_ratio": 0.06896551724137931,
      "methods": [
        "setMedicationDispenseDAO",
        "getMedicationDispenseDAO",
        "getMedicationDispense",
        "getMedicationDispenseByUuid",
        "getMedicationDispenseByCriteria",
        "saveMedicationDispense",
        "voidMedicationDispense",
        "unvoidMedicationDispense",
        "purgeMedicationDispense"
      ],
      "fields": [
        "medicationDispenseDAO"
      ]
    },
    "PersonServiceImpl": {
      "class_name": "PersonServiceImpl",
      "file_type": "implementation",
      "total_lines": 1002,
      "code_lines": 849,
      "comment_lines": 146,
      "method_count": 71,
      "field_count": 2,
      "import_count": 32,
      "openmrs_import_count": 20,
      "service_dependencies": [
        "AdministrationService",
        "PersonService",
        "SerializationService",
        "MessageSourceService"
      ],
      "dependency_count": 4,
      "cyclomatic_complexity": 91,
      "comment_ratio": 0.14570858283433133,
      "methods": [
        "setPersonDAO",
        "getSimilarPeople",
        "getPeople",
        "getPeople",
        "getAllPersonAttributeTypes",
        "getAllPersonAttributeTypes",
        "getPersonAttributeTypeByName",
        "purgePersonAttributeType",
        "savePersonAttributeType",
        "retirePersonAttributeType",
        "getPersonAttributeTypes",
        "unretirePersonAttributeType",
        "getPersonAttributeType",
        "getPersonAttribute",
        "getRelationship",
        "getRelationshipType",
        "getRelationshipTypeByName",
        "purgePerson",
        "savePerson",
        "setPreferredPersonName",
        "setPreferredPersonAddress",
        "voidPerson",
        "unvoidPerson",
        "getPerson",
        "getAllRelationships",
        "getAllRelationships",
        "getRelationships",
        "getRelationships",
        "getRelationships",
        "getRelationshipsByPerson",
        "getRelationshipsByPerson",
        "purgeRelationship",
        "saveRelationship",
        "voidRelationship",
        "unvoidRelationship",
        "getAllRelationshipTypes",
        "getRelationshipTypes",
        "getRelationshipTypes",
        "purgeRelationshipType",
        "saveRelationshipType",
        "getPersonAttributeTypes",
        "getAttributeTypesFromGlobalProperties",
        "combineAttributes",
        "getGlobalProperties",
        "parsePersonName",
        "voidPersonName",
        "unvoidPersonName",
        "savePersonName",
        "getRelationshipMap",
        "getPersonAttributeTypeByUuid",
        "getPersonByUuid",
        "getPersonAddressByUuid",
        "getPersonAttributeByUuid",
        "getPersonName",
        "getPersonNameByUuid",
        "savePersonMergeLog",
        "getPersonMergeLogByUuid",
        "deserializeList",
        "deserialize",
        "getAllPersonMergeLogs",
        "getWinningPersonMergeLogs",
        "getLosingPersonMergeLog",
        "getRelationshipByUuid",
        "getRelationshipTypeByUuid",
        "getAllRelationshipTypes",
        "retireRelationshipType",
        "unretireRelationshipType",
        "voidPersonAddress",
        "unvoidPersonAddress",
        "savePersonAddress",
        "checkIfPersonAttributeTypesAreLocked"
      ],
      "fields": [
        "log",
        "dao"
      ]
    },
    "AdministrationServiceImpl": {
      "class_name": "AdministrationServiceImpl",
      "file_type": "interface",
      "total_lines": 986,
      "code_lines": 826,
      "comment_lines": 117,
      "method_count": 47,
      "field_count": 13,
      "import_count": 57,
      "openmrs_import_count": 30,
      "service_dependencies": [
        "AdministrationService",
        "ConceptService",
        "SerializationService",
        "MessageSourceService"
      ],
      "dependency_count": 4,
      "cyclomatic_complexity": 123,
      "comment_ratio": 0.11866125760649088,
      "methods": [
        "AdministrationServiceImpl",
        "setAdministrationDAO",
        "setEventListeners",
        "getSystemVariables",
        "getGlobalProperty",
        "canViewGlobalProperty",
        "canDeleteGlobalProperty",
        "canEditGlobalProperty",
        "filterGlobalPropertiesByViewPrivilege",
        "getGlobalProperty",
        "getGlobalPropertyObject",
        "setGlobalProperty",
        "updateGlobalProperty",
        "getAllGlobalProperties",
        "getGlobalPropertiesByPrefix",
        "getGlobalPropertiesBySuffix",
        "purgeGlobalProperty",
        "saveGlobalProperties",
        "saveGlobalProperty",
        "executeSQL",
        "addGlobalPropertyListener",
        "removeGlobalPropertyListener",
        "notifyGlobalPropertyChange",
        "notifyGlobalPropertyDelete",
        "getImplementationId",
        "setImplementationId",
        "checkImplementationIdValidity",
        "getAllowedLocales",
        "setGlobalLocaleList",
        "getPresentationLocales",
        "globalPropertyChanged",
        "globalPropertyDeleted",
        "supportsPropertyName",
        "getGlobalPropertyByUuid",
        "getGlobalPropertyValue",
        "getSystemInformation",
        "convertToMegaBytes",
        "purgeGlobalProperties",
        "getMaximumPropertyLength",
        "validate",
        "getSearchLocales",
        "getSearchLocales",
        "setImplementationIdHttpClient",
        "isDatabaseStringComparisonCaseSensitive",
        "updatePostgresSequence",
        "getSerializerWhitelistTypes",
        "getSerializerDefaultWhitelistHierarchyTypes"
      ],
      "fields": [
        "log",
        "dao",
        "eventListeners",
        "globalLocaleList",
        "implementationIdHttpClient",
        "systemVariables",
        "presentationLocales",
        "globalLocaleList",
        "serialVersionUID",
        "serialVersionUID",
        "serialVersionUID",
        "serialVersionUID",
        "serialVersionUID"
      ]
    },
    "CohortServiceImpl": {
      "class_name": "CohortServiceImpl",
      "file_type": "implementation",
      "total_lines": 283,
      "code_lines": 250,
      "comment_lines": 43,
      "method_count": 22,
      "field_count": 2,
      "import_count": 17,
      "openmrs_import_count": 11,
      "service_dependencies": [
        "CohortService"
      ],
      "dependency_count": 1,
      "cyclomatic_complexity": 14,
      "comment_ratio": 0.1519434628975265,
      "methods": [
        "setCohortDAO",
        "saveCohort",
        "getCohort",
        "voidCohort",
        "getCohortByUuid",
        "getCohortMembershipByUuid",
        "addPatientToCohort",
        "removePatientFromCohort",
        "getCohortsContainingPatient",
        "getCohortsContainingPatientId",
        "getCohorts",
        "getAllCohorts",
        "getAllCohorts",
        "getCohortByName",
        "getCohort",
        "purgeCohort",
        "purgeCohortMembership",
        "voidCohortMembership",
        "endCohortMembership",
        "notifyPatientVoided",
        "notifyPatientUnvoided",
        "getCohortMemberships"
      ],
      "fields": [
        "log",
        "dao"
      ]
    },
    "DiagnosisServiceImpl": {
      "class_name": "DiagnosisServiceImpl",
      "file_type": "interface",
      "total_lines": 260,
      "code_lines": 234,
      "comment_lines": 44,
      "method_count": 21,
      "field_count": 1,
      "import_count": 17,
      "openmrs_import_count": 12,
      "service_dependencies": [
        "DiagnosisService"
      ],
      "dependency_count": 1,
      "cyclomatic_complexity": 5,
      "comment_ratio": 0.16923076923076924,
      "methods": [
        "save",
        "voidDiagnosis",
        "getDiagnosisByUuid",
        "getDiagnoses",
        "getDiagnosesByEncounter",
        "getDiagnosesByVisit",
        "getPrimaryDiagnoses",
        "getUniqueDiagnoses",
        "getDiagnosis",
        "unvoidDiagnosis",
        "purgeDiagnosis",
        "getDiagnosisDAO",
        "setDiagnosisDAO",
        "getAllDiagnosisAttributeTypes",
        "getDiagnosisAttributeTypeById",
        "getDiagnosisAttributeTypeByUuid",
        "saveDiagnosisAttributeType",
        "retireDiagnosisAttributeType",
        "unretireDiagnosisAttributeType",
        "purgeDiagnosisAttributeType",
        "getDiagnosisAttributeByUuid"
      ],
      "fields": [
        "diagnosisDAO"
      ]
    },
    "ConditionServiceImpl": {
      "class_name": "ConditionServiceImpl",
      "file_type": "interface",
      "total_lines": 183,
      "code_lines": 157,
      "comment_lines": 26,
      "method_count": 11,
      "field_count": 1,
      "import_count": 12,
      "openmrs_import_count": 8,
      "service_dependencies": [],
      "dependency_count": 0,
      "cyclomatic_complexity": 14,
      "comment_ratio": 0.14207650273224043,
      "methods": [
        "setConditionDAO",
        "getConditionDAO",
        "getConditionByUuid",
        "getCondition",
        "getActiveConditions",
        "getAllConditions",
        "getConditionsByEncounter",
        "saveCondition",
        "voidCondition",
        "unvoidCondition",
        "purgeCondition"
      ],
      "fields": [
        "conditionDAO"
      ]
    },
    "UserServiceImpl": {
      "class_name": "UserServiceImpl",
      "file_type": "implementation",
      "total_lines": 822,
      "code_lines": 687,
      "comment_lines": 114,
      "method_count": 57,
      "field_count": 5,
      "import_count": 42,
      "openmrs_import_count": 24,
      "service_dependencies": [
        "AdministrationService",
        "MessageService",
        "UserService",
        "MessageSourceService"
      ],
      "dependency_count": 4,
      "cyclomatic_complexity": 79,
      "comment_ratio": 0.1386861313868613,
      "methods": [
        "UserServiceImpl",
        "setUserDAO",
        "getValidTime",
        "createUser",
        "getUser",
        "getUserByUsername",
        "hasDuplicateUsername",
        "getUsersByRole",
        "saveUser",
        "voidUser",
        "retireUser",
        "unvoidUser",
        "unretireUser",
        "getAllUsers",
        "getAllPrivileges",
        "getPrivilege",
        "purgePrivilege",
        "savePrivilege",
        "getAllRoles",
        "getRole",
        "purgeRole",
        "saveRole",
        "changePassword",
        "changeHashedPassword",
        "changeQuestionAnswer",
        "changeQuestionAnswer",
        "isSecretAnswer",
        "getUsersByName",
        "getUsersByPerson",
        "getUsers",
        "checkPrivileges",
        "checkSuperUserPrivilege",
        "setUserProperty",
        "removeUserProperty",
        "generateSystemId",
        "purgeUser",
        "purgeUser",
        "checkPrivileges",
        "getPrivilegeByUuid",
        "getRoleByUuid",
        "getUserByUuid",
        "getCountOfUsers",
        "getUsers",
        "saveUserProperty",
        "saveUserProperties",
        "changePassword",
        "changePassword",
        "updatePassword",
        "changePasswordUsingSecretAnswer",
        "getSecretQuestion",
        "getUserByUsernameOrEmail",
        "getUserByActivationKey",
        "setUserActivationKey",
        "copyHostURLGlobalPropertyToPasswordResetGlobalProperty",
        "getDefaultLocaleForUser",
        "changePasswordUsingActivationKey",
        "getLastLoginTime"
      ],
      "fields": [
        "log",
        "dao",
        "MAX_VALID_TIME",
        "MIN_VALID_TIME",
        "DEFAULT_VALID_TIME"
      ]
    },
    "EncounterServiceImpl": {
      "class_name": "EncounterServiceImpl",
      "file_type": "implementation",
      "total_lines": 1004,
      "code_lines": 817,
      "comment_lines": 178,
      "method_count": 57,
      "field_count": 1,
      "import_count": 41,
      "openmrs_import_count": 31,
      "service_dependencies": [
        "AdministrationService",
        "PatientService",
        "MessageSourceService",
        "DiagnosisService",
        "OrderService",
        "VisitService",
        "EncounterService",
        "ConditionService",
        "ObsService"
      ],
      "dependency_count": 9,
      "cyclomatic_complexity": 116,
      "comment_ratio": 0.17729083665338646,
      "methods": [
        "setEncounterDAO",
        "getEncountersByPatient",
        "saveEncounter",
        "failIfDeniedToEdit",
        "createVisitForNewEncounter",
        "requirePrivilege",
        "removeGivenObsAndTheirGroupMembersFromEncounter",
        "addGivenObsAndTheirGroupMembersToEncounter",
        "getEncounter",
        "getEncountersByPatient",
        "getEncountersByPatient",
        "getEncountersByPatientId",
        "getEncountersByPatientIdentifier",
        "getEncounters",
        "getEncounters",
        "voidEncounter",
        "unvoidEncounter",
        "purgeEncounter",
        "purgeEncounter",
        "saveEncounterType",
        "getEncounterType",
        "getEncounterType",
        "getAllEncounterTypes",
        "getAllEncounterTypes",
        "findEncounterTypes",
        "retireEncounterType",
        "unretireEncounterType",
        "purgeEncounterType",
        "getEncounterByUuid",
        "getEncounterTypeByUuid",
        "getAllEncounters",
        "getEncounters",
        "getEncounters",
        "getCountOfEncounters",
        "getEncountersByVisit",
        "getEncounterVisitHandlers",
        "getActiveEncounterVisitHandler",
        "saveEncounterRole",
        "getEncounterRole",
        "purgeEncounterRole",
        "getAllEncounterRoles",
        "getEncounterRoleByUuid",
        "getEncounterRoleByName",
        "retireEncounterRole",
        "unretireEncounterRole",
        "getEncountersNotAssignedToAnyVisit",
        "getEncountersByVisitsAndPatient",
        "getEncountersByVisitsAndPatientCount",
        "filterEncountersByViewPermissions",
        "canViewAllEncounterTypes",
        "canEditAllEncounterTypes",
        "canEditEncounter",
        "canViewEncounter",
        "userHasEncounterPrivilege",
        "checkIfEncounterTypesAreLocked",
        "getEncounterRolesByName",
        "transferEncounter"
      ],
      "fields": [
        "dao"
      ]
    },
    "OrderSetServiceImpl": {
      "class_name": "OrderSetServiceImpl",
      "file_type": "implementation",
      "total_lines": 215,
      "code_lines": 189,
      "comment_lines": 38,
      "method_count": 18,
      "field_count": 1,
      "import_count": 14,
      "openmrs_import_count": 9,
      "service_dependencies": [
        "OrderSetService"
      ],
      "dependency_count": 1,
      "cyclomatic_complexity": 14,
      "comment_ratio": 0.17674418604651163,
      "methods": [
        "setOrderSetDAO",
        "saveOrderSet",
        "retireOrderSet",
        "unretireOrderSet",
        "saveOrderSetInternal",
        "getOrderSets",
        "getOrderSet",
        "getOrderSetByUuid",
        "getOrderSetMemberByUuid",
        "getAllOrderSetAttributeTypes",
        "getOrderSetAttributeType",
        "getOrderSetAttributeTypeByUuid",
        "saveOrderSetAttributeType",
        "retireOrderSetAttributeType",
        "unretireOrderSetAttributeType",
        "purgeOrderSetAttributeType",
        "getOrderSetAttributeTypeByName",
        "getOrderSetAttributeByUuid"
      ],
      "fields": [
        "dao"
      ]
    },
    "VisitServiceImpl": {
      "class_name": "VisitServiceImpl",
      "file_type": "implementation",
      "total_lines": 421,
      "code_lines": 366,
      "comment_lines": 70,
      "method_count": 36,
      "field_count": 1,
      "import_count": 25,
      "openmrs_import_count": 16,
      "service_dependencies": [
        "VisitService",
        "EncounterService",
        "AdministrationService"
      ],
      "dependency_count": 3,
      "cyclomatic_complexity": 19,
      "comment_ratio": 0.166270783847981,
      "methods": [
        "setVisitDAO",
        "getVisitDAO",
        "getAllVisitTypes",
        "getAllVisitTypes",
        "getVisitType",
        "getVisitTypeByUuid",
        "getVisitTypes",
        "saveVisitType",
        "retireVisitType",
        "unretireVisitType",
        "purgeVisitType",
        "getAllVisits",
        "getVisit",
        "getVisitByUuid",
        "saveVisit",
        "endVisit",
        "voidVisit",
        "unvoidVisit",
        "purgeVisit",
        "getVisits",
        "getVisits",
        "getVisitsByPatient",
        "getActiveVisitsByPatient",
        "getVisitsByPatient",
        "getAllVisitAttributeTypes",
        "getVisitAttributeType",
        "getVisitAttributeTypeByUuid",
        "saveVisitAttributeType",
        "retireVisitAttributeType",
        "unretireVisitAttributeType",
        "purgeVisitAttributeType",
        "getVisitAttributeByUuid",
        "stopVisits",
        "getVisitTypesToStop",
        "getVisitTypeNamesFromGlobalPropertyValue",
        "getVisitTypesFromVisitTypeNames"
      ],
      "fields": [
        "dao"
      ]
    },
    "ConceptServiceImpl": {
      "class_name": "ConceptServiceImpl",
      "file_type": "implementation",
      "total_lines": 2156,
      "code_lines": 1874,
      "comment_lines": 357,
      "method_count": 169,
      "field_count": 7,
      "import_count": 65,
      "openmrs_import_count": 41,
      "service_dependencies": [
        "AdministrationService",
        "ConceptService",
        "ObsService",
        "MessageSourceService"
      ],
      "dependency_count": 4,
      "cyclomatic_complexity": 167,
      "comment_ratio": 0.16558441558441558,
      "methods": [
        "setConceptDAO",
        "saveConcept",
        "ensureConceptMapTypeIsSet",
        "makeVoidedNameSynonym",
        "makeLocaleNotPreferred",
        "ensurePreferredNameForLocale",
        "logConceptChangedData",
        "saveDrug",
        "purgeConcept",
        "retireConcept",
        "retireDrug",
        "unretireDrug",
        "purgeDrug",
        "getConcept",
        "getConceptByReference",
        "getConceptName",
        "getConceptAnswer",
        "getDrug",
        "getConceptNumeric",
        "getConceptComplex",
        "getAllConcepts",
        "getAllConcepts",
        "getConceptsByName",
        "getConceptByName",
        "getConcept",
        "getConcepts",
        "getDrug",
        "getAllDrugs",
        "getAllDrugs",
        "getDrugsByConcept",
        "getDrugs",
        "getConceptsByClass",
        "getAllConceptClasses",
        "getConceptClass",
        "getConceptClassByName",
        "getAllConceptClasses",
        "saveConceptClass",
        "purgeConceptClass",
        "purgeConceptNameTag",
        "getAllConceptDatatypes",
        "getAllConceptDatatypes",
        "getConceptDatatype",
        "getConceptDatatypeByName",
        "getConceptSetsByConcept",
        "getConceptsByConceptSet",
        "getSetsContainingConcept",
        "getConceptProposal",
        "getAllConceptProposals",
        "getConceptProposals",
        "getProposedConcepts",
        "saveConceptProposal",
        "purgeConceptProposal",
        "mapConceptProposalToConcept",
        "mapConceptProposalToConcept",
        "getConceptsByAnswer",
        "getPrevConcept",
        "getNextConcept",
        "checkIfLocked",
        "getConceptsWithDrugsInFormulary",
        "getMaxConceptId",
        "explodeConceptSetHelper",
        "getConceptNameTagByName",
        "getLocalesOfConceptNames",
        "getConceptSource",
        "getAllConceptSources",
        "purgeConceptSource",
        "retireConceptSource",
        "saveConceptSource",
        "saveConceptNameTag",
        "conceptIterator",
        "getConceptByUuid",
        "getConceptClassByUuid",
        "getConceptAnswerByUuid",
        "getConceptNameByUuid",
        "getConceptSetByUuid",
        "getConceptSourceByUuid",
        "getConceptDatatypeByUuid",
        "getConceptNumericByUuid",
        "getConceptProposalByUuid",
        "getDrugByUuid",
        "getDrugIngredientByUuid",
        "getConceptDescriptionByUuid",
        "getConceptNameTagByUuid",
        "getAllConceptNameTags",
        "getConceptNameTag",
        "getConceptByMapping",
        "getConceptByMapping",
        "getConceptsByMapping",
        "getConceptsByMapping",
        "getConceptIdsByMapping",
        "getFalseConcept",
        "getTrueConcept",
        "getUnknownConcept",
        "setStaticUnknownConcept",
        "setBooleanConcepts",
        "initializeLazyPropertiesForConcept",
        "getConceptSourceByName",
        "getConceptSourceByUniqueId",
        "getConceptSourceByHL7Code",
        "checkIfDatatypeCanBeChanged",
        "hasDatatypeChanged",
        "hasAnyObservation",
        "convertBooleanConceptToCoded",
        "hasAnyObservation",
        "hasNameChanged",
        "cloneConceptName",
        "findConceptAnswers",
        "getConceptStopWords",
        "saveConceptStopWord",
        "deleteConceptStopWord",
        "getAllConceptStopWords",
        "getConcepts",
        "updateConceptIndex",
        "updateConceptIndexes",
        "getCountOfConcepts",
        "getCountOfDrugs",
        "getDrugs",
        "getConcepts",
        "getDrugsByIngredient",
        "getConceptMappingsToSource",
        "getActiveConceptMapTypes",
        "getConceptMapTypes",
        "getConceptMapType",
        "getConceptMapTypeByUuid",
        "getConceptMapTypeByName",
        "saveConceptMapType",
        "retireConceptMapType",
        "unretireConceptMapType",
        "purgeConceptMapType",
        "getAllConceptReferenceTerms",
        "getConceptReferenceTerms",
        "getConceptReferenceTerm",
        "getConceptReferenceTermByUuid",
        "getConceptReferenceTermByName",
        "getConceptReferenceTermByCode",
        "getConceptReferenceTermByCode",
        "saveConceptReferenceTerm",
        "retireConceptReferenceTerm",
        "unretireConceptReferenceTerm",
        "purgeConceptReferenceTerm",
        "getConceptReferenceTerms",
        "getCountOfConceptReferenceTerms",
        "getReferenceTermMappingsTo",
        "getConceptsByName",
        "getDefaultConceptMapType",
        "isConceptNameDuplicate",
        "getDrugs",
        "getDrugsByMapping",
        "getDrugByMapping",
        "getOrderableConcepts",
        "getAllConceptAttributeTypes",
        "saveConceptAttributeType",
        "getConceptAttributeType",
        "getConceptAttributeTypeByUuid",
        "purgeConceptAttributeType",
        "getConceptAttributeTypes",
        "getConceptAttributeTypeByName",
        "retireConceptAttributeType",
        "unretireConceptAttributeType",
        "getConceptAttributeByUuid",
        "hasAnyConceptAttribute",
        "saveConceptReferenceRange",
        "getConceptReferenceRangesByConceptId",
        "getConceptReferenceRangeByUuid",
        "getConceptReferenceRange",
        "isValidUuidFormat",
        "evaluateStaticConstant",
        "getConceptClassesOfOrderTypes",
        "purgeConceptReferenceRange"
      ],
      "fields": [
        "log",
        "dao",
        "trueConcept",
        "falseConcept",
        "unknownConcept",
        "ERROR_MESSAGE",
        "CONCEPT_IDS_BY_MAPPING_CACHE_NAME"
      ]
    },
    "SerializationServiceImpl": {
      "class_name": "SerializationServiceImpl",
      "file_type": "implementation",
      "total_lines": 155,
      "code_lines": 129,
      "comment_lines": 23,
      "method_count": 7,
      "field_count": 2,
      "import_count": 15,
      "openmrs_import_count": 7,
      "service_dependencies": [
        "AdministrationService"
      ],
      "dependency_count": 1,
      "cyclomatic_complexity": 27,
      "comment_ratio": 0.14838709677419354,
      "methods": [
        "getSerializer",
        "getDefaultSerializer",
        "serialize",
        "deserialize",
        "getSerializers",
        "setSerializerMap",
        "setSerializers"
      ],
      "fields": [
        "log",
        "serializerMap"
      ]
    },
    "ProgramWorkflowServiceImpl": {
      "class_name": "ProgramWorkflowServiceImpl",
      "file_type": "implementation",
      "total_lines": 639,
      "code_lines": 539,
      "comment_lines": 108,
      "method_count": 50,
      "field_count": 2,
      "import_count": 26,
      "openmrs_import_count": 17,
      "service_dependencies": [
        "ProgramWorkflowService"
      ],
      "dependency_count": 1,
      "cyclomatic_complexity": 66,
      "comment_ratio": 0.16901408450704225,
      "methods": [
        "ProgramWorkflowServiceImpl",
        "setProgramWorkflowDAO",
        "saveProgram",
        "ensureProgramIsSet",
        "ensureProgramWorkflowIsSet",
        "getProgram",
        "getProgram",
        "getProgramByName",
        "getAllPrograms",
        "getAllPrograms",
        "getPrograms",
        "purgeProgram",
        "purgeProgram",
        "retireProgram",
        "unretireProgram",
        "savePatientProgram",
        "getPatientProgram",
        "getPatientPrograms",
        "getPatientPrograms",
        "purgePatientProgram",
        "purgePatientProgram",
        "voidPatientProgram",
        "unvoidPatientProgram",
        "getPossibleOutcomes",
        "saveConceptStateConversion",
        "getConceptStateConversion",
        "getAllConceptStateConversions",
        "purgeConceptStateConversion",
        "purgeConceptStateConversion",
        "triggerStateConversion",
        "getConceptStateConversion",
        "getProgramsByConcept",
        "getProgramWorkflowsByConcept",
        "getProgramWorkflowStatesByConcept",
        "getConceptStateConversionByUuid",
        "getPatientProgramByUuid",
        "getProgramByUuid",
        "getState",
        "getStateByUuid",
        "getPatientStateByUuid",
        "getWorkflow",
        "getWorkflowByUuid",
        "getAllProgramAttributeTypes",
        "getProgramAttributeType",
        "getProgramAttributeTypeByUuid",
        "saveProgramAttributeType",
        "purgeProgramAttributeType",
        "getPatientProgramAttributeByUuid",
        "getPatientProgramAttributeByAttributeName",
        "getPatientProgramByAttributeNameAndValue"
      ],
      "fields": [
        "log",
        "dao"
      ]
    },
    "DatatypeServiceImpl": {
      "class_name": "DatatypeServiceImpl",
      "file_type": "interface",
      "total_lines": 237,
      "code_lines": 212,
      "comment_lines": 28,
      "method_count": 13,
      "field_count": 4,
      "import_count": 16,
      "openmrs_import_count": 7,
      "service_dependencies": [],
      "dependency_count": 0,
      "cyclomatic_complexity": 57,
      "comment_ratio": 0.11814345991561181,
      "methods": [
        "setDao",
        "getAllDatatypeClasses",
        "getAllHandlerClasses",
        "populateBeanListsFromContext",
        "getDatatype",
        "getHandlerClasses",
        "datatypeClassHandled",
        "getHandler",
        "prioritizeHandlers",
        "getClobDatatypeStorage",
        "getClobDatatypeStorageByUuid",
        "saveClobDatatypeStorage",
        "deleteClobDatatypeStorage"
      ],
      "fields": [
        "datatypeClasses",
        "handlerClasses",
        "prioritizedHandlerClasses",
        "dao"
      ]
    },
    "StreamDataService": {
      "class_name": "StreamDataService",
      "file_type": "implementation",
      "total_lines": 222,
      "code_lines": 194,
      "comment_lines": 16,
      "method_count": 11,
      "field_count": 7,
      "import_count": 19,
      "openmrs_import_count": 0,
      "service_dependencies": [],
      "dependency_count": 0,
      "cyclomatic_complexity": 22,
      "comment_ratio": 0.07207207207207207,
      "methods": [
        "StreamDataService",
        "QueueInputStream",
        "newQueueOutputStream",
        "read",
        "close",
        "propagateStreamException",
        "checkStreamException",
        "QueueOutputStream",
        "write",
        "close",
        "streamData"
      ],
      "fields": [
        "BUFFER_SIZE",
        "log",
        "taskExecutor",
        "blockingQueue",
        "timeoutNanos",
        "streamException",
        "queueInputStream"
      ]
    },
    "S3StorageService": {
      "class_name": "S3StorageService",
      "file_type": "implementation",
      "total_lines": 246,
      "code_lines": 214,
      "comment_lines": 5,
      "method_count": 9,
      "field_count": 3,
      "import_count": 41,
      "openmrs_import_count": 2,
      "service_dependencies": [],
      "dependency_count": 0,
      "cyclomatic_complexity": 25,
      "comment_ratio": 0.02032520325203252,
      "methods": [
        "S3StorageService",
        "getData",
        "waitForResponse",
        "getMetadata",
        "getKeys",
        "purgeData",
        "waitForBooleanResponse",
        "exists",
        "saveData"
      ],
      "fields": [
        "log",
        "s3AsyncClient",
        "bucketName"
      ]
    },
    "LocalStorageService": {
      "class_name": "LocalStorageService",
      "file_type": "implementation",
      "total_lines": 195,
      "code_lines": 167,
      "comment_lines": 7,
      "method_count": 7,
      "field_count": 3,
      "import_count": 23,
      "openmrs_import_count": 3,
      "service_dependencies": [],
      "dependency_count": 0,
      "cyclomatic_complexity": 17,
      "comment_ratio": 0.035897435897435895,
      "methods": [
        "getData",
        "getLegacyStorageDir",
        "getMetadata",
        "getKeys",
        "saveData",
        "purgeData",
        "exists"
      ],
      "fields": [
        "log",
        "storageDir",
        "mimetypes"
      ]
    },
    "BaseStorageService": {
      "class_name": "BaseStorageService",
      "file_type": "implementation",
      "total_lines": 121,
      "code_lines": 103,
      "comment_lines": 4,
      "method_count": 10,
      "field_count": 3,
      "import_count": 18,
      "openmrs_import_count": 4,
      "service_dependencies": [],
      "dependency_count": 0,
      "cyclomatic_complexity": 11,
      "comment_ratio": 0.03305785123966942,
      "methods": [
        "BaseStorageService",
        "getTempData",
        "saveData",
        "saveData",
        "saveData",
        "saveTempData",
        "saveTempData",
        "newKey",
        "decodeKey",
        "encodeKey"
      ],
      "fields": [
        "streamService",
        "tempDir",
        "keyDateTimeFormat"
      ]
    },
    "TimerSchedulerServiceImpl": {
      "class_name": "TimerSchedulerServiceImpl",
      "file_type": "implementation",
      "total_lines": 553,
      "code_lines": 444,
      "comment_lines": 97,
      "method_count": 25,
      "field_count": 5,
      "import_count": 27,
      "openmrs_import_count": 11,
      "service_dependencies": [],
      "dependency_count": 0,
      "cyclomatic_complexity": 67,
      "comment_ratio": 0.17540687160940324,
      "methods": [
        "getSchedulerDAO",
        "setSchedulerDAO",
        "onStartup",
        "setScheduledTasks",
        "onShutdown",
        "cancelAllTimers",
        "shutdownAllTasks",
        "getTimer",
        "scheduleTask",
        "shutdownTask",
        "rescheduleAllTasks",
        "rescheduleTask",
        "registerTask",
        "getScheduledTasks",
        "getRegisteredTasks",
        "getTask",
        "getTaskByName",
        "saveTaskDefinition",
        "deleteTask",
        "getSystemVariables",
        "saveToMemento",
        "restoreFromMemento",
        "getStatus",
        "scheduleIfNotRunning",
        "getTaskByUuid"
      ],
      "fields": [
        "log",
        "registeredTasks",
        "scheduledTasks",
        "taskDefinitionTimerMap",
        "schedulerDAO"
      ]
    },
    "MessageSourceServiceImpl": {
      "class_name": "MessageSourceServiceImpl",
      "file_type": "implementation",
      "total_lines": 211,
      "code_lines": 182,
      "comment_lines": 38,
      "method_count": 17,
      "field_count": 3,
      "import_count": 14,
      "openmrs_import_count": 4,
      "service_dependencies": [
        "MessageSourceService"
      ],
      "dependency_count": 1,
      "cyclomatic_complexity": 7,
      "comment_ratio": 0.18009478672985782,
      "methods": [
        "getMessage",
        "getActiveMessageSource",
        "setActiveMessageSource",
        "getLocales",
        "getPresentations",
        "getMessage",
        "getMessage",
        "getMessage",
        "addPresentation",
        "removePresentation",
        "getMessageSources",
        "setMessageSources",
        "merge",
        "getPresentation",
        "getPresentationsInLocale",
        "getParentMessageSource",
        "setParentMessageSource"
      ],
      "fields": [
        "log",
        "availableMessageSources",
        "activeMessageSource"
      ]
    },
    "DefaultMessageSourceServiceImpl": {
      "class_name": "DefaultMessageSourceServiceImpl",
      "file_type": "implementation",
      "total_lines": 152,
      "code_lines": 118,
      "comment_lines": 8,
      "method_count": 20,
      "field_count": 2,
      "import_count": 13,
      "openmrs_import_count": 5,
      "service_dependencies": [],
      "dependency_count": 0,
      "cyclomatic_complexity": 3,
      "comment_ratio": 0.05263157894736842,
      "methods": [
        "DefaultMessageSourceServiceImplHolder",
        "getInstance",
        "DefaultMessageSourceServiceImpl",
        "getMessage",
        "getMessage",
        "getMessage",
        "getLocales",
        "getPresentations",
        "getPresentationsInLocale",
        "addPresentation",
        "getPresentation",
        "removePresentation",
        "merge",
        "getMessage",
        "setParentMessageSource",
        "getParentMessageSource",
        "getActiveMessageSource",
        "setActiveMessageSource",
        "getMessageSources",
        "setMessageSources"
      ],
      "fields": [
        "props",
        "INSTANCE"
      ]
    },
    "MessageServiceImpl": {
      "class_name": "MessageServiceImpl",
      "file_type": "implementation",
      "total_lines": 305,
      "code_lines": 272,
      "comment_lines": 40,
      "method_count": 22,
      "field_count": 4,
      "import_count": 18,
      "openmrs_import_count": 11,
      "service_dependencies": [
        "UserService",
        "MessageService"
      ],
      "dependency_count": 2,
      "cyclomatic_complexity": 10,
      "comment_ratio": 0.13114754098360656,
      "methods": [
        "setTemplateDAO",
        "MessageServiceImpl",
        "setMessagePreparator",
        "getMessagePreparator",
        "setMessageSender",
        "getMessageSender",
        "sendMessage",
        "createMessage",
        "createMessage",
        "createMessage",
        "createMessage",
        "sendMessage",
        "sendMessage",
        "sendMessage",
        "sendMessage",
        "sendMessage",
        "sendMessage",
        "prepareMessage",
        "prepareMessage",
        "getAllTemplates",
        "getTemplate",
        "getTemplatesByName"
      ],
      "fields": [
        "log",
        "templateDAO",
        "messageSender",
        "messagePreparator"
      ]
    },
    "AlertServiceImpl": {
      "class_name": "AlertServiceImpl",
      "file_type": "implementation",
      "total_lines": 208,
      "code_lines": 168,
      "comment_lines": 34,
      "method_count": 11,
      "field_count": 3,
      "import_count": 17,
      "openmrs_import_count": 11,
      "service_dependencies": [
        "UserService",
        "AlertService",
        "MessageSourceService"
      ],
      "dependency_count": 3,
      "cyclomatic_complexity": 24,
      "comment_ratio": 0.16346153846153846,
      "methods": [
        "AlertServiceImpl",
        "setAlertDAO",
        "saveAlert",
        "getAlert",
        "purgeAlert",
        "getAllActiveAlerts",
        "getAlertsByUser",
        "getAlerts",
        "getAllAlerts",
        "getAllAlerts",
        "notifySuperUsers"
      ],
      "fields": [
        "serialVersionUID",
        "log",
        "dao"
      ]
    }
  },
  "coupling_matrix": [
    [
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0
    ],
    [
      0,
      1,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0
    ],
    [
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0
    ],
    [
      0,
      0,
      0,
      1,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      1,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0
    ],
    [
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0
    ],
    [
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0
    ],
    [
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0
    ],
    [
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0
    ],
    [
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0
    ],
    [
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0
    ],
    [
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      1,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0
    ],
    [
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      1,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0
    ],
    [
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      1,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0
    ],
    [
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0
    ],
    [
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0
    ],
    [
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0
    ],
    [
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      1,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0
    ],
    [
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      1,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0
    ],
    [
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0
    ],
    [
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0
    ],
    [
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      1,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0
    ],
    [
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0
    ],
    [
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0
    ],
    [
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0
    ],
    [
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0
    ],
    [
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0
    ],
    [
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      1,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0
    ],
    [
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      1,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0
    ],
    [
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0
    ],
    [
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      1,
      1,
      1,
      0,
      0,
      0,
      0,
      1,
      0,
      0,
      1,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      1,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0
    ],
    [
      0,
      0,
      0,
      0,
      1,
      0,
      1,
      0,
      0,
      0,
      1,
      1,
      1,
      0,
      0,
      0,
      1,
      1,
      0,
      1,
      1,
      0,
      1,
      0,
      0,
      0,
      1,
      1,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0
    ],
    [
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      1,
      0,
      1,
      0,
      0,
      0,
      0,
      0,
      1,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0
    ],
    [
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      1,
      0,
      0,
      1,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0
    ],
    [
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0
    ],
    [
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      1,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      1,
      0,
      0,
      0,
      0,
      0,
      0,
      1,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0
    ],
    [
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      1,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      1,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0
    ],
    [
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      1,
      0,
      0,
      0,
      1,
      0,
      0,
      0,
      0,
      0,
      1,
      0,
      0,
      0,
      1,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0
    ],
    [
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0
    ],
    [
      0,
      0,
      0,
      0,
      1,
      0,
      0,
      0,
      0,
      1,
      1,
      0,
      0,
      0,
      0,
      0,
      0,
      1,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0
    ],
    [
      0,
      0,
      0,
      0,
      1,
      0,
      0,
      0,
      0,
      1,
      1,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      1,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0
    ],
    [
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      1,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0
    ],
    [
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      1,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0
    ],
    [
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0
    ],
    [
      0,
      0,
      1,
      0,
      1,
      0,
      0,
      0,
      0,
      0,
      1,
      1,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0
    ],
    [
      0,
      0,
      0,
      0,
      1,
      0,
      1,
      1,
      0,
      0,
      1,
      0,
      1,
      0,
      0,
      0,
      1,
      0,
      0,
      1,
      0,
      0,
      1,
      0,
      1,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0
    ],
    [
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      1,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0
    ],
    [
      0,
      0,
      0,
      0,
      0,
      0,
      1,
      0,
      0,
      0,
      1,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      1,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0
    ],
    [
      0,
      0,
      0,
      0,
      1,
      0,
      0,
      0,
      0,
      0,
      1,
      0,
      0,
      0,
      0,
      0,
      1,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      1,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0
    ],
    [
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      1,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0
    ],
    [
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      1,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0
    ],
    [
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0
    ],
    [
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0
    ],
    [
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0
    ],
    [
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0
    ],
    [
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0
    ],
    [
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0
    ],
    [
      0,
      0,
      0,
      0,
      1,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0
    ],
    [
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0
    ],
    [
      0,
      0,
      1,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      1,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0
    ],
    [
      0,
      1,
      0,
      0,
      1,
      0,
      0,
      0,
      0,
      0,
      0,
      1,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0
    ]
  ],
  "service_names": [
    "Slf4JLogService",
    "AlertService",
    "MessageService",
    "LogicService",
    "MessageSourceService",
    "SchedulerService",
    "VisitService",
    "DiagnosisService",
    "FormService",
    "SerializationService",
    "AdministrationService",
    "UserService",
    "PatientService",
    "ProviderService",
    "CohortService",
    "OrderSetService",
    "ObsService",
    "PersonService",
    "OpenmrsService",
    "OrderService",
    "LocationService",
    "DatatypeService",
    "EncounterService",
    "MedicationDispenseService",
    "ConditionService",
    "StorageService",
    "ConceptService",
    "ProgramWorkflowService",
    "HL7Service",
    "HL7ServiceImpl",
    "PatientServiceImpl",
    "FormServiceImpl",
    "ProviderServiceImpl",
    "BaseOpenmrsService",
    "OrderServiceImpl",
    "LocationServiceImpl",
    "ObsServiceImpl",
    "MedicationDispenseServiceImpl",
    "PersonServiceImpl",
    "AdministrationServiceImpl",
    "CohortServiceImpl",
    "DiagnosisServiceImpl",
    "ConditionServiceImpl",
    "UserServiceImpl",
    "EncounterServiceImpl",
    "OrderSetServiceImpl",
    "VisitServiceImpl",
    "ConceptServiceImpl",
    "SerializationServiceImpl",
    "ProgramWorkflowServiceImpl",
    "DatatypeServiceImpl",
    "StreamDataService",
    "S3StorageService",
    "LocalStorageService",
    "BaseStorageService",
    "TimerSchedulerServiceImpl",
    "MessageSourceServiceImpl",
    "DefaultMessageSourceServiceImpl",
    "MessageServiceImpl",
    "AlertServiceImpl"
  ],
  "fan_in": {
    "Slf4JLogService": 0,
    "AlertService": 2,
    "MessageService": 2,
    "LogicService": 1,
    "MessageSourceService": 8,
    "SchedulerService": 0,
    "VisitService": 3,
    "DiagnosisService": 2,
    "FormService": 1,
    "SerializationService": 2,
    "AdministrationService": 14,
    "UserService": 6,
    "PatientService": 6,
    "ProviderService": 1,
    "CohortService": 1,
    "OrderSetService": 1,
    "ObsService": 6,
    "PersonService": 4,
    "OpenmrsService": 0,
    "OrderService": 3,
    "LocationService": 4,
    "DatatypeService": 0,
    "EncounterService": 4,
    "MedicationDispenseService": 0,
    "ConditionService": 1,
    "StorageService": 0,
    "ConceptService": 6,
    "ProgramWorkflowService": 3,
    "HL7Service": 1,
    "HL7ServiceImpl": 0,
    "PatientServiceImpl": 0,
    "FormServiceImpl": 0,
    "ProviderServiceImpl": 0,
    "BaseOpenmrsService": 0,
    "OrderServiceImpl": 0,
    "LocationServiceImpl": 0,
    "ObsServiceImpl": 0,
    "MedicationDispenseServiceImpl": 0,
    "PersonServiceImpl": 0,
    "AdministrationServiceImpl": 0,
    "CohortServiceImpl": 0,
    "DiagnosisServiceImpl": 0,
    "ConditionServiceImpl": 0,
    "UserServiceImpl": 0,
    "EncounterServiceImpl": 0,
    "OrderSetServiceImpl": 0,
    "VisitServiceImpl": 0,
    "ConceptServiceImpl": 0,
    "SerializationServiceImpl": 0,
    "ProgramWorkflowServiceImpl": 0,
    "DatatypeServiceImpl": 0,
    "StreamDataService": 0,
    "S3StorageService": 0,
    "LocalStorageService": 0,
    "BaseStorageService": 0,
    "TimerSchedulerServiceImpl": 0,
    "MessageSourceServiceImpl": 0,
    "DefaultMessageSourceServiceImpl": 0,
    "MessageServiceImpl": 0,
    "AlertServiceImpl": 0
  },
  "fan_out": {
    "Slf4JLogService": 0,
    "AlertService": 1,
    "MessageService": 0,
    "LogicService": 2,
    "MessageSourceService": 0,
    "SchedulerService": 0,
    "VisitService": 0,
    "DiagnosisService": 0,
    "FormService": 0,
    "SerializationService": 0,
    "AdministrationService": 1,
    "UserService": 1,
    "PatientService": 1,
    "ProviderService": 0,
    "CohortService": 0,
    "OrderSetService": 0,
    "ObsService": 1,
    "PersonService": 1,
    "OpenmrsService": 0,
    "OrderService": 0,
    "LocationService": 1,
    "DatatypeService": 0,
    "EncounterService": 0,
    "MedicationDispenseService": 0,
    "ConditionService": 0,
    "StorageService": 0,
    "ConceptService": 1,
    "ProgramWorkflowService": 1,
    "HL7Service": 0,
    "HL7ServiceImpl": 6,
    "PatientServiceImpl": 12,
    "FormServiceImpl": 3,
    "ProviderServiceImpl": 2,
    "BaseOpenmrsService": 0,
    "OrderServiceImpl": 3,
    "LocationServiceImpl": 2,
    "ObsServiceImpl": 4,
    "MedicationDispenseServiceImpl": 0,
    "PersonServiceImpl": 4,
    "AdministrationServiceImpl": 4,
    "CohortServiceImpl": 1,
    "DiagnosisServiceImpl": 1,
    "ConditionServiceImpl": 0,
    "UserServiceImpl": 4,
    "EncounterServiceImpl": 9,
    "OrderSetServiceImpl": 1,
    "VisitServiceImpl": 3,
    "ConceptServiceImpl": 4,
    "SerializationServiceImpl": 1,
    "ProgramWorkflowServiceImpl": 1,
    "DatatypeServiceImpl": 0,
    "StreamDataService": 0,
    "S3StorageService": 0,
    "LocalStorageService": 0,
    "BaseStorageService": 0,
    "TimerSchedulerServiceImpl": 0,
    "MessageSourceServiceImpl": 1,
    "DefaultMessageSourceServiceImpl": 0,
    "MessageServiceImpl": 2,
    "AlertServiceImpl": 3
  },
  "instability": {
    "Slf4JLogService": 0,
    "AlertService": 0.3333333333333333,
    "MessageService": 0.0,
    "LogicService": 0.6666666666666666,
    "MessageSourceService": 0.0,
    "SchedulerService": 0,
    "VisitService": 0.0,
    "DiagnosisService": 0.0,
    "FormService": 0.0,
    "SerializationService": 0.0,
    "AdministrationService": 0.06666666666666667,
    "UserService": 0.14285714285714285,
    "PatientService": 0.14285714285714285,
    "ProviderService": 0.0,
    "CohortService": 0.0,
    "OrderSetService": 0.0,
    "ObsService": 0.14285714285714285,
    "PersonService": 0.2,
    "OpenmrsService": 0,
    "OrderService": 0.0,
    "LocationService": 0.2,
    "DatatypeService": 0,
    "EncounterService": 0.0,
    "MedicationDispenseService": 0,
    "ConditionService": 0.0,
    "StorageService": 0,
    "ConceptService": 0.14285714285714285,
    "ProgramWorkflowService": 0.25,
    "HL7Service": 0.0,
    "HL7ServiceImpl": 1.0,
    "PatientServiceImpl": 1.0,
    "FormServiceImpl": 1.0,
    "ProviderServiceImpl": 1.0,
    "BaseOpenmrsService": 0,
    "OrderServiceImpl": 1.0,
    "LocationServiceImpl": 1.0,
    "ObsServiceImpl": 1.0,
    "MedicationDispenseServiceImpl": 0,
    "PersonServiceImpl": 1.0,
    "AdministrationServiceImpl": 1.0,
    "CohortServiceImpl": 1.0,
    "DiagnosisServiceImpl": 1.0,
    "ConditionServiceImpl": 0,
    "UserServiceImpl": 1.0,
    "EncounterServiceImpl": 1.0,
    "OrderSetServiceImpl": 1.0,
    "VisitServiceImpl": 1.0,
    "ConceptServiceImpl": 1.0,
    "SerializationServiceImpl": 1.0,
    "ProgramWorkflowServiceImpl": 1.0,
    "DatatypeServiceImpl": 0,
    "StreamDataService": 0,
    "S3StorageService": 0,
    "LocalStorageService": 0,
    "BaseStorageService": 0,
    "TimerSchedulerServiceImpl": 0,
    "MessageSourceServiceImpl": 1.0,
    "DefaultMessageSourceServiceImpl": 0,
    "MessageServiceImpl": 1.0,
    "AlertServiceImpl": 1.0
  },
  "clusters": [
    [
      "LogicService",
      "PatientService"
    ],
    [
      "HL7ServiceImpl",
      "AdministrationService",
      "UserService",
      "PatientService",
      "PersonService",
      "LocationService",
      "HL7Service"
    ],
    [
      "PatientServiceImpl",
      "MessageSourceService",
      "VisitService",
      "AdministrationService",
      "UserService",
      "PatientService",
      "ObsService",
      "PersonService",
      "OrderService",
      "LocationService",
      "EncounterService",
      "ConceptService",
      "ProgramWorkflowService"
    ],
    [
      "FormServiceImpl",
      "FormService",
      "AdministrationService",
      "ObsService"
    ],
    [
      "ProviderServiceImpl",
      "AdministrationService",
      "ProviderService"
    ],
    [
      "OrderServiceImpl",
      "AdministrationService",
      "OrderService",
      "ConceptService"
    ],
    [
      "LocationServiceImpl",
      "AdministrationService",
      "LocationService"
    ],
    [
      "ObsServiceImpl",
      "PatientService",
      "ObsService",
      "EncounterService",
      "ConceptService"
    ],
    [
      "PersonServiceImpl",
      "MessageSourceService",
      "SerializationService",
      "AdministrationService",
      "PersonService"
    ],
    [
      "AdministrationServiceImpl",
      "MessageSourceService",
      "SerializationService",
      "AdministrationService",
      "ConceptService"
    ],
    [
      "CohortServiceImpl",
      "CohortService"
    ],
    [
      "DiagnosisServiceImpl",
      "DiagnosisService"
    ],
    [
      "UserServiceImpl",
      "MessageService",
      "MessageSourceService",
      "AdministrationService",
      "UserService"
    ],
    [
      "EncounterServiceImpl",
      "MessageSourceService",
      "VisitService",
      "DiagnosisService",
      "AdministrationService",
      "PatientService",
      "ObsService",
      "OrderService",
      "EncounterService",
      "ConditionService"
    ],
    [
      "OrderSetServiceImpl",
      "OrderSetService"
    ],
    [
      "VisitServiceImpl",
      "VisitService",
      "AdministrationService",
      "EncounterService"
    ],
    [
      "ConceptServiceImpl",
      "MessageSourceService",
      "AdministrationService",
      "ObsService",
      "ConceptService"
    ],
    [
      "SerializationServiceImpl",
      "AdministrationService"
    ],
    [
      "ProgramWorkflowServiceImpl",
      "ProgramWorkflowService"
    ],
    [
      "MessageSourceServiceImpl",
      "MessageSourceService"
    ],
    [
      "MessageServiceImpl",
      "MessageService",
      "UserService"
    ],
    [
      "AlertServiceImpl",
      "AlertService",
      "MessageSourceService",
      "UserService"
    ]
  ],
  "summary": {
    "total_services": 60,
    "average_fan_in": 1.3666666666666667,
    "average_fan_out": 1.3666666666666667,
    "average_instability": 0.3881349206349206,
    "high_fan_out_services": {
      "HL7ServiceImpl": 6,
      "PatientServiceImpl": 12,
      "FormServiceImpl": 3,
      "OrderServiceImpl": 3,
      "ObsServiceImpl": 4,
      "PersonServiceImpl": 4,
      "AdministrationServiceImpl": 4,
      "UserServiceImpl": 4,
      "EncounterServiceImpl": 9,
      "VisitServiceImpl": 3,
      "ConceptServiceImpl": 4,
      "AlertServiceImpl": 3
    },
    "highly_unstable_services": {
      "HL7ServiceImpl": 1.0,
      "PatientServiceImpl": 1.0,
      "FormServiceImpl": 1.0,
      "ProviderServiceImpl": 1.0,
      "OrderServiceImpl": 1.0,
      "LocationServiceImpl": 1.0,
      "ObsServiceImpl": 1.0,
      "PersonServiceImpl": 1.0,
      "AdministrationServiceImpl": 1.0,
      "CohortServiceImpl": 1.0,
      "DiagnosisServiceImpl": 1.0,
      "UserServiceImpl": 1.0,
      "EncounterServiceImpl": 1.0,
      "OrderSetServiceImpl": 1.0,
      "VisitServiceImpl": 1.0,
      "ConceptServiceImpl": 1.0,
      "SerializationServiceImpl": 1.0,
      "ProgramWorkflowServiceImpl": 1.0,
      "MessageSourceServiceImpl": 1.0,
      "MessageServiceImpl": 1.0,
      "AlertServiceImpl": 1.0
    }
  }
}