<?xml version="1.0"?>
<!--

    This Source Code Form is subject to the terms of the Mozilla Public License,
    v. 2.0. If a copy of the MPL was not distributed with this file, You can
    obtain one at http://mozilla.org/MPL/2.0/. OpenMRS is also distributed under
    the terms of the Healthcare Disclaimer located at http://openmrs.org/license.

    Copyright (C) OpenMRS Inc. OpenMRS is a registered trademark and the OpenMRS
    graphic logo is a trademark of OpenMRS Inc.

-->
<!DOCTYPE module PUBLIC
		  "-//Puppy Crawl//DTD Check Configuration 1.3//EN"
		  "http://www.puppycrawl.com/dtds/configuration_1_3.dtd">

<!--
	This Checkstyle configuration is based on the Google coding conventions from Google Java Style
	with some modifications specific to OpenMRS.

	You can find a list of the rules with explanations and a references to a sample checkstyle.xml at

	http://checkstyle.sourceforge.net/google_style.html


	Checkstyle is very configurable. Be sure to read the documentation at
	http://checkstyle.sf.net (or in your downloaded distribution).
 -->

 <!--
    NOTE:
    Some Checkstyle properties have been commented out due to compatibility issues
    with plugin version 3.6.0. Please review if upgrading plugin in the future.
-->

<module name = "Checker">
	<property name="charset" value="UTF-8"/>

	<!--
		We default to 'warning' and set only specific rules to 'error'
	-->
	<property name="severity" value="warning"/>

	<property name="fileExtensions" value="java, xml"/>

	<!--
		SuppressionFilter can supply a file that contains a list of specific
		audits that should be suppressed.
		http://checkstyle.sourceforge.net/config.html
	-->
	<module name="SuppressionFilter">
		<property name="file" value="checkstyle-suppressions.xml"/>
	</module>

	<module name="FileLength">
		<property name="fileExtensions" value="java"/>
		<property name="max" value="1500"/>
		<property name="severity" value="error"/>
	</module>

	<module name="RegexpSingleline">
		<property name="format" value="System\.out\.println\(\)"/>
		<property name="message"
			value="System.out.println() should not be used. Use logging convention instead."/>
		<property name="severity" value="error"/>
	</module>

	<module name="RegexpSingleline">
		<property name="id" value="IllegalPrintStackTrace"/>
		<property name="format" value="\.printStackTrace\(\)"/>
		<property name="message"
			value="ex.PrintStackTrace() should not be used. Use logging convention instead."/>
		<property name="severity" value="error"/>
	</module>

	<module name="RegexpSingleline">
		<property name="id" value="InefficientCurrentTime" />
		<property name="format" value="new Date\(\)\.getTime\(\)"/>
		<property name="message" value="Use System.currentTimeMillis() instead of new Date().getTime()."/>
		<property name="severity" value="error"/>
	</module>

	<!--                                                -->
	<!--                MISCELLANEOUS CHECKS            -->
	<!--                                                -->

	<!-- Ensure translation files contain the same keys -->
	<module name="Translation">
		<property name="severity" value="warning" default="error"/>
	</module>

	<module name="TreeWalker">
		<!-- Defines expected tab width for checks that require a tab width -->
		<property name="tabWidth" value="4"/>

		<module name="OuterTypeFilename"/>
		<module name="IllegalTokenText">
			<property name="tokens" value="STRING_LITERAL, CHAR_LITERAL"/>
			<property name="format" value="\\u00(09|0(a|A)|0(c|C)|0(d|D)|22|27|5(C|c))|\\(0(10|11|12|14|15|42|47)|134)"/>
			<property name="message"
					  value="Consider using special escape sequence instead of octal value or Unicode escaped value."/>
		</module>
		<module name="AvoidEscapedUnicodeCharacters">
			<property name="allowEscapesForControlCharacters" value="true"/>
			<property name="allowByTailComment" value="true"/>
			<property name="allowNonPrintableEscapes" value="true"/>
		</module>

		<!-- Removed: 'LineLength' module is not compatible with Checkstyle 3.6.0 or causing config errors -->
		<!--
		<module name="LineLength">
			<property name="max" value="125"/>
			<property name="ignorePattern" value="^package.*|^import.*|a href|href|http://|https://|ftp://"/>
		</module>
		-->
		<module name="AvoidStarImport">
			<property name="severity" value="error"/>
		</module>
		<module name="RedundantImport">
			<property name="severity" value="error"/>
		</module>
		<module name="UnusedImports">
			<property name="severity" value="error"/>
		</module>
		<module name="IllegalImport">
			<property name="illegalPkgs" value="sun, org.apache.commons.logging, org.apache.commons.lang, org.openmrs.test.Verifies, org.apache.xerces" />
			<property name="severity" value="error"/>
		</module>
		<module name="OneTopLevelClass">
			<property name="severity" value="error"/>
		</module>
		<module name="NoLineWrap"/>
		<module name="EmptyBlock">
			<property name="option" value="TEXT"/>
			<property name="tokens" value="LITERAL_TRY, LITERAL_FINALLY, LITERAL_IF, LITERAL_ELSE, LITERAL_SWITCH"/>
		</module>
		<module name="NeedBraces">
			<property name="severity" value="error"/>
		</module>

		<!-- Removed: LeftCurly module causes issues with Checkstyle 3.6.0 -->
		<!--
		<module name="LeftCurly">
			<property name="option" value="eol" />
			<property name="maxLineLength" value="100"/>
		</module>
		-->
		<module name="RightCurly">
			<property name="id" value="RightCurlySame"/>
			<property name="tokens"
					  value="LITERAL_TRY, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_IF, LITERAL_ELSE, LITERAL_DO"/>
		</module>
		<module name="RightCurly">
			<property name="id" value="RightCurlyAlone"/>
			<property name="option" value="alone"/>
			<property name="tokens"
					  value="CLASS_DEF, METHOD_DEF, CTOR_DEF, LITERAL_FOR, LITERAL_WHILE, STATIC_INIT, INSTANCE_INIT"/>
		</module>
		<module name="WhitespaceAround">
			<property name="allowEmptyConstructors" value="true"/>
			<property name="allowEmptyMethods" value="true"/>
			<property name="allowEmptyTypes" value="true"/>
			<property name="allowEmptyLoops" value="true"/>
			<message key="ws.notFollowed"
			 value="WhitespaceAround: ''{0}'' is not followed by whitespace. Empty blocks may only be represented as '{}' when not part of a multi-block statement (4.1.3)"/>
			 <message key="ws.notPreceded"
			 value="WhitespaceAround: ''{0}'' is not preceded with whitespace."/>
		</module>
		<module name="OneStatementPerLine"/>
		<module name="MultipleVariableDeclarations">
			<property name="severity" value="error"/>
		</module>
		<module name="ArrayTypeStyle"/>
		<module name="MissingSwitchDefault"/>
		<module name="FallThrough">
			<property name="severity" value="error"/>
		</module>
		<module name="UpperEll">
			<property name="severity" value="error"/>
		</module>
		<module name="EqualsHashCode">
			<property name="severity" value="error"/>
		</module>
		<module name="StringLiteralEquality">
			<property name="severity" value="error"/>
		</module>
		<module name="EqualsAvoidNull">
			<property name="severity" value="error"/>
		</module>
		<module name="NoClone"/>
		<module name="ModifierOrder"/>
		<module name="EmptyLineSeparator">
			<property name="allowNoEmptyLineBetweenFields" value="true"/>
			<property name="tokens"
					  value="IMPORT, CLASS_DEF, INTERFACE_DEF, ENUM_DEF, STATIC_INIT, INSTANCE_INIT, METHOD_DEF, CTOR_DEF, VARIABLE_DEF"/>
		</module>
		<module name="SeparatorWrap">
			<property name="id" value="SeparatorWrapDot"/>
			<property name="tokens" value="DOT"/>
			<property name="option" value="nl"/>
		</module>
		<module name="SeparatorWrap">
			<property name="id" value="SeparatorWrapComma"/>
			<property name="tokens" value="COMMA"/>
			<property name="option" value="EOL"/>
		</module>
		<module name="PackageDeclaration">
			<property name="severity" value="error"/>
		</module>
		<module name="PackageName">
			<property name="format" value="^[a-z]+(\.[a-z][a-z0-9]*)*$"/>
			<message key="name.invalidPattern"
			 value="Package name ''{0}'' must match pattern ''{1}''."/>
			<property name="severity" value="error"/>
		</module>
		<module name="TypeName">
			<message key="name.invalidPattern"
			 value="Type name ''{0}'' must match pattern ''{1}''."/>
			<property name="severity" value="error"/>
		</module>
		<module name="MemberName">
			<property name="format" value="^[a-z][a-z0-9][a-zA-Z0-9]*$"/>
			<message key="name.invalidPattern"
			 value="Member name ''{0}'' must match pattern ''{1}''."/>
			<property name="severity" value="error"/>
		</module>
		<module name="ParameterName">
			<property name="format" value="^[a-z]([a-z0-9][a-zA-Z0-9]*)?$"/>
			<message key="name.invalidPattern"
			 value="Parameter name ''{0}'' must match pattern ''{1}''."/>
			<property name="severity" value="error"/>
		</module>
		<module name="ParameterNumber">
			<property name="max" value="5" />
			<property name="severity" value="error"/>
		</module>
		<module name="LocalVariableName">
			<property name="tokens" value="VARIABLE_DEF"/>
			<property name="format" value="^[a-z]([a-z0-9][a-zA-Z0-9]*)?$"/>
			<message key="name.invalidPattern"
			 value="Local variable name ''{0}'' must match pattern ''{1}''."/>
			<property name="severity" value="error"/>
		</module>
		<module name="ClassTypeParameterName">
			<property name="format" value="(^[A-Z][0-9]?)$|([A-Z][a-zA-Z0-9]*[T]$)"/>
			<message key="name.invalidPattern"
			 value="Class type name ''{0}'' must match pattern ''{1}''."/>
			<property name="severity" value="error"/>
		</module>
		<module name="MethodTypeParameterName">
			<property name="format" value="(^[A-Z][0-9]?)$|([A-Z][a-zA-Z0-9]*[T]$)"/>
			<message key="name.invalidPattern"
			 value="Method type name ''{0}'' must match pattern ''{1}''."/>
			<property name="severity" value="error"/>
		</module>
		<module name="InterfaceTypeParameterName">
			<property name="format" value="(^[A-Z][0-9]?)$|([A-Z][a-zA-Z0-9]*[T]$)"/>
			<message key="name.invalidPattern"
			 value="Interface type name ''{0}'' must match pattern ''{1}''."/>
			<property name="severity" value="error"/>
		</module>
		<module name="NoFinalizer"/>
		<module name="NoWhitespaceBefore"/>
		<module name="NoWhitespaceAfter">
			<property name="tokens"
				value="BNOT, DEC, DOT, INC, LNOT, UNARY_MINUS, UNARY_PLUS"/>
		</module>
		<module name="GenericWhitespace">
			<message key="ws.followed"
			 value="GenericWhitespace ''{0}'' is followed by whitespace."/>
			 <message key="ws.preceded"
			 value="GenericWhitespace ''{0}'' is preceded with whitespace."/>
			 <message key="ws.illegalFollow"
			 value="GenericWhitespace ''{0}'' should followed by whitespace."/>
			 <message key="ws.notPreceded"
			 value="GenericWhitespace ''{0}'' is not preceded with whitespace."/>
		</module>
		<!--<module name="Indentation">-->
			<!--<property name="basicOffset" value="4"/>-->
			<!--<property name="braceAdjustment" value="0"/>-->
			<!--<property name="caseIndent" value="4"/>-->
			<!--<property name="throwsIndent" value="4"/>-->
			<!--<property name="lineWrappingIndentation" value="4"/>-->
			<!--<property name="arrayInitIndent" value="4"/>-->
		<!--</module>-->
		<module name="NestedIfDepth">
			<property name="max" value="4"/>
			<property name="severity" value="error"/>
		</module>
		<module name="NestedTryDepth">
			<property name="max" value="2"/>
			<property name="severity" value="error"/>
		</module>
		<module name="AbbreviationAsWordInName">
			<property name="ignoreFinal" value="false"/>
			<property name="allowedAbbreviationLength" value="1"/>
		</module>
		<module name="MagicNumber">
			<property name="ignoreAnnotation" value="true"/>
			<property name="severity" value="error"/>
		</module>
		<module name="OverloadMethodsDeclarationOrder">
			<property name="severity" value="error"/>
		</module>
		<module name="VariableDeclarationUsageDistance">
			<property name="severity" value="error"/>
		</module>
		<!--
			The order should match the default Eclipse behavior see
				http://checkstyle.sourceforge.net/config_imports.html#CustomImportOrder_Example
			But import ordering is known to be tricky and hard to
			configure correctly across IDEs. Also the maven formatter does not take care of import ordering.
			This has to be configured by every developer in their IDE and executed in every file they touch!
		-->
		<module name="CustomImportOrder">
			<property name="customImportOrderRules"
					  value="STATIC###STANDARD_JAVA_PACKAGE###SPECIAL_IMPORTS###THIRD_PARTY_PACKAGE"/>
			<property name="specialImportsRegExp" value="^org\."/>
			<property name="thirdPartyPackageRegExp" value="^com\."/>
			<property name="sortImportsInGroupAlphabetically" value="true"/>
			<property name="separateLineBetweenGroups" value="true"/>
		</module>
		<module name="MethodParamPad"/>
		<module name="TypecastParenPad"/>
		<module name="ParenPad"/>
		<module name="OperatorWrap">
			<property name="option" value="NL"/>
			<property name="tokens"
					  value="BAND, BOR, BSR, BXOR, DIV, EQUAL, GE, GT, LAND, LE, LITERAL_INSTANCEOF, LOR, LT, MINUS, MOD, NOT_EQUAL, PLUS, QUESTION, SL, SR, STAR"/>
		</module>
		<module name="AnnotationLocation">
			<property name="id" value="AnnotationLocationMostCases"/>
			<property name="tokens" value="CLASS_DEF, INTERFACE_DEF, ENUM_DEF, METHOD_DEF, CTOR_DEF"/>
		</module>
		<module name="AnnotationLocation">
			<property name="id" value="AnnotationLocationVariables"/>
			<property name="tokens" value="VARIABLE_DEF"/>
			<property name="allowSamelineMultipleAnnotations" value="true"/>
		</module>
		<module name="MissingOverride">
			<property name="javaFiveCompatibility" value="false"/>
			<property name="severity" value="error"/>
		</module>
		<module name="NonEmptyAtclauseDescription"/>
		<module name="JavadocTagContinuationIndentation"/>
		<module name="SummaryJavadoc">
			<property name="forbiddenSummaryFragments"
					  value="^@return the *|^This method returns |^A [{]@code [a-zA-Z0-9]+[}]( is a )"/>
			<property name="period" value=""/>
		</module>
		<module name="JavadocParagraph"/>
		<module name="AtclauseOrder">
			<property name="tagOrder" value="@param, @return, @throws, @deprecated"/>
			<property name="target" value="CLASS_DEF, INTERFACE_DEF, ENUM_DEF, METHOD_DEF, CTOR_DEF, VARIABLE_DEF"/>
		</module>
		<module name="JavadocMethod">
			 <!--Removed: 'scope' is not a valid property in Checkstyle 3.6.0.-->
			 <!--<property name="scope" value="public"/>-->
			
			 <!-- Removed: Not supported in this version of Checkstyle.-->
			<!--<property name="allowMissingParamTags" value="true"/>-->

			<!--Removed: Checkstyle 3.6.0 does not recognize this property.-->
			<!--<property name="allowMissingThrowsTags" value="true"/>-->

			<!--Removed: This property causes configuration failure with Checkstyle 3.6.0.-->
			<!--<property name="allowMissingReturnTag" value="true"/>-->

			<!--Removed: Property not supported in Checkstyle 3.6.0.-->
			  <!--<property name="minLineCount" value="2"/>-->
			  <property name="allowedAnnotations" value="Override, Test"/>

			  <!--Removed: This is not supported in Checkstyle 3.6.0.-->
			<!--<property name="allowThrowsTagsForSubclasses" value="true"/>-->
		</module>
		<module name="MethodName">
			<property name="format" value="^[a-z][a-z0-9][a-zA-Z0-9_]*$"/>
			<message key="name.invalidPattern"
			 value="Method name ''{0}'' must match pattern ''{1}''."/>
			<property name="severity" value="error"/>
		</module>
		<module name="MethodLength">
			<property name="max" value="75"/>
			<property name="severity" value="error"/>
		</module>
		<module name="NPathComplexity">
			<property name="severity" value="error"/>
		</module>
		<module name="SimplifyBooleanReturn"/>
		<module name="SingleLineJavadoc">
			<property name="ignoreInlineTags" value="false"/>
		</module>
		<module name="EmptyCatchBlock">
			<property name="exceptionVariableName" value="expected"/>
			<property name="severity" value="error"/>
		</module>
		<module name="IllegalCatch">
			<property name="illegalClassNames" value=" java.lang.Throwable, java.lang.RuntimeException"/>
			<property name="severity" value="error"/>
		</module>
		<module name="IllegalThrows">
			<property name="illegalClassNames"
			          value="java.lang.Throwable, java.lang.Exception, java.lang.Error, java.lang.RuntimeException, java.lang.NullPointerException"/>
			<property name="severity" value="error"/>
		</module>
		<module name="IllegalInstantiation">
			<property name="classes" value="java.lang.Boolean"/>
			<property name="severity" value="error"/>
		</module>
		<module name="InnerAssignment">
			<property name="severity" value="error"/>
		</module>
		<module name="CommentsIndentation"/>
	</module>
</module>
