<?xml version="1.0" encoding="UTF-8"?>
<!--

    This Source Code Form is subject to the terms of the Mozilla Public License,
    v. 2.0. If a copy of the MPL was not distributed with this file, You can
    obtain one at http://mozilla.org/MPL/2.0/. OpenMRS is also distributed under
    the terms of the Healthcare Disclaimer located at http://openmrs.org/license.

    Copyright (C) OpenMRS Inc. OpenMRS is a registered trademark and the OpenMRS
    graphic logo is a trademark of OpenMRS Inc.

-->

<!-- Application context definition for Spring for the OpenMRS web layer.
-->
<!-- See /metadata/api/spring/applicationContext-service.xml for layer agnostic spring setup
-->

<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:p="http://www.springframework.org/schema/p"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xmlns:jee="http://www.springframework.org/schema/jee"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       		http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
			http://www.springframework.org/schema/context
			http://www.springframework.org/schema/context/spring-context-3.0.xsd
			http://www.springframework.org/schema/jee
			http://www.springframework.org/schema/jee/spring-jee-3.0.xsd
			http://www.springframework.org/schema/tx
			http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
			http://www.springframework.org/schema/aop
           	http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
            http://www.springframework.org/schema/util
            http://www.springframework.org/schema/util/spring-util-3.0.xsd">
            	
	<!--  **************************  VIEW RESOLVER / CONTROLLERS  *************************  -->
	
	<bean id="jspViewResolver"
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="viewClass" value="org.springframework.web.servlet.view.JstlView" />
		<property name="prefix" value="/WEB-INF/view/" />
		<property name="suffix" value=".jsp" />
	</bean>

	<bean id="multipartResolver"
		class="org.springframework.web.multipart.support.StandardServletMultipartResolver">
	</bean>
	
	<bean id="contentNegotiationManager"
		  class="org.springframework.web.accept.ContentNegotiationManagerFactoryBean">
		<property name="defaultContentType" value="application/json" />
		<property name="favorPathExtension" value="true" />

		<property name="mediaTypes">
			<map>
				<entry key="json" value="application/json" />
				<entry key="xml" value="application/xml" />
			</map>
		</property>
	</bean>
	
	<bean class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
		<property name="contentNegotiationManager" ref="contentNegotiationManager" />
		<property name="defaultViews">
			<list>
				<bean class="org.springframework.web.servlet.view.json.MappingJackson2JsonView">
					<property name="extractValueFromSingleKeyModel" value="true" />
				</bean>
				<bean class="org.springframework.web.servlet.view.xml.MarshallingView">
           			<property name="marshaller" ref="xStreamMarshaller"/>
        		</bean>
			</list>
		</property>
	</bean>
	
	<bean id="xStreamMarshaller" class="org.springframework.oxm.xstream.XStreamMarshaller" />

	<bean id="xmlMarshallingHttpMessageConverter" class="org.springframework.http.converter.xml.MarshallingHttpMessageConverter">
 		<property name="marshaller" ref="xStreamMarshaller" />
		<property name="unmarshaller" ref="xStreamMarshaller" />
	</bean>
	
	<!--  Exception handler mappings --> 
 		 
 	<bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver"> 
 		<property name="exceptionMappings"> 
 			<map>
				<entry key="java.lang.Exception" value="uncaughtException"/>
 			</map> 
 		</property> 
 		<property name="order" value="100" /> 
 	</bean>
	
	<!-- So that controllers can use annotations like @Controller and @RequestMapping
-->
	<bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping">
		<!-- makes annotations more important than default mappings -->
		<property name="order"><value>98</value></property>
	</bean>

	<bean class="org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter"/>

	<bean id="openmrsObjectMapperFactoryBean" class="org.springframework.http.converter.json.Jackson2ObjectMapperFactoryBean">
		<property name="modulesToInstall" value="org.openmrs.util.OpenmrsJacksonLocaleModule" />
	</bean>
	
	<bean id="jacksonMessageConverter" class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
		<property name="objectMapper" ref="openmrsObjectMapperFactoryBean" />
	</bean>

	<bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
		<property name="webBindingInitializer">
			<bean class="org.openmrs.web.OpenmrsBindingInitializer"/>
		</property>
		<property name="messageConverters">
			<list>
				<bean class="org.springframework.http.converter.ByteArrayHttpMessageConverter" />
				<bean class="org.springframework.http.converter.StringHttpMessageConverter" />
				<bean class="org.springframework.http.converter.FormHttpMessageConverter" />
				<bean class="org.springframework.http.converter.xml.SourceHttpMessageConverter" />
				<ref bean="jacksonMessageConverter" />
				<ref bean="xmlMarshallingHttpMessageConverter" />
			</list>
		</property>
	</bean>
		
	<bean id="conversion-service" class="org.springframework.format.support.FormattingConversionServiceFactoryBean" />
	
	<!-- The default place to look for controllers that have annotations -->
	<context:component-scan base-package="org.openmrs.web.controller" />
	
	<bean id="urlMapping" class="org.springframework.web.servlet.handler.SimpleUrlHandlerMapping">
		<property name="order"><value>99</value></property>
	</bean>

	<!-- Use an alias to the messageSourceService (defined in applicationContext-service.xml)
		to override the application MessageSource, which must be named "messageSource".
	-->	
	<alias name="messageSourceServiceTarget" alias="messageSource"/>
		
	<!-- Find/replace strings after errant 'contrl-shift-f':
		>\r\n			<value>(.*)</value>\r\n		</property>
		><value>$1</value></property>
	-->
</beans>
